<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_06) on Mon May 10 15:38:11 KST 2010 -->
<META http-equiv="Content-Type" content="text/html; charset=euc-kr">
<TITLE>
SignedData
</TITLE>

<META NAME="keywords" CONTENT="com.gpki.gpkiapi.cms.SignedData class">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="SignedData";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>GPKIAPI <br>V1.4.0.0</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SignedData.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.gpki.gpkiapi.cms</FONT>
<BR>
Class SignedData</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by"><B>com.gpki.gpkiapi.cms.SignedData</B>
</PRE>
<HR>
<DL>
<DT>public class <B>SignedData</B><DT>extends java.lang.Object</DL>

<P>
유선 환경에서의 서명 메시지를 생성/처리한다.<br>
 <br>
 서명 메시지는 서명자가 메시지에 대해서 해당 메시지는 변조 되지 않았고, 
 서명 값이 다른 사람에 의해서 위조되지 않았음을 나타내는 메시지로서 서명자는 
 자신만이 소유하고 있는 개인키를 이용하여 메시지를 서명하여, 메시지, 인증서, 
 서명값 등을 조합하여 서명 메시지를 생성하고, 서명 메시지 검증자는 서명 
 메시지에 포함되어있는 인증서를 이용하여 메시지의 서명값을 검증하여 메시지의 
 변조여부를 확인한다.<br>
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms"><CODE>SignedContent</CODE></A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#OPT_USE_CONTENT_INFO">OPT_USE_CONTENT_INFO</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지 생성 옵션. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#OPT_USE_SET_CAPUBS">OPT_USE_SET_CAPUBS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지 생성 옵션. </TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#SignedData()">SignedData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지 생성/처리를 위한 SignedData 객체를 생성한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#SignedData(int)">SignedData</A></B>(int&nbsp;option)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;옵션을 지정하여 서명 메시지 생성/처리를 위한 SignedData 객체를 생성한다.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#addSigner(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">addSigner</A></B>(byte[]&nbsp;signedData,
          <A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
          <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;이미 생성된 서명 메시지에 서명을 추가한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#generate_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)">generate_File</A></B>(<A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
              <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
              java.lang.String&nbsp;signedDataFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성하여 파일로 저장한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#generate_noContent_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)">generate_noContent_File</A></B>(<A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
                        <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
                        java.lang.String&nbsp;signedDataFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성하여 파일로 저장한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#generate(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)">generate</A></B>(<A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
         <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getCaPubs()">getCaPubs</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getMessage()">getMessage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 되었던 원본 메시지를 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCert(int)">getSignerCert</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명자의 인증서를 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCnt()">getSignerCnt</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지의 서명자 수를 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Date</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSigningTime(int)">getSigningTime</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;해당 인덱스 서명자의 서명 시간을 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getTBTData(int)">getTBTData</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지에서 시점확인 토큰을 받기 위한 데이터 또는 시점확인 토큰에 대한 시점확인을 
 요청했던 메시지를 획득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getTimeStampToken(int)">getTimeStampToken</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명메시지에서 서명에 대한 시점확인 토큰을 회득한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setCaPubs(byte[])">setCaPubs</A></B>(byte[]&nbsp;capubs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;상위 인증서 목록(CaPubs)을 지정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setConfFile(java.lang.String)">setConfFile</A></B>(java.lang.String&nbsp;confFile)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;환경파일 위치를 지정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setHashAlgo(java.lang.String)">setHashAlgo</A></B>(java.lang.String&nbsp;hashAlg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 시 사용할 해쉬 알고리즘을 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage_File(java.lang.String)">setMessage_File</A></B>(java.lang.String&nbsp;msgFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명할 메시지 파일 위치를 설정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage(byte[])">setMessage</A></B>(byte[]&nbsp;msg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;원본 메시지를 설정한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setSignerCert(int, int, byte[], long, byte[], byte[], byte[])">setSignerCert</A></B>(int&nbsp;index,
              int&nbsp;size,
              byte[]&nbsp;cert,
              long&nbsp;signTime,
              byte[]&nbsp;tbtData,
              byte[]&nbsp;tst,
              byte[]&nbsp;capubs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setSignTime(java.util.Date)">setSignTime</A></B>(java.util.Date&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 생성하는 시간을 지정한다. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setTimeStampToken(byte[], int, com.gpki.gpkiapi.tsa.TimeStampToken)">setTimeStampToken</A></B>(byte[]&nbsp;signedData,
                  int&nbsp;signerIndex,
                  <A HREF="../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>&nbsp;tst)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지에 시점확인 토큰을 지정한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify_File(java.lang.String, java.lang.String)">verify_File</A></B>(java.lang.String&nbsp;signedDataFilePath,
            java.lang.String&nbsp;msgFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 검증한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify_noContetn_File(java.lang.String, java.lang.String)">verify_noContetn_File</A></B>(java.lang.String&nbsp;signedDataFilePath,
                      java.lang.String&nbsp;msgFilePath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;원본 메시지가 포함되어있지 않은 서명 메시지를 검증한다.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])">verify</A></B>(byte[]&nbsp;signedData)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;서명 메시지를 검증한다.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="OPT_USE_CONTENT_INFO"><!-- --></A><H3>
OPT_USE_CONTENT_INFO</H3>
<PRE>
public static final int <B>OPT_USE_CONTENT_INFO</B></PRE>
<DL>
<DD>서명 메시지 생성 옵션. 서명 메시지 생성시, ContentInfo로 싸도록 한다.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.gpki.gpkiapi.cms.SignedData.OPT_USE_CONTENT_INFO">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="OPT_USE_SET_CAPUBS"><!-- --></A><H3>
OPT_USE_SET_CAPUBS</H3>
<PRE>
public static final int <B>OPT_USE_SET_CAPUBS</B></PRE>
<DL>
<DD>서명 메시지 생성 옵션. 서명 메시지 생성시, 서명자의 상위 인증서 목록(CaPubs)을 포함시키도록 한다.
 이 옵션 사용시 상위 인증서 목록 획득을 위해서 환경 파일 위치를 지정하거나 직접 지정해 주어야 한다.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setConfFile(java.lang.String)"><CODE>setConfFile(String)</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setCaPubs(byte[])"><CODE>setCaPubs(byte[])</CODE></A>, 
<A HREF="../../../../constant-values.html#com.gpki.gpkiapi.cms.SignedData.OPT_USE_SET_CAPUBS">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SignedData()"><!-- --></A><H3>
SignedData</H3>
<PRE>
public <B>SignedData</B>()</PRE>
<DL>
<DD>서명 메시지 생성/처리를 위한 SignedData 객체를 생성한다. 기본적으로 생성되는 메시지는
 ContentInfo를 사용하지 않는다.
<P>
</DL>
<HR>

<A NAME="SignedData(int)"><!-- --></A><H3>
SignedData</H3>
<PRE>
public <B>SignedData</B>(int&nbsp;option)</PRE>
<DL>
<DD>옵션을 지정하여 서명 메시지 생성/처리를 위한 SignedData 객체를 생성한다.
<P>
<DT><B>Parameters:</B><DD><CODE>option</CODE> - SignedData 생성 시 옵션을 지정한다. 지정된 옵션은 generate(), 
 generate_noContent_File() 메소드에만 적용된다.<DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#generate(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><CODE>generate(X509Certificate, PrivateKey)</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#generate_noContent_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><CODE>generate_noContent_File(X509Certificate, PrivateKey, String)</CODE></A></DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="setConfFile(java.lang.String)"><!-- --></A><H3>
setConfFile</H3>
<PRE>
public void <B>setConfFile</B>(java.lang.String&nbsp;confFile)</PRE>
<DL>
<DD>환경파일 위치를 지정한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>confFile</CODE> - 환경파일 위치</DL>
</DD>
</DL>
<HR>

<A NAME="setCaPubs(byte[])"><!-- --></A><H3>
setCaPubs</H3>
<PRE>
public void <B>setCaPubs</B>(byte[]&nbsp;capubs)</PRE>
<DL>
<DD>상위 인증서 목록(CaPubs)을 지정한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>capubs</CODE> - 상위 인증서 목록</DL>
</DD>
</DL>
<HR>

<A NAME="setHashAlgo(java.lang.String)"><!-- --></A><H3>
setHashAlgo</H3>
<PRE>
public void <B>setHashAlgo</B>(java.lang.String&nbsp;hashAlg)
                 throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 시 사용할 해쉬 알고리즘을 설정한다.<br>
 KCDSA1024 인증서를 사용할 경우에는, SHA1 만 설정이 가능하고 <br>
 그 외의 인증서는 SHA1, SHA256 설정이 가능하다. <br>
 만약 setHashAlgo 를 호출하지 않아 해쉬 알고리즘이 지정되지 않은 경우, <br>
 서명하는 인증서 내부의 서명 알고리즘에 따라 서명을 한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>hashAlg</CODE> - "SHA1", "SHA256"
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setMessage(byte[])"><!-- --></A><H3>
setMessage</H3>
<PRE>
public void <B>setMessage</B>(byte[]&nbsp;msg)
                throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>원본 메시지를 설정한다. 서명 메시지를 생성하거나 검증하고자 하는 서명 메시지에 
 원본이 포함되지 않은 경우에 설정한다.<br>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - 원본 메시지
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setMessage_File(java.lang.String)"><!-- --></A><H3>
setMessage_File</H3>
<PRE>
public void <B>setMessage_File</B>(java.lang.String&nbsp;msgFilePath)
                     throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명할 메시지 파일 위치를 설정한다.<br>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msgFilePath</CODE> - 서명할 메시지 파일 위치
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#generate_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><CODE>generate_File(X509Certificate, PrivateKey, String)</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#generate_noContent_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><CODE>generate_noContent_File(X509Certificate, PrivateKey, String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setSignTime(java.util.Date)"><!-- --></A><H3>
setSignTime</H3>
<PRE>
public void <B>setSignTime</B>(java.util.Date&nbsp;time)
                 throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지를 생성하는 시간을 지정한다. (시간을 지정하지 않으면 시스템의 현재시간을 사용한다.)<br>
  <br>
 해당 함수는 생성 시간의 정확성을 위해서 시간 서버와 같이 외부로 부터 정확한 시간을 획득하여<br> 
 생성시간을 설정하고자 하는 경우에 이용한다.<br>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - 서명 시간
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="generate(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><!-- --></A><H3>
generate</H3>
<PRE>
public byte[] <B>generate</B>(<A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
                       <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)
                throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지를 생성한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signCert</CODE> - 서명자의 인증서<DD><CODE>priKey</CODE> - 서명자의 개인키
<DT><B>Returns:</B><DD>서명 메시지
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage(byte[])"><CODE>setMessage(byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="generate_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><!-- --></A><H3>
generate_File</H3>
<PRE>
public void <B>generate_File</B>(<A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
                          <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
                          java.lang.String&nbsp;signedDataFilePath)
                   throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지를 생성하여 파일로 저장한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signCert</CODE> - 서명자의 인증서<DD><CODE>priKey</CODE> - 서명자의 개인키<DD><CODE>signedDataFilePath</CODE> - 생성된 서명 메시지 저장 위치
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage_File(java.lang.String)"><CODE>setMessage_File(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="generate_noContent_File(com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey, java.lang.String)"><!-- --></A><H3>
generate_noContent_File</H3>
<PRE>
public void <B>generate_noContent_File</B>(<A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
                                    <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey,
                                    java.lang.String&nbsp;signedDataFilePath)
                             throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지를 생성하여 파일로 저장한다. <br>
 이 때 생성되는 서명 메시지안에는 원본 데이터가 포함되지 않는다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signCert</CODE> - 서명자의 인증서<DD><CODE>priKey</CODE> - 서명자의 개인키<DD><CODE>signedDataFilePath</CODE> - 생성된 서명 메시지 저장 위치
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage_File(java.lang.String)"><CODE>setMessage_File(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addSigner(byte[], com.gpki.gpkiapi.cert.X509Certificate, com.gpki.gpkiapi.crypto.PrivateKey)"><!-- --></A><H3>
addSigner</H3>
<PRE>
public byte[] <B>addSigner</B>(byte[]&nbsp;signedData,
                        <A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A>&nbsp;signCert,
                        <A HREF="../../../../com/gpki/gpkiapi/crypto/PrivateKey.html" title="class in com.gpki.gpkiapi.crypto">PrivateKey</A>&nbsp;priKey)
                 throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>이미 생성된 서명 메시지에 서명을 추가한다. (복수서명을 위해서 사용된다.)
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signedData</CODE> - 서명 메시지<DD><CODE>signCert</CODE> - 서명자의 인증서<DD><CODE>priKey</CODE> - 서명자의 개인키
<DT><B>Returns:</B><DD>복수 서명 메시지
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#setMessage(byte[])"><CODE>setMessage(byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="verify(byte[])"><!-- --></A><H3>
verify</H3>
<PRE>
public void <B>verify</B>(byte[]&nbsp;signedData)
            throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지를 검증한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signedData</CODE> - 서명 메시지
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getMessage()"><CODE>getMessage()</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCnt()"><CODE>getSignerCnt()</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCert(int)"><CODE>getSignerCert(int)</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSigningTime(int)"><CODE>getSigningTime(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="verify_File(java.lang.String, java.lang.String)"><!-- --></A><H3>
verify_File</H3>
<PRE>
public void <B>verify_File</B>(java.lang.String&nbsp;signedDataFilePath,
                        java.lang.String&nbsp;msgFilePath)
                 throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지를 검증한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signedDataFilePath</CODE> - 서명 메시지가 저장된 파일 위치<DD><CODE>msgFilePath</CODE> - 검증 완료 후 저장될 원본 메시지 저장 위치
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCnt()"><CODE>getSignerCnt()</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCert(int)"><CODE>getSignerCert(int)</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSigningTime(int)"><CODE>getSigningTime(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="verify_noContetn_File(java.lang.String, java.lang.String)"><!-- --></A><H3>
verify_noContetn_File</H3>
<PRE>
public void <B>verify_noContetn_File</B>(java.lang.String&nbsp;signedDataFilePath,
                                  java.lang.String&nbsp;msgFilePath)
                           throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>원본 메시지가 포함되어있지 않은 서명 메시지를 검증한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signedDataFilePath</CODE> - 서명 메시지가 저장된 파일 위치<DD><CODE>msgFilePath</CODE> - 원본 메시지가 저장된 파일 위치
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCnt()"><CODE>getSignerCnt()</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSignerCert(int)"><CODE>getSignerCert(int)</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getSigningTime(int)"><CODE>getSigningTime(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getMessage()"><!-- --></A><H3>
getMessage</H3>
<PRE>
public byte[] <B>getMessage</B>()</PRE>
<DL>
<DD>서명 되었던 원본 메시지를 획득한다. (서명 메시지를 검증한 후 사용한다.)
<P>
<DD><DL>

<DT><B>Returns:</B><DD>원본 메시지<DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])"><CODE>verify(byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSignerCnt()"><!-- --></A><H3>
getSignerCnt</H3>
<PRE>
public int <B>getSignerCnt</B>()</PRE>
<DL>
<DD>서명 메시지의 서명자 수를 획득한다. (서명 메시지를 검증한 후 사용한다.)
<P>
<DD><DL>

<DT><B>Returns:</B><DD>서명자 수<DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])"><CODE>verify(byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSignerCert(int)"><!-- --></A><H3>
getSignerCert</H3>
<PRE>
public <A HREF="../../../../com/gpki/gpkiapi/cert/X509Certificate.html" title="class in com.gpki.gpkiapi.cert">X509Certificate</A> <B>getSignerCert</B>(int&nbsp;index)
                              throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명자의 인증서를 획득한다. (서명 메시지를 검증한 후 사용한다.)
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - 획득할 서명자 인증서의 인덱스
<DT><B>Returns:</B><DD>서명자 인증서
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])"><CODE>verify(byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getCaPubs()"><!-- --></A><H3>
getCaPubs</H3>
<PRE>
public byte[] <B>getCaPubs</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSigningTime(int)"><!-- --></A><H3>
getSigningTime</H3>
<PRE>
public java.util.Date <B>getSigningTime</B>(int&nbsp;index)
                              throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>해당 인덱스 서명자의 서명 시간을 획득한다. (서명 메시지를 검증한 후 사용한다.)
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - 획득할 서명시간의 서명자 인덱스
<DT><B>Returns:</B><DD>서명 시간
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])"><CODE>verify(byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTBTData(int)"><!-- --></A><H3>
getTBTData</H3>
<PRE>
public byte[] <B>getTBTData</B>(int&nbsp;index)
                  throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지에서 시점확인 토큰을 받기 위한 데이터 또는 시점확인 토큰에 대한 시점확인을 
 요청했던 메시지를 획득한다. 이때, 리턴되는 데이터는 해당 서명자의 서명값이 된다. 
 해당 데이터는 verify() 메소드를 이용하여 검증한 경우에만 획득이 가능하다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - 획득할 데이터의 서명자 index
<DT><B>Returns:</B><DD>시점확인 토큰을 받기 위한 데이터. 해당 정보가 없으면 null이 리턴됨.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])"><CODE>verify(byte[])</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getTimeStampToken(int)"><CODE>getTimeStampToken(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTimeStampToken(int)"><!-- --></A><H3>
getTimeStampToken</H3>
<PRE>
public <A HREF="../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A> <B>getTimeStampToken</B>(int&nbsp;index)
                                 throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명메시지에서 서명에 대한 시점확인 토큰을 회득한다. 이때 시점확인 토큰은 verify() 
 메소드를 이용하여 검증한 경우에만 획득이 가능하다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - 획득할 데이터의 서명자 index
<DT><B>Returns:</B><DD>시점확인 토큰. 해당 정보가 없으면 null이 리턴됨
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#verify(byte[])"><CODE>verify(byte[])</CODE></A>, 
<A HREF="../../../../com/gpki/gpkiapi/cms/SignedData.html#getTBTData(int)"><CODE>getTBTData(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTimeStampToken(byte[], int, com.gpki.gpkiapi.tsa.TimeStampToken)"><!-- --></A><H3>
setTimeStampToken</H3>
<PRE>
public byte[] <B>setTimeStampToken</B>(byte[]&nbsp;signedData,
                                int&nbsp;signerIndex,
                                <A HREF="../../../../com/gpki/gpkiapi/tsa/TimeStampToken.html" title="class in com.gpki.gpkiapi.tsa">TimeStampToken</A>&nbsp;tst)
                         throws <A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></PRE>
<DL>
<DD>서명 메시지에 시점확인 토큰을 지정한다.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>signedData</CODE> - 서명 메시지<DD><CODE>signerIndex</CODE> - 시점확인 토큰을 지정할 서명자 인덱스<DD><CODE>tst</CODE> - 시점확인 토큰
<DT><B>Returns:</B><DD>시점확인 토큰이 지정된 서명 메시지
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/gpki/gpkiapi/exception/GpkiApiException.html" title="class in com.gpki.gpkiapi.exception">GpkiApiException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setSignerCert(int, int, byte[], long, byte[], byte[], byte[])"><!-- --></A><H3>
setSignerCert</H3>
<PRE>
protected void <B>setSignerCert</B>(int&nbsp;index,
                             int&nbsp;size,
                             byte[]&nbsp;cert,
                             long&nbsp;signTime,
                             byte[]&nbsp;tbtData,
                             byte[]&nbsp;tst,
                             byte[]&nbsp;capubs)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>GPKIAPI <br>V1.4.0.0</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/gpki/gpkiapi/cms/SignedContent.html" title="class in com.gpki.gpkiapi.cms"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/gpki/gpkiapi/cms/WapEnvelopedData.html" title="class in com.gpki.gpkiapi.cms"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SignedData.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<br><font size=3><b>Copyright ⓒ2003-2010 GCC Co.,Ltd . All rights reserved</b></font>
</BODY>
</HTML>
