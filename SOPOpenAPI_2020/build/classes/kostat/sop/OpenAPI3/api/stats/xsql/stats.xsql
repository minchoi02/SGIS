<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stats">

<!-- 인구총괄 -->
<!-- 2015년에는 사용하지 않음 -->
<!-- censusIndex 쿼리를 사용 -->
	<select id="population" parameterType="hashmap" resultType="hashmap">
		select case when nvl(pplsum.tot_ppltn,0) <![CDATA[<=]]> 4 then 'N/A'
				when nvl(pplsum.tot_ppltn,0) <![CDATA[>]]> 4 then nvl(pplsum.tot_ppltn,0) end tot_ppltn
			, case when nvl(pplsum.tot_ppltn_male,0) <![CDATA[<=]]> 4 then 'N/A' 
				when nvl(pplsum.tot_ppltn_male,0) <![CDATA[>]]> 4 then nvl(pplsum.tot_ppltn_male,0) end tot_ppltn_male
			, case when nvl(pplsum.tot_ppltn_fem,0) <![CDATA[<=]]>  4 then 'N/A' 
				when nvl(pplsum.tot_ppltn_fem,0) <![CDATA[>]]> 4 then nvl(pplsum.tot_ppltn_fem,0) end tot_ppltn_fem
		    , nvl(pplsum.avg_age,0) avg_age
		    , nvl(pplsum.avg_age_male,0) avg_age_male
		    , nvl(pplsum.avg_age_fem,0) avg_age_fem
		    , nvl(pplsum.ppltn_dnsty,0) ppltn_dnsty
		    , nvl(pplsum.aged_child_idx,0) aged_child_idx
		    , nvl(pplsum.oldage_suprt_per,0) oldage_suprt_per
		    , nvl(pplsum.juv_suprt_per,0) juv_suprt_per
		    , nvl(pplsum.tot_suprt_per,0) tot_suprt_per
		<if test='adm_length != "13" '>
			, bord.adm_cd 
			, bord.adm_nm 
			from  srv_dt_ppltnsumdong_${year} with (nolock) pplsum
			,  (select distinct
				 sido_cd
			<if test='adm_length == "0" or adm_length == "2"'>
				, sido_cd adm_cd
				, sido_nm adm_nm
			</if>
			<if test='adm_length == "5"'>
				, sgg_cd
				, sido_cd||sgg_cd adm_cd
				, sgg_nm adm_nm
			</if>
			<if test='adm_length == "7"'>
				, sgg_cd
				, emdong_cd
				, sido_cd||sgg_cd||emdong_cd adm_cd
				, emdong_nm adm_nm
			</if>
			from srv_dt_adm_tot_reg_match with (nolock) 
	        <where> 
	        	and year = #{bnd_year}
	        	<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
					and sido_cd = #{sido_cd}
				</if>
				<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
					and sido_cd = #{sido_cd}
					and sgg_cd = #{sgg_cd}
				</if>
				<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1") '>
					and sido_cd = #{sido_cd}
					and sgg_cd = #{sgg_cd}
					and emdong_cd = #{emdong_cd}
				</if>
	        </where> 
	       )bord
	     </if>  
		<if test='adm_length == "13" '>
			, tot_reg_cd adm_cd
			from  srv_dt_ppltnsumreg_${year}  with (nolock) pplsum
		</if>
		<where> 
			<if test='adm_length != "13" '>
				pplsum.sido_cd = bord.sido_cd 
				and pplsum.bord_base_year = #{bnd_year}
				<if test='(adm_length == "0")or(adm_length == "2")'>
					and pplsum.sgg_cd = '000' 
					and pplsum.emdong_cd = '00' 
				</if>
				<if test='adm_length == "5"'>	
					and pplsum.sgg_cd = bord.sgg_cd
					and pplsum.emdong_cd = '00'
				</if>
				<if test='adm_length == "7"'>		
					and pplsum.sgg_cd = bord.sgg_cd 
					and pplsum.emdong_cd = bord.emdong_cd
				</if>
			</if>
		 	<if test='adm_length == "13" '>
				tot_reg_cd like '${adm_cd}%'
			</if>
	    </where>
	</select>
	
	<!-- 세부인구 정보 조회 -->
	<!-- NaJaeWoong 20160726 age_to, age_from -> age_type -->
	<select id="searchpopulation" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			<if test='adm_length == "7" or adm_length == "13" '>
				select  case when sum(ppl.ppltn_cnt) <![CDATA[<=]]>  4 then 'N/A' 
				       	     when sum(ppl.ppltn_cnt) <![CDATA[>]]> 4 then sum(ppl.ppltn_cnt) end  population
					  , round(avg(age),1) avg_age 
				<if test='adm_length == "7" '>
					  , bord.sido_cd||bord.sgg_cd||bord.emdong_cd adm_cd
					  , bord.emdong_nm adm_nm
			    </if>
				<if test='adm_length == "13" '>
					  , ppl.tot_reg_cd adm_cd
				</if>
				from (
					SELECT         
						PPLTN_CNT
						, AGE
						, GENDER
						<!-- mng_s 2017. 10. 30. j.h.Seok -->
					   <if test='year lt "2015"'>
					   <!-- mng_e 2017. 10. 30. j.h.Seok -->
						, RD_MRG_STATE
						, RD_EDU_LEVEL
						</if>
						, TOT_REG_CD
						, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
						, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
						, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
					FROM 
						SRV_DT_POPSREG_${year} with (nolock)  ppl
					WHERE
						<if test='"1" == "0"'>
							TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
						</if>
						TOT_REG_CD LIKE '${sido_cd}${sgg_cd}${emdong_cd}%'
						<if test='0 and edu_level != null '>
							and ppl.rd_edu_level like #{edu_level}||'%'
							<!-- 2017. 03. 21 오류 수정 -->
							and ppl.age <![CDATA[>]]> 5
					   </if>
					   <if test='edu_level != null '>
							<!-- 2017. 03. 21 오류 수정 -->
							and ppl.age <![CDATA[>]]> 5
							and ppl.rd_edu_level in
							<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
								#{edu}
							</foreach>
					   </if>
				) ppl
				INNER JOIN SRV_PG_ADMBORD with (nolock) BORD
				ON ppl.SIDO_CD = BORD.SIDO_CD 
				AND ppl.SGG_CD = BORD.SGG_CD
				AND ppl.EMDONG_CD = BORD.EMDONG_CD
				AND BORD.BASE_YEAR = #{bnd_year}
				<where>
 					and bord.sido_cd = #{sido_cd}
 			   <if test='low_search == "2" and adm_length == "13"'>
 			   		and bord.sgg_cd = #{sgg_cd}
 			   </if>
 			   <if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
 					and bord.sgg_cd = #{sgg_cd}
 					and bord.emdong_cd = #{emdong_cd}
 			   </if>
			   <if test='gender != "0" '>
					and ppl.gender=#{gender}
			   </if>
			   <if test='age_from != null '>
			     and ppl.age <![CDATA[>=]]> #{age_from}
			   </if>
			   <if test='age_to != null '>
			     and ppl.age <![CDATA[<=]]> #{age_to}
			   </if>			   
			   <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
			   </if>
				</where> 
			  <if test='adm_length == 7'>
				group by bord.sido_cd||bord.sgg_cd||bord.emdong_cd, bord.emdong_nm
			  </if>
			  <if test='adm_length == "13"'>
				group by tot_reg_cd
			  </if>
			</if>

			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				select 
				       case when nvl(sum(ppl.ppltn_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
				       	    when nvl(sum(ppl.ppltn_cnt),0) <![CDATA[>]]> 4 then nvl(sum(ppl.ppltn_cnt),0) end  population
			    	 , nvl(round(avg(ppl.age),1),0) avg_age
			    <if test='adm_length == "5"'>
			    	 , ppl.sido_cd||ppl.sgg_cd adm_cd
					 , bord.sgg_nm adm_nm 
			    </if>
			    <if test='adm_length == "0" or adm_length == "2"'>
			    	 , bord.sido_cd adm_cd
					 , bord.sido_nm adm_nm 
			    </if>
			   	from 
					(select * 
					from srv_dt_popsgg_${year} with (nolock) 
					where 
					<!-- 20180601 leekh ppl 제거(쿼리가 잘못짜져 있어서 수정함) -->
						bord_base_year = #{bnd_year}
					<if test='0 and edu_level != null '>
						and rd_edu_level like #{edu_level}||'%'
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
					</if>
					<if test='edu_level != null '>
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
						and rd_edu_level in
						<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
							#{edu}
						</foreach>
					</if>
					) ppl
			   	<if test='adm_length == "5"'>
			   	    , srv_pg_sggbord with (nolock) bord
			   	</if>
			   	<if test='adm_length == "0" or adm_length == "2"'>
			   	    , srv_pg_sidobord with (nolock) bord
			   	</if>
				<where>
					bord.base_year = #{bnd_year}
				<if test='adm_length == "2" or (adm_length == "5" )'>
					and ppl.sido_cd = #{sido_cd}
				</if>
				<if test='adm_length == "5" and low_search == "0"' >
					and ppl.sgg_cd = #{sgg_cd}
				</if>
				<if test='gender != "0" '>
					and ppl.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
				</if>
				<if test='age_to != null '>
					and ppl.age <![CDATA[<=]]> #{age_to}
				</if>
			    <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
				</if>
					and ppl.sido_cd=bord.sido_cd 
				<if test='adm_length == "5"' >
					and ppl.sgg_cd=bord.sgg_cd
				</if>
			    </where>
			    <if test='adm_length == "5"'>
			    	group by ppl.sido_cd||ppl.sgg_cd, bord.sgg_nm
			    </if>
			    <if test='adm_length == "0" or adm_length == "2"'>
			    	group by bord.sido_cd, bord.sido_nm  
			    </if>
			 </if>
		</if>
		<if test='area_type == "1"'>   
				select 
				   case when nvl(count(ppl.femember_no),0) <![CDATA[<=]]> 4  then 'N/A' 
				        when nvl(count(ppl.femember_no),0) <![CDATA[>]]> 4  then nvl(count(ppl.femember_no),0) end  population
				 , nvl(round(avg(ppl.age),1),0) avg_age
			from 
				(select * 
				from srv_dt_ppltncensus_${year} with (nolock) 
				where 1=1 
				<if test='0 and edu_level != null '>
					and ppl.rd_edu_level like #{edu_level}||'%'
					<!-- 2017. 03. 21 오류 수정 -->
					and ppl.age <![CDATA[>]]> 5
				</if>
				<if test='edu_level != null '>
					<!-- 2017. 03. 21 오류 수정 -->
					and ppl.age <![CDATA[>]]> 5
					and ppl.rd_edu_level in
					<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
						#{edu}
					</foreach>
				</if>
				) ppl
			<where>
			<if test='area_type == "1" '>
				<if test='area_kind == "POLYGON" '>
					and st_within(ppl.pt,st_polyfromtext(#{area},0))=1 
				</if>
				<if test='area_kind == "POINT" '>
					and st_within(ppl.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
				</if>
				<if test='area_kind == "RECTANGLE" '>
					and st_within(ppl.pt,st_rectfromtext(#{area},0)) = 1
				</if>
			</if>
			<if test='gender != "0" '>
				and ppl.gender=#{gender}
			</if>
			<if test='age_from != null '>
				and ppl.age <![CDATA[>=]]> #{age_from}
			</if>
			<if test='age_to != null '>
				and ppl.age <![CDATA[<=]]> #{age_to}
			</if>
			<if test='study_level != null '>
				and ppl.study_level = #{study_level}
			</if>
			<if test='mrg_state != null '>
				and ppl.rd_mrg_state in
				<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
				  	#{mrg}
				</foreach>
			</if>
			</where>
		</if>
	</select>
	
	<!-- 내부용 세부인구 정보 조회 -->
	<select id="innersearchpopulation" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			<if test='adm_length == "7" or adm_length == "13" '>
				select  case when sum(ppl.ppltn_cnt) <![CDATA[<=]]>  4 then 'N/A' 
				       	     when sum(ppl.ppltn_cnt) <![CDATA[>]]> 4 then sum(ppl.ppltn_cnt) end  population
					  , round(avg(age),1) avg_age 
				<if test='adm_length == "7" '>
					  , bord.sido_cd||bord.sgg_cd||bord.emdong_cd adm_cd
					  , bord.emdong_nm adm_nm
			    </if>
				<if test='adm_length == "13" '>
					  , ppl.tot_reg_cd adm_cd
				</if>
				from (
					SELECT         
						PPLTN_CNT
						, AGE
						, GENDER
						<!-- 20160929 사이트 오픈 테스트시 년도에따라 mrg_state, edu_level 값을 가져올 수 있도록 처리 -->
						<!-- <if test='false'> -->
						<!--, RD_MRG_STATE -->
						<!--, RD_EDU_LEVEL -->
						<!-- </if> -->
						<!-- mng_s 2017. 10. 30. j.h.Seok -->
						<if test='year lt "2015"'>
						<!-- mng_e 2017. 10. 30. j.h.Seok -->
						, RD_MRG_STATE
						, RD_EDU_LEVEL
						</if>
						, TOT_REG_CD
						, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
						, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
						, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
					FROM 
						SRV_DT_POPSREG_${year} with (nolock) ppl
					WHERE
						<if test='"1" == "0"'>
							TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
						</if>
						TOT_REG_CD LIKE '${sido_cd}${sgg_cd}${emdong_cd}%'
						<if test='0 and edu_level != null '>
							and ppl.rd_edu_level like #{edu_level}||'%'
							<!-- 2017. 03. 21 오류 수정 -->
							and ppl.age <![CDATA[>]]> 5
					   </if>
					   <if test='edu_level != null '>
						<!-- 2017. 03. 21 오류 수정 -->
							and ppl.age <![CDATA[>]]> 5
							and ppl.rd_edu_level in
							<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
								#{edu}
							</foreach>
					   </if>
				) ppl
				INNER JOIN SRV_PG_ADMBORD with (nolock) BORD
				ON ppl.SIDO_CD = BORD.SIDO_CD 
				AND ppl.SGG_CD = BORD.SGG_CD
				AND ppl.EMDONG_CD = BORD.EMDONG_CD
				AND BORD.BASE_YEAR = #{bnd_year}
				<where>
 					and bord.sido_cd = #{sido_cd}
 			   <if test='low_search == "2" and adm_length == "13"'>
 			   		and bord.sgg_cd = #{sgg_cd}
 			   </if>
 			   <if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
 					and bord.sgg_cd = #{sgg_cd}
 					and bord.emdong_cd = #{emdong_cd}
 			   </if>
			   <if test='gender != "0" '>
					and ppl.gender=#{gender}
			   </if>
			   <if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
			   </if>
			   
			   <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
			   </if>
				</where> 
			  <if test='adm_length == 7'>
				group by bord.sido_cd||bord.sgg_cd||bord.emdong_cd, bord.emdong_nm
			  </if>
			  <if test='adm_length == "13"'>
				group by tot_reg_cd
			  </if>
			</if>

			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				select 
				       case when nvl(sum(ppl.ppltn_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
				       	    when nvl(sum(ppl.ppltn_cnt),0) <![CDATA[>]]> 4 then nvl(sum(ppl.ppltn_cnt),0) end  population
			    	 , nvl(round(avg(ppl.age),1),0) avg_age
			    <if test='adm_length == "5"'>
			    	 , ppl.sido_cd||ppl.sgg_cd adm_cd
					 , bord.sgg_nm adm_nm 
			    </if>
			    <if test='adm_length == "0" or adm_length == "2"'>
			    	 , bord.sido_cd adm_cd
					 , bord.sido_nm adm_nm 
			    </if>
			   	from (
					select * 
					from srv_dt_popsgg_${year} with (nolock) 
					where 
					bord_base_year = #{bnd_year} 
					<if test='0 and edu_level != null '>
						and rd_edu_level like #{edu_level}||'%'
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
					</if>
					<if test='edu_level != null '>
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
						and rd_edu_level in
						<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
							#{edu}
						</foreach>
					</if>
					) ppl
			   	<if test='adm_length == "5"'>
			   	    , srv_pg_sggbord with (nolock) bord
			   	</if>
			   	<if test='adm_length == "0" or adm_length == "2"'>
			   	    , srv_pg_sidobord with (nolock) bord
			   	</if>
				<where>
				 	bord.base_year = ppl.bord_base_year
				<if test='adm_length == "2" or (adm_length == "5" )'>
					and ppl.sido_cd = #{sido_cd}
				</if>
				<if test='adm_length == "5" and low_search == "0"' >
					and ppl.sgg_cd = #{sgg_cd}
				</if>
				<if test='gender != "0" '>
					and ppl.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
				</if>				
			    <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
				</if>
					and ppl.sido_cd=bord.sido_cd 
				<if test='adm_length == "5"' >
					and ppl.sgg_cd=bord.sgg_cd
				</if>
			    </where>
			    <if test='adm_length == "5"'>
			    	group by ppl.sido_cd||ppl.sgg_cd, bord.sgg_nm
			    </if>
			    <if test='adm_length == "0" or adm_length == "2"'>
			    	group by bord.sido_cd, bord.sido_nm  
			    </if>
			 </if>
		</if>
		
		<if test='area_type == "1"'>   
				select 
				   case when nvl(count(ppl.femember_no),0) <![CDATA[<=]]> 4  then 'N/A' 
				        when nvl(count(ppl.femember_no),0) <![CDATA[>]]> 4  then nvl(count(ppl.femember_no),0) end  population
				 , nvl(round(avg(ppl.age),1),0) avg_age
			from (
					select * 
					from srv_dt_ppltncensus_${year} with (nolock) 
					where 1=1 
					<if test='0 and edu_level != null '>
						and rd_edu_level like #{edu_level}||'%'
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
					</if>
					<if test='edu_level != null '>
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
						and rd_edu_level in
						<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
							#{edu}
						</foreach>
					</if>
					) ppl
			<where>
			<if test='area_type == "1" '>
				<if test='area_kind == "POLYGON" '>
					and st_within(ppl.pt,st_polyfromtext(#{area},0))=1 
				</if>
				<if test='area_kind == "POINT" '>
					and st_within(ppl.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
				</if>
				<if test='area_kind == "RECTANGLE" '>
					and st_within(ppl.pt,st_rectfromtext(#{area},0)) = 1
				</if>
			</if>
			<if test='gender != "0" '>
				and ppl.gender=#{gender}
			</if>
			<if test='age_from != null '>
				and ppl.age <![CDATA[>=]]> #{age_from}
				and ppl.age <![CDATA[<=]]> #{age_to}
			</if>
			
			<if test='study_level != null '>
				and ppl.study_level = #{study_level}
			</if>
			<if test='mrg_state != null '>
				and ppl.rd_mrg_state in
				<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
				  	#{mrg}
				</foreach>
			</if>
			</where>
		</if>
	</select>
	
	<!--  [2015 업데이트] 가구 통계 -->
	<select id="household" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			<if test='adm_length == "7" or adm_length == "13" '>
				select  
						case when sum(family.family_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							 when sum(family.family_cnt) <![CDATA[>]]> 4 then sum(family.family_cnt) end  household_cnt
					  , case when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[<=]]> 0 then 0
					         when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[>]]> 0 then round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) end avg_family_member_cnt
					  , sum(family.rd_fmember_cnt) family_member_cnt 
				<if test='adm_length == "7" '>
					  , bord.sido_cd||bord.sgg_cd||bord.emdong_cd adm_cd
					  , bord.emdong_nm adm_nm
				</if>
				<if test='adm_length == "13" '>
					  , family.tot_reg_cd adm_cd
				</if>
				from (
					select         
						family_cnt
						, rd_fmember_cnt
						, rd_household_type
						<!-- 20160929 사이트 오픈 테스트시 년도에따라 rd_ocptn_type 값을 가져올 수 있도록 처리 -->
						<!-- <if test='false'> -->
						<!--, rd_ocptn_type -->
						<!-- </if> -->
						<!-- mng_s 2017. 10. 30. j.h.Seok -->
						<if test='year lt "2015"'>
						<!-- mng_e 2017. 10. 30. j.h.Seok -->
						, rd_ocptn_type
						</if>
						, tot_reg_cd
						, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
						, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
						, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
					from 
							srv_dt_familyreg_${year} with (nolock) family
					WHERE
						<if test='"1" == "0"'>
							TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
						</if>
						TOT_REG_CD LIKE '${sido_cd}${sgg_cd}${emdong_cd}%'
				) family
				INNER JOIN srv_pg_admbord with (nolock) bord
				ON family.sido_cd = bord.sido_cd and family.SGG_CD = bord.SGG_CD
				and family.EMDONG_CD = bord.EMDONG_CD
				<where>
					and bord.base_year = #{bnd_year}
					and bord.sido_cd = #{sido_cd}
 			   <if test='low_search == "2" and adm_length == "13"'>
 			   		and bord.sgg_cd = #{sgg_cd}
 			   </if>
 			   <if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
					and bord.sgg_cd = #{sgg_cd}
					and bord.emdong_cd = #{emdong_cd}
			   </if>
			   
			   <if test='household_type != null '>
						and family.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
			   </if>
			   <if test='ocptn_type != null '>
					   and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						#{ocptn}
					</foreach>
			   </if>
			   </where> 
			   
			  <if test='adm_length == 7'>
				group by bord.sido_cd||bord.sgg_cd||bord.emdong_cd, bord.emdong_nm
			  </if>
			  <if test='adm_length == "13"'>
				group by tot_reg_cd
			  </if>
			</if>

			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				select  
						case when sum(family.family_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							 when sum(family.family_cnt) <![CDATA[>]]> 4 then sum(family.family_cnt) end  household_cnt
					  , case when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[<=]]> 0 then 0
					         when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[>]]> 0 then round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) end avg_family_member_cnt
					  , sum(family.rd_fmember_cnt) family_member_cnt 
				<if test='adm_length == "5"'>
					 , family.sido_cd||family.sgg_cd adm_cd
					 , bord.sgg_nm adm_nm 
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					 , bord.sido_cd adm_cd
					 , bord.sido_nm adm_nm 
				</if>
				from srv_dt_familysgg_${year} with (nolock) family
				<if test='adm_length == "5"'>
					, srv_pg_sggbord with (nolock) bord
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					, srv_pg_sidobord with (nolock) bord
				</if>
				<where>
					family.bord_base_year = #{bnd_year}
				<if test='adm_length == "2" or (adm_length == "5" )'>
					and family.sido_cd = #{sido_cd}
				</if>
				<if test='adm_length == "5" and low_search == "0"' >
					and family.sgg_cd = #{sgg_cd}
				</if>
				
				<if test='household_type != null '>
						and family.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
				<if test='ocptn_type != null '>
					   and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						#{ocptn}
					</foreach>
				</if>
					and bord.base_year = #{bnd_year}
					and family.sido_cd=bord.sido_cd 
				<if test='adm_length == "5"' >
					and family.sgg_cd=bord.sgg_cd
				</if>
				</where>
				<if test='adm_length == "5"'>
					group by family.sido_cd||family.sgg_cd, bord.sgg_nm
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					group by bord.sido_cd, bord.sido_nm  
				</if>
			 </if>
		</if>
		
		<if test='area_type == "1"'>
			select 
				   case when nvl(count(family.family_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
						when nvl(count(family.family_cnt),0) <![CDATA[>]]> 4  then nvl(count(family.family_cnt),0) end  household_cnt
				 , case when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[<=]]> 0 then 0
					    when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[>]]> 0 then round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) end avg_family_member_cnt
				 , nvl(sum(family.rd_fmember_cnt),0) family_member_cnt 
			from srv_dt_familycensus_${year} with (nolock) family 
			<where>
				<if test='area_type == "1" '>
					<if test='area_kind == "POLYGON" '>
						and st_within(family.pt,st_polyfromtext(#{area},0))=1 
					</if>
					<if test='area_kind == "POINT" '>
						and st_within(family.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
					</if>
					<if test='area_kind == "RECTANGLE" '>
						and st_within(family.pt,st_rectfromtext(#{area},0)) = 1
					</if>
				</if>
				<if test='household_type != null '>
					and family.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
				<if test='ocptn_type != null '>
					and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						#{ocptn}
					</foreach>
				</if>
				<if test='search_type != null '>
				   and family.family_yn = #{search_type}
			   </if>
			</where> 
		</if>
	</select>
	
	<!-- 주택통계 -->
	<select id="house" parameterType="hashmap" resultType="hashmap">
		
		<if test='area_type == "0"'>
			<if test='adm_length == "7" or adm_length == "13" '>
				select case when sum(house.resid_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							when sum(house.resid_cnt) <![CDATA[>]]> 4 then sum(house.resid_cnt) end  house_cnt
				<if test='adm_length == "7" '>
					  , bord.sido_cd||bord.sgg_cd||bord.emdong_cd adm_cd
					  , bord.emdong_nm adm_nm
				</if>
				<if test='adm_length == "13" '>
					  , HOUSE.tot_reg_cd adm_cd
				</if>
				from (
						SELECT
							RESID_CNT
							, TOT_REG_CD
							, RD_RESID_1_TYPE
							, RD_CONST_YEAR
							, RD_BDSPACE_MM
							, HOUSE_YN
							, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
							, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
							, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
						FROM
							SRV_DT_HOUSEREG_${year} with (nolock) 
						WHERE
						<if test='"1" == "0"'>
							TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
						</if>
							TOT_REG_CD LIKE '${sido_cd}${sgg_cd}${emdong_cd}%'
				) HOUSE
				INNER JOIN SRV_PG_ADMBORD with (nolock) bord
				ON HOUSE.SIDO_CD = bord.SIDO_CD AND HOUSE.SGG_CD = bord.SGG_CD AND HOUSE.EMDONG_CD = bord.EMDONG_CD
				<where>
					and bord.base_year = #{bnd_year}
					and bord.sido_cd = #{sido_cd}
 			   <if test='low_search == "2" and adm_length == "13"'>
 			   		and bord.sgg_cd = #{sgg_cd}
 			   </if>
 			   <if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
					and bord.sgg_cd = #{sgg_cd}
					and bord.emdong_cd = #{emdong_cd}
			   </if>
			   
			   <if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
						#{type}
					</foreach>
			   </if>
			   <if test='const_year != null '>
				  and house.rd_const_year = #{const_year}
			   </if>
			   <if test='house_area_param != null '>
			      and ${house_area_param}
			   </if> 
			   <!-- 
				   <if test='bdspace_from != null '>
					  and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
					  and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
				   </if> 
			   -->
			   <!-- 2016.10.25 수정 -->
				<if test='search_type != null '>
					and house.house_yn = #{search_type}
				</if>
			   </where> 
			   
			  <if test='adm_length == 7'>
				group by bord.sido_cd||bord.sgg_cd||bord.emdong_cd, bord.emdong_nm
			  </if>
			  <if test='adm_length == "13"'>
				group by tot_reg_cd
			  </if>
			</if>

			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				select case when sum(house.resid_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							when sum(house.resid_cnt) <![CDATA[>]]> 4 then sum(house.resid_cnt) end  house_cnt
				<if test='adm_length == "5"'>
					 , house.sido_cd||house.sgg_cd adm_cd
					 , bord.sgg_nm adm_nm 
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					 , bord.sido_cd adm_cd
					 , bord.sido_nm adm_nm 
				</if>
				from srv_dt_housesgg_${year} with (nolock) house
				<if test='adm_length == "5"'>
					, srv_pg_sggbord with (nolock) bord
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					, srv_pg_sidobord with (nolock) bord
				</if>
				<where>
					house.bord_base_year = #{bnd_year}
				<if test='adm_length == "2" or (adm_length == "5" )'>
					and house.sido_cd = #{sido_cd}
				</if>
				<if test='adm_length == "5" and low_search == "0"' >
					and house.sgg_cd = #{sgg_cd}
				</if>
				
				<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
						#{type}
					</foreach>
				</if>
				<if test='const_year != null '>
					and house.rd_const_year = #{const_year}
				</if>
			    <if test='house_area_param != null '>
			       and ${house_area_param}
			    </if> 
				<!-- 
				    <if test='bdspace_from != null '>
					   and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
					   and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
				    </if> 
 				-->
 				<!-- 2016.10.25 수정 -->
				<if test='search_type != null '>
					and house.house_yn = #{search_type}
				</if>
					and bord.base_year = #{bnd_year}
					and house.sido_cd=bord.sido_cd 
				<if test='adm_length == "5"' >
					and house.sgg_cd=bord.sgg_cd
				</if>
				</where>
				<if test='adm_length == "5"'>
					group by house.sido_cd||house.sgg_cd, bord.sgg_nm
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					group by bord.sido_cd, bord.sido_nm  
				</if>
			 </if>
		</if>
		
		<if test='area_type == "1"'>
			select case
						when nvl(count(distinct house.house_reg_no),0) <![CDATA[<=]]> 4  then 'N/A' 
						when nvl(count(distinct house.house_reg_no),0) <![CDATA[>]]> 4 then nvl(count(distinct house.house_reg_no),0) end  house_cnt  
			from srv_dt_familycensus_${year} with (nolock) house 
			<where>
				<if test='area_type == "1" '>
					<if test='area_kind == "POLYGON" '>
						and st_within(house.pt,st_polyfromtext(#{area},0))=1 
					</if>
					<if test='area_kind == "POINT" '>
						and st_within(house.pt,ST_BUFFER(st_pointfromtext(#{area},0),#{round})) = 1
					</if>
					<if test='area_kind == "RECTANGLE" '>
						and st_within(house.pt,st_rectfromtext(#{area},0)) = 1
					</if>
				</if>
				<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
						#{type}
					</foreach>
				</if>
				<if test='const_year != null '>
					and house.rd_const_year = #{const_year}
				</if>
			    <if test='house_area_param != null '>
			       and ${house_area_param}
			    </if> 
			    <!-- 
				    <if test='bdspace_from != null '>
				 	   and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
				 	   and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
				    </if> 
			    -->
				<if test='search_type != null '>
					and house.house_yn = #{search_type}
				</if>
			</where> 
		</if>
	</select>
	
	<!-- 주택-시군구집계, 주택-집계구집계 테이블 주택사용기간코드, 주택면적코드 컬럼 변경에 따른 쿼리 수정. -->
	<sql id="houseHead2015">
		select case when sum(house.resid_cnt) <![CDATA[<=]]> 4 then 'N/A' 
					when sum(house.resid_cnt) <![CDATA[>]]> 4 then sum(house.resid_cnt) end  house_cnt
		<if test='adm_length == "0" or adm_length == "2"'>
			 , bord.sido_cd adm_cd
			 , bord.sido_nm adm_nm 
		</if>
		<if test='adm_length == "5"'>
			 , bord.sido_cd || bord.sgg_cd adm_cd
			 , bord.sgg_nm adm_nm 
		</if>
		<if test='adm_length == "7" '>
			  , bord.sido_cd || bord.sgg_cd || bord.emdong_cd adm_cd
			  , bord.emdong_nm adm_nm
		</if>
		<if test='adm_length == "13" '>
			  , house.tot_reg_cd adm_cd
		</if>
	</sql>
	
	<sql id="houseBodySgg2015">
		FROM srv_dt_housesgg_${year} with (nolock) house
		<if test='adm_length == "0" or adm_length == "2"'>
			INNER JOIN srv_pg_sidobord with (nolock) bord ON house.sido_cd = bord.sido_cd
		</if>
		<if test='adm_length == "5"'>
			INNER JOIN srv_pg_sggbord with (nolock) bord
			ON house.sido_cd = bord.sido_cd AND house.sgg_cd = bord.sgg_cd
		</if>
		<where>
			house.bord_base_year = #{bnd_year}
			and bord.base_year = #{bnd_year}
			<if test='adm_length == "2" or (adm_length == "5" )'>
				and house.sido_cd = #{sido_cd}
			</if>
			<if test='adm_length == "5" and low_search == "0"' >
				and house.sgg_cd = #{sgg_cd}
			</if>
			<if test='house_type != null '>
				and house.rd_resid_1_type in
				<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test='house_use_prid_cd != null '>
				and house.house_use_prid_cd = #{house_use_prid_cd}
			</if>
			<if test='const_year != null '>
				and house.rd_const_year = #{const_year}
			</if>
			<if test='house_area_cd != null '>
				and house.house_area_cd in
				<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
					#{house_area_type}
				</foreach>
			</if>
			<if test='search_type != null '>
				and house.house_yn = #{search_type}
			</if>
		</where>
		<if test='adm_length == "5"'>
			GROUP BY bord.sido_cd || bord.sgg_cd, bord.sgg_nm
		</if>
		<if test='adm_length == "0" or adm_length == "2"'>
			GROUP BY bord.sido_cd, bord.sido_nm  
		</if>
	</sql>
	<sql id="houseBodyReg2015">
		FROM (
				SELECT
					RESID_CNT
					, TOT_REG_CD
					, RD_RESID_1_TYPE
					, HOUSE_YN
					, HOUSE_AREA_CD
					, HOUSE_USE_PRID_CD
					<if test='const_year != null '>
					, RD_CONST_YEAR
					</if>
					, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
					, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
					, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
				FROM
					SRV_DT_HOUSEREG_${year} with (nolock) 
				WHERE
				<if test='"1" == "0"'>
					TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
				</if>
					TOT_REG_CD LIKE '${sido_cd}${sgg_cd}${emdong_cd}%'
		) HOUSE
		INNER JOIN SRV_PG_ADMBORD with (nolock) bord
		ON HOUSE.SIDO_CD = bord.SIDO_CD AND HOUSE.SGG_CD = bord.SGG_CD AND HOUSE.EMDONG_CD = bord.EMDONG_CD
		<where>
			and bord.base_year = #{bnd_year}
			and bord.sido_cd = #{sido_cd}
			<if test='low_search == "2" and adm_length == "13"'>
				and bord.sgg_cd = #{sgg_cd}
			</if>
			<if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
				and bord.sgg_cd = #{sgg_cd}
				and bord.emdong_cd = #{emdong_cd}
			</if>
			<if test='house_type != null '>
				and house.rd_resid_1_type in
				<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test='house_use_prid_cd != null '>
				and house.house_use_prid_cd = #{house_use_prid_cd}
			</if>
			<if test='const_year != null '>
				and house.rd_const_year = #{const_year}
			</if>
			<if test='house_area_cd != null '>
				and house.house_area_cd in
				<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
					#{house_area_type}
				</foreach>
			</if>
			<!-- 2016.10.25 수정 -->
			<if test='search_type != null '>
				and house.house_yn = #{search_type}
			</if>
		</where> 
		<if test='adm_length == 7'>
			GROUP BY bord.sido_cd || bord.sgg_cd || bord.emdong_cd, bord.emdong_nm
		</if>
		<if test='adm_length == "13"'>
			GROUP BY tot_reg_cd
		</if>
	</sql>

    <select id="house2015" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				<include refid="houseHead2015" />
				<include refid="houseBodySgg2015" />
			</if>
			<if test='adm_length == "7" or adm_length == "13" '>
				<include refid="houseHead2015" />
				<include refid="houseBodyReg2015" />
			</if>
		</if>
    </select>
	
	
<!-- 어가통계 -->
    <select id="fisheryhousehold" parameterType="hashmap" resultType="hashmap">
        
        <if test='area_type == "0"'>
            select
                   case when nvl(sum(oga.fmember_cnt_num),0) <![CDATA[<=]]> 4 then 'N/A' 
                        when nvl(sum(oga.fmember_cnt_num),0) <![CDATA[>]]> 4 then nvl(sum(oga.fmember_cnt_num),0) end  fishery_cnt   
                 , nvl(round(sum(oga.fmember_cnt)/sum(oga.fmember_cnt_num)),0) avg_population 
                 , case when nvl(sum(oga.fmember_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
                        when nvl(sum(oga.fmember_cnt),0) <![CDATA[>]]> 4 then nvl(sum(oga.fmember_cnt),0) end  population 
             <if test='adm_length != "13" '>
                 , bord.adm_cd 
                 , bord.adm_nm 
             </if>
             <if test='adm_length == "13" '>
                 , bord.tot_reg_cd adm_cd 
             </if>
             from (
                   select
                        tot_reg_cd
                        , sum(fmember_cnt) fmember_cnt 
                        , count(fmember_cnt) fmember_cnt_num 
                   from
                        srv_dt_ogacensus_${year} with (nolock) oga
                        , srv_pt_bd with (nolock) bd  
                   <where>
                    and bd.sufid = oga.sufid
                    and tot_reg_cd in 
                      (
                        select tot_reg_cd
                        from SRV_PG_TOTREGBORD with (nolock) 
                        <where> 
                            and base_year = #{bnd_year}
                            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
                                and sido_cd = #{sido_cd}
                            </if>
                            <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
                                and sido_cd = #{sido_cd}
                                and sgg_cd = #{sgg_cd}
                            </if>
                            <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
                                and sido_cd = #{sido_cd}
                                and sgg_cd = #{sgg_cd}
                                and emdong_cd = #{emdong_cd}
                            </if>
                        </where> 
                      )
                   <if test='oga_div != "0" '>
                       and oga_div=#{oga_div}
                   </if>
                   </where>
                 group by tot_reg_cd
                 ) oga
                 , (
                    select totbord.tot_reg_cd
                         <if test='adm_length == "0" or adm_length == "2"'>
                            , admbord.sido_cd adm_cd
                            , admbord.sido_nm adm_nm
                        </if>
                        <if test='adm_length == "5"'>
                            , admbord.sido_cd||admbord.sgg_cd adm_cd
                            , admbord.sgg_nm adm_nm
                        </if>
                        <if test='adm_length == "7"'>
                            , admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
                            , admbord.emdong_nm adm_nm
                        </if>
                    from SRV_PG_ADMBORD with (nolock) admbord
                    INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
                    ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
                    <where> 
                        and admbord.base_year = #{bnd_year}
                        <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
                            and admbord.sido_cd = #{sido_cd}
                        </if>
                        <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
                            and admbord.sido_cd = #{sido_cd}
                            and admbord.sgg_cd = #{sgg_cd}
                        </if>
                        <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
                            and admbord.sido_cd = #{sido_cd}
                            and admbord.sgg_cd = #{sgg_cd}
                            and admbord.emdong_cd = #{emdong_cd}
                        </if>
                    </where> 
                   )bord
            <where>
                oga.tot_reg_cd = bord.tot_reg_cd 
            </where>
            <if test='adm_length != "13" '>
                group by bord.adm_cd ,bord.adm_nm 
            </if>
            <if test='adm_length == "13" '>
                group by bord.tot_reg_cd  
            </if>
        </if>
        <if test='area_type == "1"'>
            select 
                   case when nvl(count(oga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(count(oga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(count(oga.fmember_cnt),0) end  fishery_cnt   
                 , nvl(round(avg(oga.fmember_cnt)),0) avg_population 
                 , case when nvl(sum(oga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(sum(oga.fmember_cnt),0) <![CDATA[>]]> 4   then nvl(sum(oga.fmember_cnt),0) end  population 
            from srv_dt_ogacensus_${year} with (nolock) oga
            <where>
                <if test='area_kind == "POLYGON" '>
                    and st_within(oga.pt,st_polyfromtext(#{area},0))=1 
                </if>
                <if test='area_kind == "POINT" '>
                    and st_within(oga.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
                </if>
                <if test='area_kind == "RECTANGLE" '>
                    and st_within(oga.pt,st_rectfromtext(#{area},0)) = 1
                </if>
            </where>
        </if>
    </select>

    <!-- 임가통계 -->
    <select id="forestryhousehold" parameterType="hashmap" resultType="hashmap">
    
        <if test='area_type == "0"'>
            select
                   case when nvl(sum(imga.fmember_cnt_num),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(sum(imga.fmember_cnt_num),0) <![CDATA[>]]> 4  then nvl(sum(imga.fmember_cnt_num),0) end  forestry_cnt
                 , nvl(round(sum(imga.fmember_cnt)/sum(imga.fmember_cnt_num)),0) avg_population 
                 , case when nvl(sum(imga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(sum(imga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(sum(imga.fmember_cnt),0) end  population
             <if test='adm_length != "13" '>
                 , bord.adm_cd 
                 , bord.adm_nm 
             </if>
             <if test='adm_length == "13" '>
                 , bord.tot_reg_cd adm_cd 
             </if>
             from (
                   select tot_reg_cd
                        , sum(fmember_cnt) fmember_cnt 
                        , count(fmember_cnt) fmember_cnt_num 
                   from
                       srv_dt_imgacensus_${year} with (nolock) imga
                       , srv_pt_bd with (nolock) bd
                   <where>
                and imga.sufid = bd.sufid
                and tot_reg_cd in 
                      (
                        select tot_reg_cd
                        from SRV_PG_TOTREGBORD with (nolock) 
                        <where> 
                            and base_year = #{bnd_year}
                            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
                                and sido_cd = #{sido_cd}
                            </if>
                            <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
                                and sido_cd = #{sido_cd}
                                and sgg_cd = #{sgg_cd}
                            </if>
                            <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
                                and sido_cd = #{sido_cd}
                                and sgg_cd = #{sgg_cd}
                                and emdong_cd = #{emdong_cd}
                            </if>
                        </where> 
                      )
                   </where>
                 group by tot_reg_cd) imga
                 , (
                     select totbord.tot_reg_cd
                         <if test='adm_length == "0" or adm_length == "2"'>
                            , admbord.sido_cd adm_cd
                            , admbord.sido_nm adm_nm
                        </if>
                        <if test='adm_length == "5"'>
                            , admbord.sido_cd||admbord.sgg_cd adm_cd
                            , admbord.sgg_nm adm_nm
                        </if>
                        <if test='adm_length == "7"'>
                            , admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
                            , admbord.emdong_nm adm_nm
                        </if>
                    from SRV_PG_ADMBORD with (nolock) admbord
                    INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
                    ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
                    <where> 
                        and admbord.base_year = #{bnd_year}
                        <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
                            and admbord.sido_cd = #{sido_cd}
                        </if>
                        <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
                            and admbord.sido_cd = #{sido_cd}
                            and admbord.sgg_cd = #{sgg_cd}
                        </if>
                        <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
                            and admbord.sido_cd = #{sido_cd}
                            and admbord.sgg_cd = #{sgg_cd}
                            and admbord.emdong_cd = #{emdong_cd}
                        </if>
                    </where> 
                   )bord
            <where>
                imga.tot_reg_cd = bord.tot_reg_cd 
            </where>
            <if test='adm_length != "13" '>
                group by bord.adm_cd ,bord.adm_nm 
            </if>
            <if test='adm_length == "13" '>
                group by bord.tot_reg_cd
            </if>
        </if>
        <if test='area_type == "1"'>
            select 
                   case when nvl(sum(imga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(sum(imga.fmember_cnt),0) <![CDATA[>]]> 4   then nvl(sum(imga.fmember_cnt),0) end  population
                 , nvl(round(avg(imga.fmember_cnt)),0) avg_population
                 , case when nvl(count(imga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(count(imga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(count(imga.fmember_cnt),0) end  forestry_cnt 
            from srv_dt_imgacensus_${year} with (nolock) imga
            <where>
            <if test='area_type == "1" '>
                <if test='area_kind == "POLYGON" '>
                    and st_within(imga.pt,st_polyfromtext(#{area},0))=1 
                </if>
                <if test='area_kind == "POINT" '>
                    and st_within(imga.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
                </if>
                <if test='area_kind == "RECTANGLE" '>
                    and st_within(imga.pt,st_rectfromtext(#{area},0)) = 1
                </if>
            </if>
            </where>
        </if>
    </select>
	
	<!-- 농가통계 -->
	<select id="farmhousehold" parameterType="hashmap" resultType="hashmap">
		
		<if test='area_type == "0"'>
			select
			       case when nvl(sum(nongga.fmember_cnt_num),0) <![CDATA[<=]]> 4 then 'N/A' 
				        when nvl(sum(nongga.fmember_cnt_num),0) <![CDATA[>]]> 4 then nvl(sum(nongga.fmember_cnt_num),0) end  farm_cnt
			     , nvl(round(sum(nongga.fmember_cnt)/sum(nongga.fmember_cnt_num)),0) avg_population 
			     , case when nvl(sum(nongga.fmember_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
				        when nvl(sum(nongga.fmember_cnt),0) <![CDATA[>]]> 4 then nvl(sum(nongga.fmember_cnt),0) end  population
			 <if test='adm_length != "13" '>
			     , bord.adm_cd 
			     , bord.adm_nm 
			 </if>
			 <if test='adm_length == "13" '>
			     , bord.tot_reg_cd adm_cd 
			 </if>
			 from (
			 	   select tot_reg_cd
		                , sum(fmember_cnt) fmember_cnt 
		                , count(fmember_cnt) fmember_cnt_num 
			       from srv_dt_nonggacensus_${year} with (nolock) nonggacensus
                   INNER JOIN SRV_PT_BD with (nolock) BD
                   ON nonggacensus.sufid = bd.sufid
			       <where>
			        and tot_reg_cd in 
		              (
		              	select tot_reg_cd
				        from SRV_PG_TOTREGBORD with (nolock) 
				        <where> 
				        	and base_year = #{bnd_year}
				        	<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
								and sido_cd = #{sido_cd}
							</if>
							<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
								and sido_cd = #{sido_cd}
								and sgg_cd = #{sgg_cd}
							</if>
							<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
								and sido_cd = #{sido_cd}
								and sgg_cd = #{sgg_cd}
								and emdong_cd = #{emdong_cd}
							</if>
				        </where> 
		              )
			       </where>
		         group by tot_reg_cd) nongga
			     , (select totbord.tot_reg_cd
			     		 <if test='adm_length == "0" or adm_length == "2"'>
							, admbord.sido_cd adm_cd
							, admbord.sido_nm adm_nm
						</if>
						<if test='adm_length == "5"'>
							, admbord.sido_cd||admbord.sgg_cd adm_cd
							, admbord.sgg_nm adm_nm
						</if>
						<if test='adm_length == "7"'>
							, admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
							, admbord.emdong_nm adm_nm
						</if>
                    from SRV_PG_ADMBORD with (nolock) admbord
                    INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
                    ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
			        <where> 
			        	and admbord.base_year = #{bnd_year}
			        	<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
							and admbord.sido_cd = #{sido_cd}
						</if>
						<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
							and admbord.sido_cd = #{sido_cd}
							and admbord.sgg_cd = #{sgg_cd}
						</if>
						<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
							and admbord.sido_cd = #{sido_cd}
							and admbord.sgg_cd = #{sgg_cd}
							and admbord.emdong_cd = #{emdong_cd}
						</if>
			        </where> 
			       )bord
			<where>
			 	nongga.tot_reg_cd = bord.tot_reg_cd 
		    </where>
		    <if test='adm_length != "13" '>
			 	group by bord.adm_cd ,bord.adm_nm 
			</if>
			<if test='adm_length == "13" '>
				group by bord.tot_reg_cd
			</if>
		</if>
		
		<if test='area_type == "1"'>
			select 
			       case when nvl(sum(nongga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
				        when nvl(sum(nongga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(sum(nongga.fmember_cnt),0) end  population
			     , nvl(round(avg(nongga.fmember_cnt)),0) avg_population
				 , case when nvl(count(nongga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
				        when nvl(count(nongga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(count(nongga.fmember_cnt),0) end  farm_cnt
			from srv_dt_nonggacensus_${year} with (nolock) nongga
			<where>
			<if test='area_type == "1" '>
				<if test='area_kind == "POLYGON" '>
					and st_within(nongga.pt,st_polyfromtext(#{area},0))=1 
				</if>
				<if test='area_kind == "POINT" '>
					and st_within(nongga.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
				</if>
				<if test='area_kind == "RECTANGLE" '>
					and st_within(nongga.pt,st_rectfromtext(#{area},0)) = 1
				</if>
			</if>
			</where>
		</if>
	</select>
	
    <!-- 가구원 통계 -->
    <select id="householdmember" parameterType="hashmap" resultType="hashmap">
        <if test='area_type == "0"'>
            select 
                   case when nvl(sum(fmember.fmember_no),0) <![CDATA[<=]]> 4 then 'N/A' 
                        when nvl(sum(fmember.fmember_no),0) <![CDATA[>]]> 4 then nvl(sum(fmember.fmember_no),0) end  population
             <if test='adm_length != "13" '>
                 , bord.adm_cd 
                 , bord.adm_nm 
             </if>
             <if test='adm_length == "13" '>
                 , bord.tot_reg_cd adm_cd 
             </if>
             from (
                   select tot_reg_cd
                        , count(fmember_no) fmember_no 
                   from 
                       srv_dt_nongimogacensusfamily_${year} with (nolock) family
                       , srv_pt_bd with (nolock) bd
                   <where>  
                    and family.sufid = bd.sufid 
                    and tot_reg_cd in 
                      (
                        select tot_reg_cd
                        from SRV_PG_TOTREGBORD with (nolock) 
                        <where> 
                            and base_year = #{bnd_year}
                            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
                                and sido_cd = #{sido_cd}
                            </if>
                            <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
                                and sido_cd = #{sido_cd}
                                and sgg_cd = #{sgg_cd}
                            </if>
                            <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
                                and sido_cd = #{sido_cd}
                                and sgg_cd = #{sgg_cd}
                                and emdong_cd = #{emdong_cd}
                            </if>
                        </where> 
                      )
                      <if test='data_type != null '>
                          and data_type=#{data_type}
                      </if>
                      <if test='gender != "0" '>
                          and gender=#{gender}
                      </if>
                      <if test='age_from != null '>
                          and age <![CDATA[>=]]> #{age_from}
                          and age <![CDATA[<=]]> #{age_to}
                      </if>
                   </where>
                 group by tot_reg_cd
             ) fmember
             , (
                select totbord.tot_reg_cd
                     <if test='adm_length == "0" or adm_length == "2"'>
                        , admbord.sido_cd adm_cd
                        , admbord.sido_nm adm_nm
                    </if>
                    <if test='adm_length == "5"'>
                        , admbord.sido_cd||admbord.sgg_cd adm_cd
                        , admbord.sgg_nm adm_nm
                    </if>
                    <if test='adm_length == "7"'>
                        , admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
                        , admbord.emdong_nm adm_nm
                    </if>
                from SRV_PG_ADMBORD with (nolock) admbord
                INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
                ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
                <where> 
                    and admbord.base_year = #{bnd_year}
                    <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
                        and admbord.sido_cd = #{sido_cd}
                    </if>
                    <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
                        and admbord.sido_cd = #{sido_cd}
                        and admbord.sgg_cd = #{sgg_cd}
                    </if>
                    <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
                        and admbord.sido_cd = #{sido_cd}
                        and admbord.sgg_cd = #{sgg_cd}
                        and admbord.emdong_cd = #{emdong_cd}
                    </if>
                </where> 
               )bord
            <where>
                fmember.tot_reg_cd =  bord.tot_reg_cd 
            </where>
            <if test='adm_length != "13" '>
                group by bord.adm_cd ,bord.adm_nm 
            </if>
            <if test='adm_length == "13" '>
                group by bord.tot_reg_cd
            </if>
        </if>
        <if test='area_type == "1"'>
            select 
                   case when nvl(count(fmember.fmember_no),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(count(fmember.fmember_no),0) <![CDATA[>]]> 4  then nvl(count(fmember.fmember_no),0) end  population
            from srv_dt_nongimogacensusfamily_${year} with (nolock) fmember 
            <where>
                <if test='area_kind == "POLYGON" '>
                    and ST_WITHIN(fmember.pt,st_polyfromtext(#{area},0))=1 
                </if>
                <if test='area_kind == "POINT" '>
                    and ST_WITHIN(fmember.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
                </if>
                <if test='area_kind == "RECTANGLE" '>
                    and ST_WITHIN(fmember.pt,st_rectfromtext(#{area},0)) = 1
                </if>
                <if test='data_type != null '>
                    and fmember.data_type=#{data_type}
                </if>
                <if test='gender != "0" '>
                    and fmember.gender=#{gender}
                </if>
                <if test='age_from != null '>
                    and fmember.age <![CDATA[>=]]> #{age_from}
                    and fmember.age <![CDATA[<=]]> #{age_to}
                </if>
            </where> 
        </if>
    </select>

	<!-- 산업체 코드 조회 -->
	<select id="industrycode" parameterType="hashmap" resultType="hashmap">
		select 
			distinct
		<if test='code_length == null '>
			ksic_1_cd class_code
		  , ksic_1_nm class_nm
		</if>
		<if test='code_length == "1" '>
			ksic_1_cd||ksic_2_cd class_code
		  , ksic_2_nm class_nm
		</if>
		<if test='code_length == "3" '>
			ksic_1_cd||ksic_3_cd class_code
		  , ksic_3_nm class_nm
		</if>
		<if test='code_length == "4" '>
			ksic_1_cd||ksic_4_cd class_code
		  , ksic_4_nm class_nm
		</if>
		<if test='code_length == "5" or code_length == "6" '>	
			ksic_1_cd||ksic_5_cd class_code
		  , ksic_5_nm class_nm
		</if>
		from cmm_cd_corpclass with (nolock) 
		where 
			class_deg = #{class_deg}
			and ksic_1_cd != '0'
		<if test='code_length != null '>
			and ksic_1_cd=#{ksic1}
		</if>
		<if test='class_code != null and code_length != "1" '>
			and ksic_5_cd like #{ksic5}||'%'
		</if> 
		group by 
		<if test='code_length == null '>
			ksic_1_cd
		  , ksic_1_nm
		</if>
		<if test='code_length == "1" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		</if>
		<if test='code_length == "3" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_cd
		  , ksic_3_nm
		</if>
		<if test='code_length == "4" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_cd
		  , ksic_3_nm
		  , ksic_4_cd
		  , ksic_4_nm
		</if>
		<if test='code_length == "5" or code_length == "6" '>	
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_cd
		  , ksic_3_nm
		  , ksic_4_cd
		  , ksic_4_nm
		  , ksic_5_cd
		  , ksic_5_nm
		</if>
	</select>
	
	<sql id="companyTotalHead">
		SELECT
			<if test='(adm_length == "0") or (adm_length == "2")'>
				bord.sido_cd as adm_cd
				, bord.sido_nm as adm_nm
			</if>
			<if test='adm_length == "5"'>
				bord.sido_cd || bord.sgg_cd as adm_cd
				, bord.sgg_nm as adm_nm
			</if>
			<if test='adm_length == "7"'>
				bord.adm_cd as adm_cd
				, bord.emdong_nm as adm_nm
			</if>
			<if test='adm_length == "13"'>
				corp.adm_cd as adm_cd
			</if>
			, case when nvl(corp_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				when nvl(corp_cnt, 0) <![CDATA[>]]> 4 then nvl(corp_cnt, 0) end  corp_cnt
			, case when nvl(corp.worker_sum_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				else corp.worker_sum_cnt END tot_worker
		FROM
	</sql>
	
	<sql id="sggWithClassCdThemeCd">
		(
		SELECT
			sido_cd
			<if test='adm_length == "5"'>
				, sgg_cd
			</if>
			, sum(corp_cnt) as corp_cnt <!-- 2016. 10. 06 수정 -->
			, sum(employee_cnt) as worker_sum_cnt
		FROM
		<choose>
			<when test='theme_cd != null and class_code == null'>
				srv_dt_corpthemesgg with (nolock) 
			</when>
			<otherwise>
				srv_dt_corpclasssgg with (nolock) 
			</otherwise>
		</choose>
		WHERE
			base_year = #{year}
			<choose>
				<when test='theme_cd != null and class_code == null'>
					and theme_cd like #{theme_cd} || '%'
					<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
						and sido_cd = #{sido_cd}
					</if>
					<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
						and sido_cd = #{sido_cd}
						and sgg_cd = #{sgg_cd}
					</if>
					<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
						and sido_cd = #{sido_cd}
						and sgg_cd = #{sgg_cd}
						and emdong_cd = #{emdong_cd}
					</if>
				</when>
				<otherwise>
					<if test='class_code != null and class_code.length() ==  1'>
						and ksic_1_cd = #{ksic1}
					</if>
					<if test = 'class_code != null and class_code.length() > 1'>
						and ksic_5_cd like #{ksic5} || '%'
					</if>
					<if test = 'adm_cd != null and adm_cd.length() >= 2'>
						and sido_cd = #{sido_cd}
					</if>
					<if test = 'amd_cd != null and adm_cd.length() == 5'>
						and sgg_cd = #{sgg_cd}
					</if>
				</otherwise>
			</choose>
		GROUP BY sido_cd
		<if test='adm_length == "5"'>
			, sgg_cd
		</if>
		) corp
	</sql>
	
	<sql id="totWithClassCdThemeCd">
		(
		SELECT
			<if test='adm_length == "7"'>
				substr(tot_reg_cd, 1, 7) as adm_cd
			</if>
			<if test='adm_length == "13"'>
				tot_reg_cd as adm_cd
			</if>
			, sum(corp_cnt) as corp_cnt  <!-- 2016. 10. 06 수정 -->
			, sum(employee_cnt) as worker_sum_cnt
		FROM
		<choose>
			<when test='theme_cd != null and class_code == null'>
				srv_dt_corpthemereg with (nolock) 
			</when>
			<otherwise>
				srv_dt_corpclassreg with (nolock) 
			</otherwise>
		</choose>
		WHERE
			base_year = #{year}
			<choose>
				<when test='theme_cd != null and class_code == null'>
					and theme_cd like #{theme_cd} || '%'
					and tot_reg_cd like #{adm_cd} || '%'
				</when>
				<otherwise>
					<if test='class_code != null and class_code.length() ==  1'>
						and ksic_1_cd = #{ksic1}
					</if>
					<if test = 'class_code != null and class_code.length() > 1'>
						and ksic_5_cd like #{ksic5} || '%'
					</if>
					and tot_reg_cd like #{adm_cd} || '%'
				</otherwise>
			</choose>
		<if test='adm_length == "7"'>
			GROUP BY substr(tot_reg_cd, 1, 7)
		</if>
		<if test='adm_length == "13"'>
			GROUP BY tot_reg_cd
		</if>
		) corp
	</sql>
	
	<!-- 사업체 통계 2016 (집계테이블 이용) -->
	<select id="companyTotal" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			/* 전국 */
			<if test = '(adm_length == "0") or (adm_length == "2")'>
				<include refid="companyTotalHead" />
				<include refid="sggWithClassCdThemeCd" />
				INNER JOIN (
					<!-- 2017. 03. 21 오류수정 -->
					select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
				) bord
				ON corp.sido_cd = bord.sido_cd
			</if>
			/* 시군구 */
			<if test = '(adm_length == "5")'>
				<include refid="companyTotalHead" />
				<include refid="sggWithClassCdThemeCd" />
				INNER JOIN (
					select sido_cd, sgg_cd, sido_nm, sgg_nm
					from srv_pg_sggbord with (nolock) 
					<!-- 2017. 03. 21 오류수정 -->
					where base_year = #{bnd_year} and sido_cd = #{sido_cd}
				) bord
				ON corp.sido_cd = bord.sido_cd
					and corp.sgg_cd = bord.sgg_cd
			</if>
			/* 읍면동 */
			<if test = '(adm_length == "7")'>
				<include refid="companyTotalHead" />
				<include refid="totWithClassCdThemeCd" />
				INNER JOIN (
					SELECT
						sido_cd || sgg_cd || emdong_cd as adm_cd
						, sido_nm
						, sgg_cd, sgg_nm
						, emdong_cd, emdong_nm
					  FROM srv_pg_admbord with (nolock) 
					  <!-- 2017. 03. 21 오류수정 -->
					 WHERE base_year =  #{bnd_year}
				) bord
				ON corp.adm_cd =  bord.adm_cd
			</if>
			/* 집계구 */
			<if test = 'adm_length == "13"'>
				<include refid="companyTotalHead" />
				<include refid="totWithClassCdThemeCd" />
			</if>
		</if>
	</select>

	<!-- 사업체 통계 update -->
	<select id="company" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			/* 전국 */
			<if test = '(adm_length == "0") or (adm_length == "2")'>
				select 
					bord.sido_cd as adm_cd
					, bord.sido_nm as adm_nm
					<!-- 2016. 03. 24 j.h.Seok modify -->
					<!-- 2016. 03. 31 j.h.Seok modify -->
					<!-- , A.corp_cnt as corp_cnt -->
					, case when nvl(corp_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        when nvl(corp_cnt, 0) <![CDATA[>]]> 4 then nvl(corp_cnt, 0) end  corp_cnt
					, case when nvl(A.worker_sum_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        else A.worker_sum_cnt END tot_worker
				from 
				(
					select substr(bd.tot_reg_cd, 1, 2) sido, count(*) corp_cnt, sum(co.employee_cnt) worker_sum_cnt
					from
						(
							select * from srv_dt_corpcensus_${corp_num} with (nolock) where base_year = #{year}
							<if test='class_code != null and class_code.length() ==  1'>
								and ksic_1_cd = #{ksic1}
							</if>
							<if test = 'class_code != null and class_code.length() > 1'>
								and ksic_5_cd like #{ksic5} || '%'
							</if>
							<if test='theme_cd != null and class_code == null'>
								and theme_cd like #{theme_cd} || '%'
							</if>
							
						) co,
						(select sufid, tot_reg_cd from srv_pt_bd with (nolock) ) bd
					where
						co.sufid = bd.sufid
					group by
						substr(bd.tot_reg_cd, 1, 2)
				) A,
				(
					<!-- 2017. 03. 21 오류 수정 -->
					select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
				) bord
				<where>
					and A.sido = bord.sido_cd
					<if test = 'adm_length == "2"'>
						and A.sido = #{sido_cd}
					</if>
				</where>
			</if>
			/* 시군구 */
			<if test = '(adm_length == "5")'>
				select 
					bord.sido_cd || bord.sgg_cd as adm_cd
					, bord.sgg_nm as adm_nm
					, case when nvl(corp_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        when nvl(corp_cnt, 0) <![CDATA[>]]> 4 then nvl(corp_cnt, 0) end  corp_cnt
				    <!-- 2016. 03. 31 j. h. Seok -->    
					, case when nvl(A.worker_sum_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        else A.worker_sum_cnt END tot_worker
				from 
				(
					select substr(bd.tot_reg_cd, 1, 5) adm, count(*) corp_cnt, sum(co.employee_cnt) worker_sum_cnt
					from
						(
							select * from srv_dt_corpcensus_${corp_num} with (nolock) where base_year = #{year}
							<if test='class_code != null and class_code.length() ==  1'>
								and ksic_1_cd = #{ksic1}
							</if>
							<if test = 'class_code != null and class_code.length() > 1'>
								and ksic_5_cd like #{ksic5} || '%'
							</if>
							<if test='theme_cd != null and class_code == null'>
								and theme_cd like #{theme_cd} || '%'
							</if>
					  ) co,
						(select sufid, tot_reg_cd from srv_pt_bd with (nolock) where tot_reg_cd like ${sido_cd}${sgg_cd} || '%') bd
					where
						co.sufid = bd.sufid
					group by
						substr(bd.tot_reg_cd, 1, 5)
				) A,
				(
					select sido_cd||sgg_cd adm, sido_cd, sgg_cd, sido_nm, sgg_nm
					from srv_pg_sggbord with (nolock) 
					<!-- 2017. 03. 21 오류 수정 -->
					where base_year = #{bnd_year} and sido_cd = #{sido_cd}
				) bord
				where
					A.adm = bord.adm
					<if test = '0 and low_search == "0"'>
						and bord.sido_cd = #{sido_cd} and bord.sgg_cd = #{sgg_cd}
					</if>
			</if>
			/* 읍면동 */
			<if test = '(adm_length == "7")'>
				select 
					bord.sido_cd || bord.sgg_cd || bord.emdong_cd as adm_cd
					, bord.emdong_nm as adm_nm
					, case when nvl(corp_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        when nvl(corp_cnt, 0) <![CDATA[>]]> 4 then nvl(corp_cnt, 0) end  corp_cnt
				    <!-- 2016. 03. 31 j. h. Seok -->    
					, case when nvl(A.worker_sum_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        else A.worker_sum_cnt END tot_worker
				from 
				(
					select substr(bd.tot_reg_cd, 1, 7) adm, count(*) corp_cnt, sum(co.employee_cnt) worker_sum_cnt
					from
						(
							select * from srv_dt_corpcensus_${corp_num} with (nolock) where base_year = #{year}
							<if test='class_code != null and class_code.length() ==  1'>
								and ksic_1_cd = #{ksic1}
							</if>
							<if test = 'class_code != null and class_code.length() > 1'>
								and ksic_5_cd like #{ksic5} || '%'
							</if>
							<if test='theme_cd != null and class_code == null'>
								and theme_cd like #{theme_cd} || '%'
							</if>
						) co,
						(select sufid, tot_reg_cd from srv_pt_bd with (nolock) where tot_reg_cd like ${sido_cd}${sgg_cd}${emdong_cd} || '%' ) bd
					where
						co.sufid = bd.sufid
					group by
						substr(bd.tot_reg_cd, 1, 7)
				) A,
				(
					select sido_cd||sgg_cd||emdong_cd adm, sido_cd, sgg_cd, emdong_cd, sido_nm, sgg_nm, emdong_nm
					from srv_pg_admbord with (nolock) 
					<!-- 2017. 03. 21 오류 수정 -->
					where base_year = #{bnd_year} and sido_cd = #{sido_cd}
					<if test = 'sgg_cd != null'>
						and sgg_cd = ${sgg_cd}
					</if>
				) bord
				where
					A.adm = bord.adm
					<if test = '0 and low_search == "0"'>
						and bord.sido_cd = #{sido_cd} and bord.sgg_cd = #{sgg_cd} and bord.emdong_cd = #{emdong_cd}
					</if>
					<if test = '0 and low_search == "1"'>
						and bord.sido_cd = #{sido_cd} and bord.sgg_cd = #{sgg_cd}
					</if>
			</if>
			/* 집계구 */
			<if test = 'adm_length == "13"'>
				select 
					tot_reg_cd as adm_cd
					, case when nvl(corp_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        when nvl(corp_cnt, 0) <![CDATA[>]]> 4 then nvl(corp_cnt, 0) end  corp_cnt
				    <!-- 2016. 03. 31 j. h. Seok -->    
					, case when nvl(A.worker_sum_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				        else A.worker_sum_cnt END tot_worker
				from 
				(
					select bd.tot_reg_cd, count(*) corp_cnt, sum(co.employee_cnt) worker_sum_cnt
					from
						(
							select * from srv_dt_corpcensus_${corp_num} with (nolock) where base_year = #{year}
							<if test='class_code != null and class_code.length() ==  1'>
								and ksic_1_cd = #{ksic1}
							</if>
							<if test = 'class_code != null and class_code.length() > 1'>
								and ksic_5_cd like #{ksic5} || '%'
							</if>
							<if test='theme_cd != null and class_code == null'>
								and theme_cd like #{theme_cd} || '%'
							</if>
						) co,
						(select sufid, tot_reg_cd from srv_pt_bd with (nolock) where tot_reg_cd like ${sido_cd}${sgg_cd}${emdong_cd} || '%' ) bd
					where
						co.sufid = bd.sufid
					group by
						bd.tot_reg_cd
				) A
				<where>
					<if test = '0 and low_search == "0"'>
						and tot_reg_cd = ''
						and bord.sido_cd = #{sido_cd} and bord.sgg_cd = #{sgg_cd} and bord.emdong_cd = #{emdong_cd}
					</if>
					<if test = '0 and low_search == "1"'>
						and bord.sido_cd = #{sido_cd} and bord.sgg_cd = #{sgg_cd}
					</if>
				</where>
			</if>
		</if>
	</select>
	 
	<!-- 사업체 통계 -->
	<select id="company-old" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			select
			       case when nvl(sum(corp.corp_no),0) <![CDATA[<=]]> 4 then 'N/A' 
				        when nvl(sum(corp.corp_no),0) <![CDATA[>]]> 4 then nvl(sum(corp.corp_no),0) end  corp_cnt
			     , sum(corp.worker_sum_cnt) tot_worker 
			 <if test='adm_length != "13" '>
			     , bord.adm_cd 
			     , bord.adm_nm 
			 </if>
			 <if test='adm_length == "13" '>
			     , bord.tot_reg_cd adm_cd 
			 </if>
			 from (
			 	   select bd.tot_reg_cd
		                , count(*) corp_no 
		                , sum(cor.employee_cnt) worker_sum_cnt 
			       from srv_dt_corpcensus_${corp_num} with (nolock) cor
			       		, srv_pt_bd with (nolock) bd
		           <where>
		            and cor.base_year = #{year}
		            and bd.sufid = cor.sufid
		            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
						and bd.tot_reg_cd like #{sido_cd} || '%'
					</if>
					<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
						and bd.tot_reg_cd like '${sido_cd}${sgg_cd}%'
					</if>
					<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
						and bd.tot_reg_cd like '${sido_cd}${sgg_cd}${emdong_cd}%'
					</if>
					
		           	  <if test='code_length != null '>
					  	  and cor.ksic_1_cd=#{ksic1}
					  </if>
					  <if test='class_code != null and code_length != "1" '>
						  and cor.ksic_5_cd like #{ksic5}||'%'
					  </if>
					  <if test='theme_cd != null'>
					  	  and cor.theme_cd like #{theme_cd}||'%'
					  </if>
		           </where>
		         group by bd.tot_reg_cd
			) corp
			, (
				select totbord.tot_reg_cd
					 <if test='adm_length == "0" or adm_length == "2"'>
						, admbord.sido_cd adm_cd
						, admbord.sido_nm adm_nm
					</if>
					<if test='adm_length == "5"'>
						, admbord.sido_cd||admbord.sgg_cd adm_cd
						, admbord.sgg_nm adm_nm
					</if>
					<if test='adm_length == "7"'>
						, admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
						, admbord.emdong_nm adm_nm
					</if>
				from SRV_PG_ADMBORD with (nolock) admbord
				INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
				ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
				<where> 
					and admbord.base_year = #{bnd_year}
					<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
						and admbord.sido_cd = #{sido_cd}
					</if>
					<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
						and admbord.sido_cd = #{sido_cd}
						and admbord.sgg_cd = #{sgg_cd}
					</if>
					<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1") '>
						and admbord.sido_cd = #{sido_cd}
						and admbord.sgg_cd = #{sgg_cd}
						and admbord.emdong_cd = #{emdong_cd}
					</if>
				</where> 
			)bord
			<where>
			 	corp.tot_reg_cd =  bord.tot_reg_cd 
		    </where>
		    <if test='adm_length != "13" '>
			 	group by bord.adm_cd ,bord.adm_nm 
			</if>
			<if test='adm_length == "13" '>
				group by bord.tot_reg_cd
			</if>
		</if>
		<if test='area_type == "1"'>
			select 
				   case when count(*) <![CDATA[<=]]> 4  then 'N/A' 
				        when count(*) <![CDATA[>]]> 4  then count(*) end  corp_cnt
				 , sum(corp.employee_cnt) avg_worker
			from srv_dt_corpcensus_${corp_num} with (nolock) corp 
			       , cmm_cd_corpclass with (nolock) class
			       , srv_pt_bd with (nolock) bd
			<where>
				and corp.base_year = #{year}
				and bd.sufid = corp.sufid
				<if test='area_type == "1" '>
					<if test='area_kind == "POLYGON" '>
						and st_within(bd.pt,st_polyfromtext(#{area},0))=1 
					</if>
					<if test='area_kind == "POINT" '>
						and st_within(bd.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
					</if>
					<if test='area_kind == "RECTANGLE" '>
						and st_within(bd.pt,st_rectfromtext(#{area},0)) = 1
					</if>
				</if>
					and class.class_deg = #{class_deg}
				<if test='code_length != null '>
					and class.ksic_1_cd=#{ksic1}
				</if>
				<if test='class_code != null and code_length != "1" '>
					and class.ksic_5_cd like #{ksic5}||'%'
				</if>
				<if test='theme_cd != null'>
			  	    and class.theme_cd like #{theme_cd}||'%'
			    </if>
			    	 and corp.ksic_5_cd=class.ksic_5_cd
			</where> 
		</if>
	</select>
	
	<select id="companysearch" parameterType="hashmap" resultMap="companysearchMap">
		select count(*) totalcount
			,case when TRUNC(count(*)/to_char(#{resultcount})) <![CDATA[=]]> to_char(#{pagenum}) then mod(count(*),to_char(#{resultcount}))
			  when TRUNC(count(*)/to_char(#{resultcount})) <![CDATA[>]]> to_char(#{pagenum}) then to_number(to_char(#{resultcount}))
			  when TRUNC(count(*)/to_char(#{resultcount})) <![CDATA[<]]> to_char(#{pagenum}) then 0
			end as returncount
			,to_char(#{resultcount}) as resultcount
			,to_char(#{pagenum}) as pagenum
			,to_char(#{ksic1}) as ksic1
			,to_char(#{year}) as year
			,to_char(#{srt_idx}) as srt_idx
			,to_char(#{area_type}) as area_type
			,to_char(#{adm_length}) as adm_length
			,to_char(#{area_kind}) as area_kind
			,to_char(#{theme_cd}) as theme_cd
			,to_char(#{code_length}) as code_length
			,to_char(#{class_code}) as class_code
			,to_char(#{area}) as area
			,to_char(#{round}) as round
			,to_char(#{ksic5}) as ksic5	  
			,to_char(#{bnd_year}) as bnd_year	
			,to_char(#{sido_cd}) as sido_cd
			,to_char(#{sgg_cd}) as sgg_cd
			,to_char(#{emdong_cd}) as emdong_cd	
			,to_char(#{direction}) as direction	
			,to_char(#{class_deg}) as class_deg	
			,to_char(#{corp_num}) as corp_num
			  from (
				select pt.sufid, pt.tot_reg_cd, pt.pt, corp.ksic_1_cd, corp.ksic_5_cd, corp.corp_nm, corp.employee_cnt, corp.theme_cd, pg.naddr, pg.adm_cd, pg.adm_nm
				  from (
						select sufid, tot_reg_cd, pt
						  from srv_pt_bd with (nolock) bd  
						<where>
							<if test = 'area_type == "1"'>
								<if test='area_kind == "POLYGON" '>
									and st_within(bd.pt, st_polyfromtext(#{area}, 0))=1 
								</if>
								<if test='area_kind == "POINT" '>
									and st_within(bd.pt, st_buffer(st_pointfromtext(#{area}, 0), #{round})) = 1
								</if>
								<if test='area_kind == "RECTANGLE" '>
									and st_within(bd.pt, st_rectfromtext(#{area}, 0)) = 1
								</if>
								<if test='area_kind == "LINE" '>
									and st_withindistance(bd.pt, st_linefromtext(#{area}, 0), #{round}, #{direction})=1 
								</if>
							</if>
							<if test = 'area_type == "0"'>
								and tot_reg_cd like ${sido_cd}${sgg_cd}${emdong_cd} || '%'
							</if>
						</where>
					   ) pt
				 INNER 
				  JOIN (
						select sufid, ksic_1_cd, ksic_5_cd, corp_nm, employee_cnt, theme_cd
						  from srv_dt_corpcensus_${corp_num} with (nolock) 
						 
					   ) corp
					ON pt.sufid = corp.sufid
				 LEFT OUTER 
				  JOIN (
						select sufid, naddr, adm_cd, adm_nm
						  from srv_pg_censusbd with (nolock) 
						  <where>
							<if test = 'area_type == "1"'>
								<if test='area_kind == "POLYGON" '>
									and st_intersects(bord, st_polyfromtext(#{area}, 0))=1 
								</if>
								<if test='area_kind == "POINT" '>
									and st_intersects(bord, st_buffer(st_pointfromtext(#{area}, 0), #{round})) = 1
								</if>
								<if test='area_kind == "RECTANGLE" '>
									and st_intersects(bord, st_rectfromtext(#{area}, 0)) = 1
								</if>
								<if test='area_kind == "LINE" '>
									and st_intersects(bord, st_linefromtext(#{area}, 0), #{round}, #{direction})=1 
								</if>
							</if>
						</where>
					   ) pg
					ON pt.sufid = pg.sufid
					where corp.base_year = #{year}
							<!--  테마코드 체크  -->
							<if test='theme_cd != null '>
								<if test = 'theme_cd.length() == 4'>
									and corp.theme_cd like #{theme_cd} || '%'
								</if>
								<if test = 'theme_cd.length() == 2'>
									and corp.techbiz_s_class_cd like #{theme_cd} || '%'
								</if>
							</if>
							<!--  산업체 분류  -->
							<if test='class_code != null and class_code.length() == 1'>
								and corp.ksic_1_cd = #{ksic1}
							</if>
							<if test='class_code != null and class_code.length() != 1'>
								and corp.ksic_5_cd like #{ksic5} || '%'
							</if>
			   ) bdinfo
		 LEFT OUTER
		  JOIN (
				select *
				  from cmm_cd_corpclass with (nolock) 
				 where class_deg = #{class_deg}
			   ) class
			on bdinfo.ksic_1_cd = class.ksic_1_cd
		   and bdinfo.ksic_5_cd = class.ksic_5_cd
		 <!-- 2016. 10. 06 수정 -->
		 LEFT OUTER 
		  JOIN cmm_cd_theme with (nolock) theme
			on bdinfo.theme_cd = theme.theme_cd
		limit #{srt_idx}, #{resultcount}
	</select>
	<!-- 사업체조회 -->
	<select id="companysearch-old" parameterType="hashmap" resultMap="companysearchMap">
<!-- 	<select id="companysearch" parameterType="hashmap" resultType="hashmap"> -->
		select count(*) totalcount
			,case when TRUNC(count(*)/to_char(#{resultcount})) <![CDATA[=]]> to_char(#{pagenum}) then mod(count(*),to_char(#{resultcount}))
			  when TRUNC(count(*)/to_char(#{resultcount})) <![CDATA[>]]> to_char(#{pagenum}) then to_number(to_char(#{resultcount}))
			  when TRUNC(count(*)/to_char(#{resultcount})) <![CDATA[<]]> to_char(#{pagenum}) then 0
			end as returncount
			,to_char(#{resultcount}) as resultcount
			,to_char(#{pagenum}) as pagenum
			,to_char(#{ksic1}) as ksic1
			,to_char(#{year}) as year
			,to_char(#{srt_idx}) as srt_idx
			,to_char(#{area_type}) as area_type
			,to_char(#{adm_length}) as adm_length
			,to_char(#{area_kind}) as area_kind
			,to_char(#{theme_cd}) as theme_cd
			,to_char(#{code_length}) as code_length
			,to_char(#{class_code}) as class_code
			,to_char(#{area}) as area
			,to_char(#{round}) as round
			,to_char(#{ksic5}) as ksic5	  
			,to_char(#{bnd_year}) as bnd_year	
			,to_char(#{sido_cd}) as sido_cd
			,to_char(#{sgg_cd}) as sgg_cd
			,to_char(#{emdong_cd}) as emdong_cd	
			,to_char(#{direction}) as direction	
			,to_char(#{class_deg}) as class_deg	
			,to_char(#{corp_num}) as corp_num	
		from srv_dt_corpcensus_${corp_num} with (nolock) corp
		   , cmm_cd_corpclass with (nolock) class
		   , cmm_cd_theme with (nolock) theme
		   , srv_pt_bd with (nolock) bd
           , SRV_PG_CENSUSBD with (nolock) censusbd
		<where>
            and corp.sufid = bd.sufid
            and corp.ksic_5_cd = class.ksic_5_cd 
            and corp.theme_cd = theme.theme_cd
            and corp.sufid = censusbd.sufid
            and corp.base_year = #{year}
		<if test='area_type == "1" '>
			<if test='area_kind == "POLYGON" '>
				and st_within(bd.pt,st_polyfromtext(#{area},0))=1 
			</if>
			<if test='area_kind == "POINT" '>
				and st_within(bd.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
			</if>
			<if test='area_kind == "RECTANGLE" '>
				and st_within(bd.pt,st_rectfromtext(#{area},0)) = 1
			</if>
			<if test='area_kind == "LINE" '>
				and st_withindistance(bd.pt,st_linefromtext(#{area},0),#{round},#{direction})=1 
			</if>
		</if>

        <if test='area_type == "0"'>
        	and corp.adm_cd like ${sido_cd}${sgg_cd}${emdong_cd} || '%'
        </if>
		<if test='theme_cd == null '>
		    and class.class_deg = #{class_deg}
		</if>
		<if test='theme_cd != null '>
		    and class.theme_cd like #{theme_cd}||'%'
		</if>
		<if test='code_length != null '>
			and class.ksic_1_cd=#{ksic1}
		</if>
		<if test='class_code != null and code_length != "1" '>
			and class.ksic_5_cd like #{ksic5}||'%'
		</if>
		</where>
	</select>
	
	<resultMap id="companysearchMap" type="kostat.sop.OpenAPI3.api.stats.dto.CompanysearchMap">
		<collection property="company_list"
			column="{
						corp_num = corp_num
						, year = year
						, bnd_year = bnd_year
						, sido_cd = sido_cd
						, sgg_cd = sgg_cd
						, emdong_cd = emdong_cd
						, ksic1 = ksic1
						, ksic5 = ksic5
						, theme_cd = theme_cd
						, area_type = area_type
						, adm_length = adm_length
						, area_kind = area_kind
						, area = area
						, code_length = code_length
						, class_code = class_code
						, class_deg = class_deg
						, srt_idx = srt_idx
						, direction = direction
						, round = round
						, resultcount = resultcount
			}"
			ofType="hashmap" javaType="ArrayList" select="companysearchinfo">
		</collection>
	</resultMap>
	
	<select id="companysearchinfo" parameterType="hashmap" resultType="hashmap">
		/* companysearchinfo 시작 */
		select bdinfo.adm_cd
				, bdinfo.tot_reg_cd
				, bdinfo.theme_cd
				, bdinfo.ksic_1_cd || bdinfo.ksic_5_cd as class_code
				, class.ksic_5_nm as class_nm
				, bdinfo.corp_nm, '' as main_nm
				, bdinfo.adm_nm as adm_addr
				, bdinfo.naddr
				, round(st_x(bdinfo.pt)) as x
				, round(st_y(bdinfo.pt)) as y
				, '' as tel_no
				, '' as hpage
				, bdinfo.sufid
				, bdinfo.employee_cnt as worker_sum
				, theme.b_theme_cd_nm || '/' || s_theme_cd_nm theme_nm
		  from (
				select pt.sufid, pt.tot_reg_cd, pt.pt, corp.ksic_1_cd, corp.ksic_5_cd, corp.corp_nm, corp.employee_cnt, corp.theme_cd, pg.naddr, left(pt.tot_reg_cd, 7) adm_cd, pg.adm_nm
				  from (
						select sufid, tot_reg_cd, pt
						  from srv_pt_bd with (nolock) bd
						<where>
							<if test = 'area_type == "1"'>
								<if test='area_kind == "POLYGON" '>
									and st_within(bd.pt, st_polyfromtext(#{area}, 0))=1 
								</if>
								<if test='area_kind == "POINT" '>
									and st_within(bd.pt, st_buffer(st_pointfromtext(#{area}, 0), #{round})) = 1
								</if>
								<if test='area_kind == "RECTANGLE" '>
									and st_within(bd.pt, st_rectfromtext(#{area}, 0)) = 1
								</if>
								<if test='area_kind == "LINE" '>
									and st_withindistance(bd.pt, st_linefromtext(#{area}, 0), #{round}, #{direction})=1 
								</if>
							</if>
							<if test = 'area_type == "0"'>
								and tot_reg_cd like ${sido_cd}${sgg_cd}${emdong_cd} || '%'
							</if>
						</where>
					   ) pt
				 INNER 
				  JOIN (
						select sufid, ksic_1_cd, ksic_5_cd, corp_nm, employee_cnt, theme_cd
						  from srv_dt_corpcensus_${corp_num} with (nolock) 
						 
					   ) corp
					ON pt.sufid = corp.sufid
				 ,
					(
						select sufid, naddr, adm_cd, adm_nm
						  from srv_pg_censusbd with (nolock) 
						  <where>
							<if test = 'area_type == "1"'>
								<if test='area_kind == "POLYGON" '>
									and st_intersects(bord, st_polyfromtext(#{area}, 0))=1 
								</if>
								<if test='area_kind == "POINT" '>
									and st_intersects(bord, st_buffer(st_pointfromtext(#{area}, 0), #{round})) = 1
								</if>
								<if test='area_kind == "RECTANGLE" '>
									and st_intersects(bord, st_rectfromtext(#{area}, 0)) = 1
								</if>
								<if test='area_kind == "LINE" '>
									and st_intersects(bord, st_linefromtext(#{area}, 0), #{round}, #{direction})=1 
								</if>
							</if>
						</where>
					   ) pg
					where pt.sufid(+) = pg.sufid
					and corp.base_year = #{year}
							/* 테마코드 체크 */
							<if test='theme_cd != null '>
								<if test = 'theme_cd.length() == 4'>
									and corp.theme_cd like #{theme_cd} || '%'
								</if>
								<if test = 'theme_cd.length() == 2'>
									and corp.techbiz_s_class_cd like #{theme_cd} || '%'
								</if>
							</if>
							
							/* 산업체 분류 */
							<if test='class_code != null and class_code.length() == 1'>
								and corp.ksic_1_cd = #{ksic1}
							</if>
							<if test='class_code != null and class_code.length() != 1'>
								and corp.ksic_5_cd like #{ksic5} || '%'
							</if>
				<!-- 2016. 10. 06 수정 -->
				limit #{srt_idx}, #{resultcount}
			   ) bdinfo
		 INNER 
		  JOIN (
				select *
				  from cmm_cd_corpclass with (nolock) 
				 where class_deg = #{class_deg}
			   ) class
			on bdinfo.ksic_1_cd = class.ksic_1_cd
		   and bdinfo.ksic_5_cd = class.ksic_5_cd
		 <!-- 2016. 10. 06 수정 -->
		 , cmm_cd_theme with (nolock) theme
			where bdinfo.theme_cd(+) = theme.theme_cd
		
	
	</select>
	 
	<select id="companysearchinfo-old" parameterType="hashmap" resultType="hashmap">
        select
             corp.adm_cd
             , bd.tot_reg_cd
             , corp.ksic_1_cd || corp.ksic_5_cd class_code
             , class.ksic_5_nm class_nm
             , corp.corp_nm
             , '' AS main_nm
             , corp.employee_cnt
             , censusbd.naddr
             , censusbd.adm_nm as adm_addr
             , '' AS hpage
             , '' as tel_no
             , corp.sufid
             , round(st_x(bd.pt)) x
             , round(st_y(bd.pt)) y
             , theme.b_theme_cd_nm||'/'||theme.s_theme_cd_nm theme_nm
             , theme.theme_cd
        from srv_dt_corpcensus_${corp_num} with (nolock) corp
           , cmm_cd_corpclass with (nolock) class
           , cmm_cd_theme with (nolock) theme
           , SRV_PT_BD with (nolock) bd
           , SRV_PG_CENSUSBD with (nolock) censusbd
        <where>
            and corp.sufid = bd.sufid
            and corp.ksic_5_cd = class.ksic_5_cd 
            and corp.theme_cd = theme.theme_cd
            and corp.sufid = censusbd.sufid
            and corp.base_year = #{year}
        <if test='area_type == "1" '>
            <if test='area_kind == "POLYGON" '>
                and st_within(bd.pt,st_polyfromtext(#{area},0))=1 
            </if>
            <if test='area_kind == "POINT" '>
                and st_within(bd.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
            </if>
            <if test='area_kind == "RECTANGLE" '>
                and st_within(bd.pt,st_rectfromtext(#{area},0)) = 1
            </if>
            <if test='area_kind == "LINE" '>
                and st_withindistance(bd.pt,st_linefromtext(#{area},0),#{round},#{direction})=1 
            </if>
        </if>
        
        <if test='area_type == "0"'>
        	and corp.adm_cd like ${sido_cd}${sgg_cd}${emdong_cd} || '%'
        </if>

        <if test='theme_cd == null '>
            and class.class_deg = #{class_deg}
        </if>
        <if test='theme_cd != null '>
            and class.theme_cd like #{theme_cd}||'%'
        </if>
        <if test='code_length != null '>
            and class.ksic_1_cd=#{ksic1}
        </if>
        <if test='class_code != null and code_length != "1" '>
            and class.ksic_5_cd like #{ksic5}||'%'
        </if>
        </where>
            limit #{srt_idx}, #{resultcount}
    </select>
	
	<select id="sidocheck" parameterType="hashmap" resultType="String">
		select tb_nm from srv_pg_sidobord with (nolock) 
		<where>
			base_year=#{bnd_year}
		<if test='area_type == "0" and sido_cd != null '>
			and sido_cd=#{sido_cd}
		</if>
		<if test='area_type == "1" '>
				<if test='area_kind == "POLYGON" '>
					and st_within(st_polyfromtext(#{area},0),bord)=1 
				</if>
				<if test='area_kind == "POINT" '>
					and st_within(st_buffer(st_pointfromtext(#{area},0),#{round}),bord) = 1
				</if>
				<if test='area_kind == "RECTANGLE" '>
					and st_within(st_rectfromtext(#{area},0),bord) = 1
				</if>
		</if>
		</where>
	</select>
	
	<!-- [START] 총조사주요표 관련 쿼리 -->
	<!-- 공통부분 정의 -->
	<sql id="cmmColumCensusIndex">
		BASE_YEAR                  AS BASE_YEAR
		, nvl(TOT_PPLTN, 0)        AS TOT_PPLTN
		, nvl(AVG_AGE, 0)          AS AVG_AGE
		, nvl(PPLTN_DNSTY, 0)      AS PPLTN_DNSTY
		, nvl(AGED_CHILD_IDX, 0)   AS AGED_CHILD_IDX
		, nvl(OLDAGE_SUPRT_PER, 0) AS OLDAGE_SUPRT_PER
		, nvl(JUV_SUPRT_PER, 0)    AS JUV_SUPRT_PER
		, nvl(TOT_FAMILY, 0)       AS TOT_FAMILY
		, nvl(AVG_FMEMBER_CNT, 0)  AS AVG_FMEMBER_CNT
		, nvl(TOT_HOUSE, 0)        AS TOT_HOUSE
		, nvl(NONGGA_CNT, 0)       AS NONGGA_CNT
		, nvl(NONGGA_PPLTN, 0)     AS NONGGA_PPLTN
		, nvl(IMGA_CNT, 0)         AS IMGA_CNT
		, nvl(IMGA_PPLTN, 0)       AS IMGA_PPLTN
		, nvl(NAESUOGA_CNT, 0)     AS NAESUOGA_CNT
		, nvl(NAESUOGA_PPLTN, 0)   AS NAESUOGA_PPLTN
		, nvl(HAESUOGA_CNT, 0)     AS HAESUOGA_CNT
		, nvl(HAESUOGA_PPLTN, 0)   AS HAESUOGA_PPLTN
		, to_int('0')              AS CORP_CNT
		, to_int('0')              AS EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumCensusIndexAdmCd">
		, INFO_DIV                 AS INFO_DIV
		, REGION_CD                AS REGION_CD
		, BORD_BASE_YEAR           AS BORD_BASE_YEAR
	</sql>
	<sql id="cmmColumCensusIndexTot">
		, TOT_REG_CD     AS TOT_REG_CD
	</sql>
	<sql id="cmmColumResultCensusIndex">
		ADM_CD             AS ADM_CD
		, ADM_NM           AS ADM_NM
		, CASE WHEN TOT_PPLTN <![CDATA[<=]]> 4 then 'N/A'
			 WHEN TOT_PPLTN <![CDATA[>]]> 4 then TOT_PPLTN end TOT_PPLTN
		, AVG_AGE          AS AVG_AGE
		, PPLTN_DNSTY      AS PPLTN_DNSTY
		, AGED_CHILD_IDX   AS AGED_CHILD_IDX
		, OLDAGE_SUPRT_PER AS OLDAGE_SUPRT_PER
		, JUV_SUPRT_PER    AS JUV_SUPRT_PER
		, CASE WHEN TOT_FAMILY <![CDATA[<=]]> 4 then 'N/A'
				WHEN TOT_FAMILY <![CDATA[>]]> 4 then TOT_FAMILY end TOT_FAMILY
		, AVG_FMEMBER_CNT  AS AVG_FMEMBER_CNT
		, CASE WHEN TOT_HOUSE <![CDATA[<=]]> 4 then 'N/A'
				WHEN TOT_HOUSE <![CDATA[>]]> 4 then TOT_HOUSE end TOT_HOUSE
	<!-- 2016.08.26 2015일 경우 데이터 표출 안함 .-->
		<!-- <if test='year != "2015"'> -->
		, CASE WHEN NONGGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN NONGGA_CNT <![CDATA[>]]> 4 then NONGGA_CNT end NONGGA_CNT
		, CASE WHEN NONGGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN NONGGA_PPLTN <![CDATA[>]]> 4 then NONGGA_PPLTN end NONGGA_PPLTN
		, CASE WHEN IMGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN IMGA_CNT <![CDATA[>]]> 4 then IMGA_CNT end IMGA_CNT
		, CASE WHEN IMGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN IMGA_PPLTN <![CDATA[>]]> 4 then IMGA_PPLTN end IMGA_PPLTN
		, CASE WHEN NAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN NAESUOGA_CNT <![CDATA[>]]> 4 then NAESUOGA_CNT end NAESUOGA_CNT
		, CASE WHEN NAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN NAESUOGA_PPLTN <![CDATA[>]]> 4 then NAESUOGA_PPLTN end NAESUOGA_PPLTN
		, CASE WHEN HAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN HAESUOGA_CNT <![CDATA[>]]> 4 then HAESUOGA_CNT end HAESUOGA_CNT
		, CASE WHEN HAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN HAESUOGA_PPLTN <![CDATA[>]]> 4 then HAESUOGA_PPLTN end HAESUOGA_PPLTN
		<!-- </if> -->
		<!-- 2016. 03. 24 j.h.Seok modify -->
		<!-- 2016. 03. 31 j.h.Seok modify -->
		<!-- , CORP_CNT AS CORP_CNT -->
		, CASE WHEN CORP_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN CORP_CNT <![CDATA[>]]> 4 then CORP_CNT end CORP_CNT
		, CASE WHEN EMPLOYEE_CNT <![CDATA[<=]]> 4 then 'N/A'
				ELSE EMPLOYEE_CNT end EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumCorpCensusIndex">
		BASE_YEAR        AS BASE_YEAR
		, to_int('0')    AS TOT_PPLTN
		, to_number('0') AS AVG_AGE
		, to_number('0') AS PPLTN_DNSTY
		, to_number('0') AS AGED_CHILD_IDX
		, to_number('0') AS OLDAGE_SUPRT_PER
		, to_number('0') AS JUV_SUPRT_PER
		, to_int('0')    AS TOT_FAMILY
		, to_number('0') AS AVG_FMEMBER_CNT
		, to_int('0')    AS TOT_HOUSE
		, to_int('0')    AS NONGGA_CNT
		, to_int('0')    AS NONGGA_PPLTN
		, to_int('0')    AS IMGA_CNT
		, to_int('0')    AS IMGA_PPLTN
		, to_int('0')    AS NAESUOGA_CNT
		, to_int('0')    AS NAESUOGA_PPLTN
		, to_int('0')    AS HAESUOGA_CNT
		, to_int('0')    AS HAESUOGA_PPLTN
		, CORP_CNT       AS CORP_CNT
		, EMPLOYEE_CNT   AS EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumSumCensusIndex">
		ADDR.ADM_CD             AS ADM_CD
		, ADDR.ADM_NM           AS ADM_NM
		, sum(TOT_PPLTN)        AS TOT_PPLTN
		, sum(AVG_AGE)          AS AVG_AGE
		, sum(PPLTN_DNSTY)      AS PPLTN_DNSTY
		, sum(AGED_CHILD_IDX)   AS AGED_CHILD_IDX
		, sum(OLDAGE_SUPRT_PER) AS OLDAGE_SUPRT_PER
		, sum(JUV_SUPRT_PER)    AS JUV_SUPRT_PER
		, sum(TOT_FAMILY)       AS TOT_FAMILY
		, sum(AVG_FMEMBER_CNT)  AS AVG_FMEMBER_CNT
		, sum(TOT_HOUSE)        AS TOT_HOUSE
		, sum(NONGGA_CNT)       AS NONGGA_CNT
		, sum(NONGGA_PPLTN)     AS NONGGA_PPLTN
		, sum(IMGA_CNT)         AS IMGA_CNT
		, sum(IMGA_PPLTN)       AS IMGA_PPLTN
		, sum(NAESUOGA_CNT)     AS NAESUOGA_CNT
		, sum(NAESUOGA_PPLTN)   AS NAESUOGA_PPLTN
		, sum(HAESUOGA_CNT)     AS HAESUOGA_CNT
		, sum(HAESUOGA_PPLTN)   AS HAESUOGA_PPLTN
		, sum(CORP_CNT)         AS CORP_CNT
		, sum(EMPLOYEE_CNT)     AS EMPLOYEE_CNT
	</sql>
	<select id="censusIndex" parameterType="hashmap" resultType="hashmap">
		SELECT
			<include refid="cmmColumResultCensusIndex" />
		FROM (
			SELECT
				<include refid="cmmColumSumCensusIndex" />
			FROM (
				SELECT 
					<include refid="cmmColumCensusIndex" />
					<include refid="cmmColumCensusIndexAdmCd" />
				FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
				WHERE
						BASE_YEAR          = #{year}
						AND BORD_BASE_YEAR = #{bnd_year}
						AND REGION_CD = #{adm_cd}
						AND INFO_DIV       = #{info_div}
				UNION ALL
				SELECT
					<include refid="cmmColumCorpCensusIndex" />
					<include refid="cmmColumCensusIndexAdmCd" />
				FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
				where
					BASE_YEAR          = #{year}
					AND BORD_BASE_YEAR = #{bnd_year}
					AND REGION_CD = #{adm_cd}
					AND INFO_DIV       = #{info_div}
			) CENSUSINDEX
			INNER JOIN (
				SELECT DISTINCT
					<if test='info_div == "1"'>
						SIDO_CD AS ADM_CD
						, SIDO_NM AS ADM_NM
					</if>
					<if test='info_div == "2"'>
						SIDO_CD
						, SGG_CD
						, SIDO_CD || SGG_CD AS ADM_CD
						, SIDO_NM || SGG_NM AS ADM_NM
					</if>
					<if test='info_div == "3"'>
						SIDO_CD || SGG_CD || EMDONG_CD AS ADM_CD
						, SIDO_NM || SGG_NM || EMDONG_NM AS ADM_NM
					</if>
				FROM 
						SRV_PG_ADMBORD with (nolock) ADMBORD
				WHERE
					ADMBORD.BASE_YEAR = #{bnd_year}
			) ADDR 
					ON CENSUSINDEX.REGION_CD = ADDR.ADM_CD
			GROUP BY ADM_CD, ADM_NM
		)
	</select>
	
	<select id="censusIndexSidoAll" parameterType="hashmap" resultType="hashmap">
		<choose>
			<when test="low_search == 0">
				SELECT
					  CASE WHEN TOT_PPLTN <![CDATA[<=]]> 4 then 'N/A'
						 WHEN TOT_PPLTN <![CDATA[>]]> 4 then TOT_PPLTN end TOT_PPLTN
					, AVG_AGE          AS AVG_AGE
					, PPLTN_DNSTY      AS PPLTN_DNSTY
					, AGED_CHILD_IDX   AS AGED_CHILD_IDX
					, OLDAGE_SUPRT_PER AS OLDAGE_SUPRT_PER
					, JUV_SUPRT_PER    AS JUV_SUPRT_PER
					, CASE WHEN TOT_FAMILY <![CDATA[<=]]> 4 then 'N/A'
							WHEN TOT_FAMILY <![CDATA[>]]> 4 then TOT_FAMILY end TOT_FAMILY
					, AVG_FMEMBER_CNT  AS AVG_FMEMBER_CNT
					, CASE WHEN TOT_HOUSE <![CDATA[<=]]> 4 then 'N/A'
							WHEN TOT_HOUSE <![CDATA[>]]> 4 then TOT_HOUSE end TOT_HOUSE
					, CASE WHEN NONGGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN NONGGA_CNT <![CDATA[>]]> 4 then NONGGA_CNT end NONGGA_CNT
					, CASE WHEN NONGGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN NONGGA_PPLTN <![CDATA[>]]> 4 then NONGGA_PPLTN end NONGGA_PPLTN
					, CASE WHEN IMGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN IMGA_CNT <![CDATA[>]]> 4 then IMGA_CNT end IMGA_CNT
					, CASE WHEN IMGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN IMGA_PPLTN <![CDATA[>]]> 4 then IMGA_PPLTN end IMGA_PPLTN
					, CASE WHEN NAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN NAESUOGA_CNT <![CDATA[>]]> 4 then NAESUOGA_CNT end NAESUOGA_CNT
					, CASE WHEN NAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN NAESUOGA_PPLTN <![CDATA[>]]> 4 then NAESUOGA_PPLTN end NAESUOGA_PPLTN
					, CASE WHEN HAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN HAESUOGA_CNT <![CDATA[>]]> 4 then HAESUOGA_CNT end HAESUOGA_CNT
					, CASE WHEN HAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN HAESUOGA_PPLTN <![CDATA[>]]> 4 then HAESUOGA_PPLTN end HAESUOGA_PPLTN
					, CASE WHEN CORP_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN CORP_CNT <![CDATA[>]]> 4 then CORP_CNT end CORP_CNT
					, CASE WHEN EMPLOYEE_CNT <![CDATA[<=]]> 4 then 'N/A'
							ELSE EMPLOYEE_CNT end EMPLOYEE_CNT
				FROM (
					SELECT
						  TOT_PPLTN
						, AVG_AGE
						, PPLTN_DNSTY
						, AGED_CHILD_IDX
						, OLDAGE_SUPRT_PER
						, JUV_SUPRT_PER
						, TOT_FAMILY
						, AVG_FMEMBER_CNT
						, TOT_HOUSE
						, NONGGA_CNT
						, NONGGA_PPLTN
						, IMGA_CNT
						, IMGA_PPLTN
						, NAESUOGA_CNT
						, NAESUOGA_PPLTN
						, HAESUOGA_CNT
						, HAESUOGA_PPLTN
						, CORP_CNT
						, EMPLOYEE_CNT
					FROM (
						SELECT 
							<include refid="cmmColumCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
						WHERE
								BASE_YEAR          = #{year}
								AND BORD_BASE_YEAR = #{bnd_year}
								AND INFO_DIV       = #{info_div}
						UNION ALL
						SELECT
							<include refid="cmmColumCorpCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
						where
							BASE_YEAR          = #{year}
							AND BORD_BASE_YEAR = #{bnd_year}
							AND INFO_DIV       = #{info_div}
					) CENSUSINDEX
				)
			</when>
			<otherwise>
				SELECT
					<include refid="cmmColumResultCensusIndex" />
				FROM (
					SELECT
						<include refid="cmmColumSumCensusIndex" />
					FROM (
						SELECT 
							<include refid="cmmColumCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
						WHERE
								BASE_YEAR          = #{year}
								AND BORD_BASE_YEAR = #{bnd_year}
								AND INFO_DIV       = #{info_div}
						UNION ALL
						SELECT
							<include refid="cmmColumCorpCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
						where
							BASE_YEAR          = #{year}
							AND BORD_BASE_YEAR = #{bnd_year}
							AND INFO_DIV       = #{info_div}
					) CENSUSINDEX
					INNER JOIN (
						SELECT DISTINCT
								SIDO_CD   AS ADM_CD
								, SIDO_NM AS ADM_NM
						FROM 
								SRV_PG_ADMBORD with (nolock) 
						WHERE
							BASE_YEAR = #{bnd_year}
					) ADDR
							ON CENSUSINDEX.REGION_CD = ADDR.ADM_CD
					GROUP BY ADM_CD, ADM_NM
				)
			</otherwise>
		</choose>
		
	</select>

	<select id="censusIndexLowSearch" parameterType="hashmap" resultType="hashmap">
		SELECT
			<include refid="cmmColumResultCensusIndex" />
		FROM (
			SELECT
				<include refid="cmmColumSumCensusIndex" />
			FROM (
				SELECT 
					<include refid="cmmColumCensusIndex" />
					<include refid="cmmColumCensusIndexAdmCd" />
				FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
				WHERE
						BASE_YEAR          = #{year}
						AND BORD_BASE_YEAR = #{bnd_year}
						AND REGION_CD like #{adm_cd} || '%'
						AND INFO_DIV       = #{info_div}
				UNION ALL
				SELECT
					<include refid="cmmColumCorpCensusIndex" />
					<include refid="cmmColumCensusIndexAdmCd" />
				FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
				where
					BASE_YEAR          = #{year}
					AND BORD_BASE_YEAR = #{bnd_year}
					AND REGION_CD like #{adm_cd} || '%'
					AND INFO_DIV       = #{info_div}
			) CENSUSINDEX
			INNER JOIN (
				SELECT DISTINCT
					<if test='info_div == "2"'>
						SIDO_CD || SGG_CD AS ADM_CD
						, SGG_NM AS ADM_NM
					</if>
					<if test='info_div == "3"'>
						SIDO_CD || SGG_CD || EMDONG_CD AS ADM_CD
						, EMDONG_NM AS ADM_NM
					</if>
				FROM 
						SRV_PG_ADMBORD with (nolock) ADMBORD
				WHERE
					ADMBORD.BASE_YEAR = #{bnd_year}
			) ADDR 
					ON CENSUSINDEX.REGION_CD = ADDR.ADM_CD
			GROUP BY ADM_CD, ADM_NM
		)
	</select>
	
	<select id="totCensusIndex" parameterType="hashmap" resultType="hashmap">
		SELECT
			<include refid="cmmColumResultCensusIndex" />
		FROM (
			SELECT
				<include refid="cmmColumSumCensusIndex" />
			FROM (
				SELECT 
					<include refid="cmmColumCensusIndex" />
					<include refid="cmmColumCensusIndexTot" />
				FROM SRV_DT_TOTCENSUS_INDEX with (nolock) 
				WHERE
						BASE_YEAR          = #{year} AND TOT_REG_CD LIKE #{adm_cd} || '%'
				UNION ALL
				SELECT
					<include refid="cmmColumCorpCensusIndex" />
					<include refid="cmmColumCensusIndexTot" />
				FROM SRV_DT_TOTCORPCENSUS_INDEX with (nolock) 
				where
					BASE_YEAR          = #{year} AND TOT_REG_CD LIKE #{adm_cd} || '%'
			) TOTCENSUSINDEX
			INNER JOIN (
				SELECT DISTINCT
						TOTBORD.TOT_REG_CD AS ADM_CD
						, ADMBORD.EMDONG_NM AS ADM_NM
						, TOTBORD.TOT_REG_CD AS TOT_REG_CD
				FROM 
						SRV_PG_ADMBORD with (nolock) ADMBORD
				INNER JOIN SRV_PG_TOTREGBORD with (nolock) TOTBORD
						ON ADMBORD.BASE_YEAR = TOTBORD.BASE_YEAR 
						AND ADMBORD.SIDO_CD = TOTBORD.SIDO_CD 
						AND ADMBORD.SGG_CD = TOTBORD.SGG_CD 
						AND ADMBORD.EMDONG_CD = TOTBORD.EMDONG_CD
				WHERE
						ADMBORD.BASE_YEAR = #{bnd_year}
						AND TOT_REG_CD LIKE #{adm_cd} || '%'
			) ADDR 
			ON TOTCENSUSINDEX.TOT_REG_CD = ADDR.TOT_REG_CD
			GROUP BY ADM_CD, ADM_NM
		)
	</select>
	<!-- [END] 총조사주요표 관련 쿼리 -->
	
	
	<!-- ======================================= mng_s grid start ======================================== -->
	<!-- 그리드 총조사주요지표(총인구, 가구, 평균 가구원, 주택, 사업체수 -->
	<select id="censusIndexGrid" parameterType="hashmap" resultType="hashmap">
		<!--
		SELECT
			<include refid="cmmColumResultCensusIndex" />
		FROM (
			SELECT
				<include refid="cmmColumSumCensusIndex" />
			FROM (
				SELECT 
					<include refid="cmmColumCensusIndex" />
					<include refid="cmmColumCensusIndexTot" />
				FROM SRV_DT_TOTCENSUS_INDEX with (nolock) 
				WHERE
						BASE_YEAR          = #{year}
				UNION ALL
				SELECT
					<include refid="cmmColumCorpCensusIndex" />
					<include refid="cmmColumCensusIndexTot" />
				FROM SRV_DT_TOTCORPCENSUS_INDEX with (nolock) 
				where
					BASE_YEAR          = #{year}
			) TOTCENSUSINDEX
			INNER JOIN (
				SELECT DISTINCT
						TOTBORD.TOT_REG_CD AS ADM_CD
						, ADMBORD.EMDONG_NM AS ADM_NM
						, TOTBORD.TOT_REG_CD AS TOT_REG_CD
				FROM 
						SRV_PG_ADMBORD with (nolock) ADMBORD
				INNER JOIN SRV_PG_TOTREGBORD with (nolock) TOTBORD
						ON ADMBORD.BASE_YEAR = TOTBORD.BASE_YEAR 
						AND ADMBORD.SIDO_CD = TOTBORD.SIDO_CD 
						AND ADMBORD.SGG_CD = TOTBORD.SGG_CD 
						AND ADMBORD.EMDONG_CD = TOTBORD.EMDONG_CD
				WHERE
						ADMBORD.BASE_YEAR = #{bnd_year}
						AND TOT_REG_CD LIKE #{adm_cd} || '%'
			) ADDR 
			ON TOTCENSUSINDEX.TOT_REG_CD = ADDR.TOT_REG_CD
			GROUP BY ADM_CD, ADM_NM
		)
		-->
		 
		
		<if test='zoom == "0" '>
			<!--
			select  grid_cd adm_cd,  adm_nm,  TOT_PPLTN from grid_test with (nolock) a, srv_pg_grid_100k_bord with (nolock) b
			where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
			and a.grid_cd=b.grid_100k_cd
			-->
			
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, srv_pg_grid_100k_bord with (nolock) b
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt
				from srv_pg_grid_100k_bord with (nolock) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and c.grid_cd = b.grid_100k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a,
					(select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_100k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			
			
			
		</if>
		<if test=' zoom=="1" or zoom=="2" or zoom == "3" or zoom == "4" or zoom=="5"  '>
			<!--
			select  grid_cd adm_cd,  adm_nm,  TOT_PPLTN from grid_test with (nolock) a, srv_pg_grid_10k_bord with (nolock) b
			where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
			and a.grid_cd=b.grid_10k_cd
			-->
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, srv_pg_grid_10k_bord with (nolock) b
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt
				from srv_pg_grid_10k_bord with (nolock) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and c.grid_cd = b.grid_10k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_10k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			
		</if>
		
		<if test='zoom=="6" or zoom=="7" or zoom=="8"  '>
			<!--
		    select a.grid_cd adm_cd,  adm_nm,  TOT_PPLTN from SRV_DT_GRID_TOTIDX with (nolock) a, srv_pg_grid_1k_bord with (nolock) b
			where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
			and a.grid_cd=b.grid_1k_cd
			-->
			
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, srv_pg_grid_1k_bord with (nolock) b
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt
				from srv_pg_grid_1k_bord with (nolock) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and c.grid_cd = b.grid_1k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
		    -->
		    
		    select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock)  
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_1k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
		    
		</if>
		
		
		
		<if test=' zoom=="9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<!--
			select  grid_cd adm_cd,  adm_nm,  TOT_PPLTN from grid_test with (nolock) a, srv_pg_grid_100m_bord with (nolock) b
			where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
			and a.grid_cd=b.grid_100m_cd
			-->
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, srv_pg_grid_100m_bord with (nolock) b
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt
				from srv_pg_grid_100m_bord with (nolock) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where st_intersects(b.bord, st_rectfromtext(#{area},0))=1 
					and c.grid_cd = b.grid_100m_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_100m_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			
		</if>
		
	</select>
	
	
	<!-- 그리드 인구주택총조사(인구조건) -->
	<select id="innersearchpopulation_grid" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0"  '>
			<!--
			select a.grid_cd adm_cd, a.grid_cd adm_nm,  PPLTN_CNT population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, srv_pg_grid_100k_bord with (nolock) b
				where st_intersects(b.bord, st_rectfromtext('rectangle(983660 1820097,986392 1820953)',0))=1 
					and a.grid_cd = b.grid_100k_cd
					and a.base_year='2010'
			-->
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015"  or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019"  '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		<if test='  zoom=="1" or zoom=="2" or zoom=="3" or zoom == "4" or zoom=="5" '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		
		<if test=' zoom=="6" or zoom=="7" or zoom=="8"   '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
		    
		</if>
		
		
		
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			
		</if>
		
	</select>
	
	
	<!-- 그리드 인구주택총조사(가구) -->
	<select id="household_grid" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0" '>
			
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		<if test='  zoom=="1" or zoom=="2" or  zoom=="3" or zoom == "4" or zoom=="5"  '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		
		<if test=' zoom=="6" or zoom=="7" or zoom=="8"   '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
		    
		</if>
		
		
		
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
		</if>
		
	</select>
	
	<!-- mng_s grid 주택통계 2010년도 이하 및 2015년도 -->
	<select id="house_grid" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0"  '>
			
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where house.GRID_LEVEL_DIV='100k'
					and house.grid_cd = b.grid_100k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  house.GRID_LEVEL_DIV='100k'
					and house.grid_cd = b.grid_100k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			
			
		</if>
		<if test=' zoom=="1" or zoom=="2" or  zoom=="3" or zoom == "4" or zoom=="5"  '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  house.GRID_LEVEL_DIV='10k'
					and house.grid_cd = b.grid_10k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  house.GRID_LEVEL_DIV='10k'
					and house.grid_cd = b.grid_10k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			
			
		</if>
		
		<if test=' zoom=="6" or zoom=="7" or zoom=="8"   '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  house.GRID_LEVEL_DIV='1k'
					and house.grid_cd = b.grid_1k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, (select grid_1k_cd from srv_pg_grid_1k_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  house.GRID_LEVEL_DIV='1k'
					and house.grid_cd = b.grid_1k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
		    
		</if>
		
		
		
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  house.GRID_LEVEL_DIV='100m'
					and house.grid_cd = b.grid_100m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, (select grid_100m_cd from srv_pg_grid_100m_bord with (nolock) 
						where st_intersects(bord, st_rectfromtext(#{area},0))=1  ) b
				where  house.GRID_LEVEL_DIV='100m'
					and house.grid_cd = b.grid_100m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			
		</if>
	</select>
	
	<!-- 그리드 범례 predefined된 값 가져오기 -->
	<!-- 데이터 구축 전 테스트용으로 작성된 구문임 -->
	<select id="gridlegend" parameterType="hashmap" resultType="hashmap">
		<!--
		select gubun,lvl,to_number(step), to_number(val) val from grid_legend_tmp
		where gubun='총인구' and lvl = '1k' and to_number(step) < 10
		order by to_number(step) asc
		-->
		
		<!-- 
			범례에서 최소값 하나는 제외하고 화면에 뿌려주므로 
		     최소값을 넣으려면 로우하나를 union all로 추가하기바람
		    또한 아래 11을 적은것은 코드를 그냥 유지하려고 넣은것이고 최소값 로우 유니언 올 하게되면 10으로 변경요망
		    제일 좋은 것은 테이블에 최소값을 더미로 하나 추가하는게 정답일듯하다.  (최소값은 5를 넣기로함)
		    총인구 = 1, 가구 = 2, 평균 가구원 = 3, 주택 = 4, 사업체수 -5
		-->
		
		<if test='zoom == "0" '>
			<if test='title == "1" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='1' and lvl = '100k' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
			<if test='title == "2" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='2' and lvl = '100k' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
		</if>
		<if test=' zoom=="1"  or zoom=="2" or zoom=="3" or zoom == "4" or zoom=="5"'>
			<if test='title == "1" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='1' and lvl = '10k' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
			<if test='title == "2" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='2' and lvl = '10k' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
		</if>
		<if test='  zoom=="6" or zoom=="7" or zoom=="8"  '>
			<if test='title == "1" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='1' and lvl = '1k' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
			<if test='title == "2" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='2' and lvl = '1k' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
		</if>
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='title == "1" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='1' and lvl = '100m' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
			<if test='title == "2" '>
				select gubun,lvl,to_number(step), val from grid_legend_tmp with (nolock) 
				where gubun='2' and lvl = '100m' and to_number(step) <![CDATA[  <  ]]> 11
				order by to_number(step) asc
			</if>
		</if>
	</select>
	
	<select id="gridlegend_0301" parameterType="hashmap" resultType="hashmap">
		
		<!-- 
			범례에서 최소값 하나는 제외하고 화면에 뿌려주므로 
		     최소값을 넣으려면 로우하나를 union all로 추가하기바람
		    또한 아래 11을 적은것은 코드를 그냥 유지하려고 넣은것이고 최소값 로우 유니언 올 하게되면 10으로 변경요망
		    제일 좋은 것은 테이블에 최소값을 더미로 하나 추가하는게 정답일듯하다.  (최소값은 5를 넣기로함)
		    총인구(tot_ppltn) = 1, 가구 = 2, 평균 가구원 = 3, 주택 = 4, 사업체수 =5, 종사자수=6
		-->
		
		<if test='zoom == "0" '>
			<if test='title == "1" '>
				
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_ppltn' and grid_level_div='100k' 
				and base_year=#{year}
				order by exmpl_level
				
			</if>
			<if test='title == "2" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_family' and grid_level_div='100k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "3" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='avg_fmember_cnt' and grid_level_div='100k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "4" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_house' and grid_level_div='100k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "5" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='C' and value_type='corp_cnt' and grid_level_div='100k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "6" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='C' and value_type='employee_cnt' and grid_level_div='100k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
		</if>
		<if test='  zoom=="1" or zoom=="2" or zoom=="3" or zoom == "4" or zoom=="5"'>
			<if test='title == "1" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_ppltn' and grid_level_div='10k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "2" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_family' and grid_level_div='10k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "3" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='avg_fmember_cnt' and grid_level_div='10k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "4" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_house' and grid_level_div='10k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "5" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl
				where stat_type='C' and value_type='corp_cnt' and grid_level_div='10k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "6" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='C' and value_type='employee_cnt' and grid_level_div='10k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
		</if>
		<if test='  zoom=="6" or zoom=="7" or zoom=="8"  '>
			<if test='title == "1" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_ppltn' and grid_level_div='1k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "2" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_family' and grid_level_div='1k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "3" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='avg_fmember_cnt' and grid_level_div='1k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "4" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_house' and grid_level_div='1k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "5" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='C' and value_type='corp_cnt' and grid_level_div='1k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "6" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='C' and value_type='employee_cnt' and grid_level_div='1k' 
				and base_year=#{year}
				order by exmpl_level
			</if>
		</if>
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='title == "1" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_ppltn' and grid_level_div='100m' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "2" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_family' and grid_level_div='100m' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "3" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='avg_fmember_cnt' and grid_level_div='100m' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "4" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='T' and value_type='tot_house' and grid_level_div='100m' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "5" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='C' and value_type='corp_cnt' and grid_level_div='100m' 
				and base_year=#{year}
				order by exmpl_level
			</if>
			<if test='title == "6" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='C' and value_type='employee_cnt' and grid_level_div='100m' 
				and base_year=#{year}
				order by exmpl_level
			</if>
		</if>
	</select>
	
	<!-- 인구 -->
	<select id="gridlegend_0302" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0" '>
			
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='P' and value_type='ppltn_cnt' and grid_level_div='100k' 
			and base_year=#{year}
			<if test='gender == "0" '>
				and gender is null
			</if>
			<if test='gender != "0" '>
				and gender=#{gender}
			</if>
			<if test='age_from != null '>
				and start_age_cd = #{start_age_cd}
				and end_age_cd = #{end_age_cd}
			</if>
			<if test='age_from == null '>
				and start_age_cd is null and end_age_cd is null
			</if>
						
			order by exmpl_level
			
		</if>
		<if test=' zoom=="1" or  zoom=="2" or zoom=="3" or zoom == "4" or zoom=="5"'>
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='P' and value_type='ppltn_cnt' and grid_level_div='10k' 
			and base_year=#{year}
			<if test='gender == "0" '>
				and gender is null
			</if>
			<if test='gender != "0" '>
				and gender=#{gender}
			</if>
			<if test='age_from != null '>
				and start_age_cd = #{start_age_cd}
				and end_age_cd = #{end_age_cd}
			</if>
			<if test='age_from == null '>
				and start_age_cd is null and end_age_cd is null
			</if>
			order by exmpl_level
		</if>
		<if test='  zoom=="6" or zoom=="7" or zoom=="8"  '>
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='P' and value_type='ppltn_cnt' and grid_level_div='1k' 
			and base_year=#{year}
			<if test='gender == "0" '>
				and gender is null
			</if>
			<if test='gender != "0" '>
				and gender=#{gender}
			</if>
			<if test='age_from != null '>
				and start_age_cd = #{start_age_cd}
				and end_age_cd = #{end_age_cd}
			</if>
			<if test='age_from == null '>
				and start_age_cd is null and end_age_cd is null
			</if>
			order by exmpl_level
		</if>
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='P' and value_type='ppltn_cnt' and grid_level_div='100m' 
			and base_year=#{year}
			<if test='gender == "0" '>
				and gender is null
			</if>
			<if test='gender != "0" '>
				and gender=#{gender}
			</if>
			<if test='age_from != null '>
				and start_age_cd = #{start_age_cd}
				and end_age_cd = #{end_age_cd}
			</if>
			<if test='age_from == null '>
				and start_age_cd is null and end_age_cd is null
			</if>
			order by exmpl_level
		</if>
	</select>
	
	<!-- 가구 -->
	<select id="gridlegend_0305" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0"'>
			
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='F' and value_type='family_cnt' and grid_level_div='100k' 
			and base_year=#{year}
			<if test='household_type == null '>
				and rd_household_type_param is null
			</if>
			<if test='household_type != null '>
				and rd_household_type_param = #{household_type}
			</if>
			order by exmpl_level
			
		</if>
		<if test='  zoom=="1" or  zoom=="2" or zoom=="3" or zoom == "4" or zoom=="5"'>
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='F' and value_type='family_cnt' and grid_level_div='10k' 
			and base_year=#{year}
			<if test='household_type == null '>
				and rd_household_type_param is null
			</if>
			<if test='household_type != null '>
				and rd_household_type_param = #{household_type}
			</if>
			order by exmpl_level
		</if>
		<if test='  zoom=="6" or zoom=="7" or zoom=="8"  '>
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='F' and value_type='family_cnt' and grid_level_div='1k' 
			and base_year=#{year}
			<if test='household_type == null '>
				and rd_household_type_param is null
			</if>
			<if test='household_type != null '>
				and rd_household_type_param = #{household_type}
			</if>
			order by exmpl_level
		</if>
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
			from srv_dt_grid_exmpl with (nolock) 
			where stat_type='F' and value_type='family_cnt' and grid_level_div='100m' 
			and base_year=#{year}
			<if test='household_type == null '>
				and rd_household_type_param is null
			</if>
			<if test='household_type != null '>
				and rd_household_type_param = #{household_type}
			</if>
			order by exmpl_level
		</if>
	</select>
	
	<!-- 주택 -->
	<select id="gridlegend_0306" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0" '>
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='100k' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='const_year == null '>
					and rd_const_year is null
				</if>
				<if test='const_year != null '>
					and rd_const_year = #{const_year}
				</if>
				
				<if test='house_area_cd == null '>
					and start_rd_bdspace_mm is null
					and end_rd_bdspace_mm is null
				</if>
				<if test='house_area_cd != null '>
					and start_rd_bdspace_mm = #{start_house_area_cd}
					<if test='end_house_area_cd == null '>
						and end_rd_bdspace_mm is null
					</if>
					<if test='end_house_area_cd != null '>
						and end_rd_bdspace_mm = #{end_house_area_cd}
					</if>
				</if>
				order by exmpl_level
			</if>
			<if test='year == "2015" or year == "2016" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='100k' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='house_use_prid_cd == null '>
					and house_use_prid_cd is null
				</if>
				<if test='house_use_prid_cd != null '>
					and house_use_prid_cd = #{house_use_prid_cd}
				</if>
				<if test='house_area_cd == null '>
					and start_house_area_cd is null
					and end_house_area_cd is null
				</if>
				<if test='house_area_cd != null '>
					and start_house_area_cd = #{start_house_area_cd}
					and end_house_area_cd = #{end_house_area_cd}
				</if>
				order by exmpl_level
			</if>
			
		</if>
		<if test='  zoom=="1" or zoom=="2" or zoom=="3" or zoom == "4" or zoom=="5"'>
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='10k' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='const_year == null '>
					and rd_const_year is null
				</if>
				<if test='const_year != null '>
					and rd_const_year = #{const_year}
				</if>
				
				<if test='house_area_cd == null '>
					and start_rd_bdspace_mm is null
					and end_rd_bdspace_mm is null
				</if>
				<if test='house_area_cd != null '>
					and start_rd_bdspace_mm = #{start_house_area_cd}
					<if test='end_house_area_cd == null '>
						and end_rd_bdspace_mm is null
					</if>
					<if test='end_house_area_cd != null '>
						and end_rd_bdspace_mm = #{end_house_area_cd}
					</if>
				</if>
				order by exmpl_level
			</if>
			<if test='year == "2015" or year == "2016" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='10k' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='house_use_prid_cd == null '>
					and house_use_prid_cd is null
				</if>
				<if test='house_use_prid_cd != null '>
					and house_use_prid_cd = #{house_use_prid_cd}
				</if>
				<if test='house_area_cd == null '>
					and start_house_area_cd is null
					and end_house_area_cd is null
				</if>
				<if test='house_area_cd != null '>
					and start_house_area_cd = #{start_house_area_cd}
					and end_house_area_cd = #{end_house_area_cd}
				</if>
				order by exmpl_level
			</if>
		</if>
		<if test='  zoom=="6" or zoom=="7" or zoom=="8"  '>
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='1k' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='const_year == null '>
					and rd_const_year is null
				</if>
				<if test='const_year != null '>
					and rd_const_year = #{const_year}
				</if>
				
				<if test='house_area_cd == null '>
					and start_rd_bdspace_mm is null
					and end_rd_bdspace_mm is null
				</if>
				<if test='house_area_cd != null '>
					and start_rd_bdspace_mm = #{start_house_area_cd}
					<if test='end_house_area_cd == null '>
						and end_rd_bdspace_mm is null
					</if>
					<if test='end_house_area_cd != null '>
						and end_rd_bdspace_mm = #{end_house_area_cd}
					</if>
				</if>
				order by exmpl_level
			</if>
			<if test='year == "2015" or year == "2016" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='1k' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='house_use_prid_cd == null '>
					and house_use_prid_cd is null
				</if>
				<if test='house_use_prid_cd != null '>
					and house_use_prid_cd = #{house_use_prid_cd}
				</if>
				<if test='house_area_cd == null '>
					and start_house_area_cd is null
					and end_house_area_cd is null
				</if>
				<if test='house_area_cd != null '>
					and start_house_area_cd = #{start_house_area_cd}
					and end_house_area_cd = #{end_house_area_cd}
				</if>
				order by exmpl_level
			</if>
		</if>
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='100m' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='const_year == null '>
					and rd_const_year is null
				</if>
				<if test='const_year != null '>
					and rd_const_year = #{const_year}
				</if>
				<if test='house_area_cd == null '>
					and start_rd_bdspace_mm is null
					and end_rd_bdspace_mm is null
				</if>
				<if test='house_area_cd != null '>
					and start_rd_bdspace_mm = #{start_house_area_cd}
					<if test='end_house_area_cd == null '>
						and end_rd_bdspace_mm is null
					</if>
					<if test='end_house_area_cd != null '>
						and end_rd_bdspace_mm = #{end_house_area_cd}
					</if>
				</if>
				order by exmpl_level
			</if>
			<if test='year == "2015" or year == "2016" '>
				select stat_type, value_type, grid_level_div, exmpl_level, exmpl_value
				from srv_dt_grid_exmpl with (nolock) 
				where stat_type='H' and value_type='resid_cnt' and grid_level_div='100m' 
				and base_year=#{year}
				<if test='house_type == null '>
					and rd_resid_1_type is null
				</if>
				<if test='house_type != null '>
					and rd_resid_1_type = #{house_type}
				</if>
				<if test='house_use_prid_cd == null '>
					and house_use_prid_cd is null
				</if>
				<if test='house_use_prid_cd != null '>
					and house_use_prid_cd = #{house_use_prid_cd}
				</if>
				
				<if test='house_area_cd == null '>
					and start_house_area_cd is null
					and end_house_area_cd is null
				</if>
				<if test='house_area_cd != null '>
					and start_house_area_cd = #{start_house_area_cd}
					and end_house_area_cd = #{end_house_area_cd}
				</if>
				order by exmpl_level
			</if>
		</if>
	</select>
	
	<!-- mng_e grid end -->
	
	<!-- ======================================= mng_s bnd_grid start ======================================== -->
	<!-- 행정구역 그리드 총조사주요지표(총인구, 가구, 평균 가구원, 주택, 사업체수 -->
	<select id="censusIndexBndGrid" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0" '>
			
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a,
					( select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid
						 ) b
				where a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from ( select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where c.grid_cd = b.grid_100k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			
			<if test=' filter=="tot_ppltn" or filter=="tot_family" or filter == "tot_house"     '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house
				from SRV_DT_GRID_TOTIDX with (nolock) a,
					( select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid
						 ) b
				where a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
			</if>
			
			<if test=' filter=="corp_cnt" or filter=="employee_cnt"   '>
				select c.grid_cd adm_cd, c.grid_cd adm_nm, corp_cnt, employee_cnt
				from ( select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where c.grid_cd = b.grid_100k_cd
					and c.base_year=#{year}
			</if>
			
			
			
		</if>
		<if test='  zoom=="1" or  zoom=="2" or zoom=="3"  '>
			
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, 
					( 
						select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid
					) b
				where a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from ( 
						select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid
					 ) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where c.grid_cd = b.grid_10k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			
			<if test=' filter=="tot_ppltn" or filter=="tot_family" or filter == "tot_house"     '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house
				from SRV_DT_GRID_TOTIDX with (nolock) a, 
					( 
						select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid
					) b
				where a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
			</if>
			
			<if test=' filter=="corp_cnt" or filter=="employee_cnt"   '>
				select c.grid_cd adm_cd, c.grid_cd adm_nm, corp_cnt, employee_cnt
				from ( 
						select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid
					 ) b, SRV_DT_GRID_TOTIDX_CORP with (nolock) c
				where c.grid_cd = b.grid_10k_cd
					and c.base_year=#{year}
			</if>
			
		</if>
		
		<if test='  zoom == "4" or zoom=="5"  '>
			
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, ( select grid_10k_cd from srv_pg_sidobord bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{year}
						)
						and bord.base_year = #{year} ) b
				where a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from ( select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{year}
						)
						and bord.base_year = #{year}  ) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_10k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			<if test=' filter=="tot_ppltn" or filter=="tot_family" or filter == "tot_house"     '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house
				from SRV_DT_GRID_TOTIDX with (nolock) a, ( select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} ) b
				where a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
			</if>
			
			<if test=' filter=="corp_cnt" or filter=="employee_cnt"   '>
				select c.grid_cd adm_cd, c.grid_cd adm_nm, corp_cnt, employee_cnt
				from ( select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  ) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_10k_cd
					and c.base_year=#{year}
			</if>
			
			
		</if>
		
		<if test=' zoom=="6" or zoom == "7" or zoom=="8"  '>
			
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, 
					( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{year}
						)
						and bord.base_year = #{year}  
					) b
				where a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from (select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{year}
						)
						and bord.base_year = #{year}  
					) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_1k_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			
			<if test=' filter=="tot_ppltn" or filter=="tot_family" or filter == "tot_house"     '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house
				from SRV_DT_GRID_TOTIDX with (nolock) a, 
					( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
			</if>
			
			<if test=' filter=="corp_cnt" or filter=="employee_cnt"   '>
				select c.grid_cd adm_cd, c.grid_cd adm_nm, corp_cnt, employee_cnt
				from (select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_1k_cd
					and c.base_year=#{year}
			</if>
			
		    
		</if>
		
		
		
		<if test=' zoom=="9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			
			<!--
			select adm_cd ,  adm_nm, sum(TOT_PPLTN) TOT_PPLTN, sum(tot_family) tot_family, 
			sum(avg_fmember_cnt) avg_fmember_cnt, sum(tot_house) tot_house, sum(corp_cnt) corp_cnt, sum(employee_cnt) employee_cnt
			from
			(
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house, '0' corp_cnt, '0' employee_cnt
				from SRV_DT_GRID_TOTIDX with (nolock) a, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{year}
						)
						and bord.base_year = #{year}  
					) b
				where a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
				union all
				select c.grid_cd adm_cd, c.grid_cd adm_nm, '0' TOT_PPLTN, '0' tot_family, '0' avg_fmember_cnt, '0' tot_house , corp_cnt, employee_cnt
				from (select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{year}
						)
						and bord.base_year = #{year}  
					) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_100m_cd
					and c.base_year=#{year}
			)
			group by adm_cd, adm_nm
			-->
			
			<if test=' filter=="tot_ppltn" or filter=="tot_family" or filter == "tot_house"     '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  TOT_PPLTN, tot_family, avg_fmember_cnt, tot_house
				from SRV_DT_GRID_TOTIDX with (nolock) a, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord  with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
			</if>
			
			<if test=' filter=="corp_cnt" or filter=="employee_cnt"   '>
				select c.grid_cd adm_cd, c.grid_cd adm_nm, corp_cnt, employee_cnt
				from (select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b, SRV_DT_GRID_TOTIDX_CORP c
				where c.grid_cd = b.grid_100m_cd
					and c.base_year=#{year}
			</if>
			
			
		</if>
		
	</select>
	
	
	<!-- 행정구역 그리드 인구주택총조사(인구조건) -->
	<select id="innersearchpopulation_bnd_grid" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0"  '>
			
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b
				where a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015"  or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019"  '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b
				where  a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		<if test='  zoom=="1" or zoom=="2" or zoom=="3" '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		
		<if test=' zoom == "4" or zoom=="5" '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, (select grid_10k_cd from srv_pg_sidobord bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		
		<if test=' zoom=="6" or zoom=="7" or zoom=="8"   '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, 
					( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, 
					(select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
		    
		</if>
		
		
		
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, 
					(select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, 
					(select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			
		</if>
		
	</select>
	
	
	<!-- 행정구역 그리드 인구주택총조사(가구) -->
	<select id="household_bnd_grid" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0" '>
			
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b
				where a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b
				where  a.GRID_LEVEL_DIV='100k'
					and a.grid_cd = b.grid_100k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		<if test='  zoom=="1" or zoom=="2" or  zoom=="3" '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		
		<if test='  zoom == "4" or zoom=="5"  '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  ) b
				where  a.GRID_LEVEL_DIV='10k'
					and a.grid_cd = b.grid_10k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
			
		</if>
		
		<if test=' zoom=="6" or zoom=="7" or zoom=="8"   '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, 
					( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, 
					( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  a.GRID_LEVEL_DIV='1k'
					and a.grid_cd = b.grid_1k_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
		    
		</if>
		
		
		
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} 
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
		</if>
		
	</select>
	
	<!-- mng_s 행정구역 그리드 주택통계 2010년도 이하 및 2015년도 -->
	<select id="house_bnd_grid" parameterType="hashmap" resultType="hashmap">
		
		<if test='zoom == "0"  '>
			
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b
				where house.GRID_LEVEL_DIV='100k'
					and house.grid_cd = b.grid_100k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) b
				where  house.GRID_LEVEL_DIV='100k'
					and house.grid_cd = b.grid_100k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			
			
		</if>
		<if test=' zoom=="1" or zoom=="2" or  zoom=="3"  '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) b
				where  house.GRID_LEVEL_DIV='10k'
					and house.grid_cd = b.grid_10k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) b
				where  house.GRID_LEVEL_DIV='10k'
					and house.grid_cd = b.grid_10k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			
			
		</if>
		<if test=' zoom == "4" or zoom=="5"  '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  ) b
				where  house.GRID_LEVEL_DIV='10k'
					and house.grid_cd = b.grid_10k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  ) b
				where  house.GRID_LEVEL_DIV='10k'
					and house.grid_cd = b.grid_10k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			
			
		</if>
		
		<if test=' zoom=="6" or zoom=="7" or zoom=="8"   '>
			
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, 
					( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  house.GRID_LEVEL_DIV='1k'
					and house.grid_cd = b.grid_1k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, 
					( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  house.GRID_LEVEL_DIV='1k'
					and house.grid_cd = b.grid_1k_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
		    
		</if>
		
		
		
		<if test='  zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} 
					) b
				where  house.GRID_LEVEL_DIV='100m'
					and house.grid_cd = b.grid_100m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  house.GRID_LEVEL_DIV='100m'
					and house.grid_cd = b.grid_100m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<!-- 2016.10.25 수정 -->
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			
		</if>
	</select>
	<!-- mng_e 행정구역 그리드 20180208 --> 
	
</mapper>