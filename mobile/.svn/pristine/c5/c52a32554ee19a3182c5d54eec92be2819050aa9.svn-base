<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.sgis.m2020.statsMe.service.mapper.kairos.StateMeMapper">
	
	<!-- 공통코드 조회 -->
	<select id="selectCmmCdComcd" parameterType="hashmap" resultType="hashmap">	
		select 
			s_class_cd as cd 
			,s_class_cd_nm as nm
			,cd_exp as exp
		from cmm_cd_comcd
		where 1=1
			<if test='b_class_cd != null and b_class_cd != "" '> /* 분류 코드 */
			and b_class_cd = #{b_class_cd}
			</if>
			<if test='s_class_cd != null and s_class_cd != "" '> /* 분류 코드 */
			and s_class_cd = #{s_class_cd}
			</if>		   
			<if test='s_class_cd_len != null and s_class_cd_len != "" '> /* 코드 길이 */
			and len(s_class_cd) = #{s_class_cd_len}
			</if>
		order by
			s_class_cd_order, s_class_cd
	</select>
	
	<!-- 통계지리 정보 목록 조회 -->
	<select id="selectStatsGrphInfoList" parameterType="hashmap" resultType="hashmap">
		<!-- 2020.09.21[한광희] My통계로 쿼리 수정 START -->
		SELECT DISTINCT(X.STAT_DATA_ID) AS STAT_DATA_ID
			 , X.STAT_DATA_NM
			 , X.STAT_DATA_EXP
			 , X.MENU_NM
			 , X.SRV_NM
			 , X.RANK
			 , X.ACC_CNT
			 , X.MAIN_KWRD
			 , X.STAT_DATA_SRV_NM	/* 2019.12.03[한광희] 통계자료서비스명 컬럼 추가 */
			 , CASE WHEN X.MAIN_KWRD IS NULL OR X.MAIN_KWRD = '' THEN 101		/* 추천(메인)키워드가 NULL인 경우 정렬 순서상 마지막 순위임. */
			        ELSE 100
			   END AS SEQ
		  FROM SRV_DT_CTLG_DATA_LIST X WITH(NOLOCK)
		  <if test='(lifeCycleItemIdList != null and lifeCycleItemIdList != "") or (interestRealmItemIdList != null and interestRealmItemIdList != "")'>
		     , (
		        SELECT STAT_DATA_ID
				  FROM SRV_DT_CTLG_DISTANCE_DATA WITH(NOLOCK)
				 WHERE 1=1
				 <if test='lifeCycleItemIdList != null and lifeCycleItemIdList != ""'>
				    AND LFE_CYCLE_ID IN
					<foreach collection="lifeCycleItemIdList" item="items" open="(" separator="," close=")">
					   #{items}
					</foreach>
				 </if>
				 <if test='interestRealmItemIdList != null and interestRealmItemIdList != ""'>
				    AND STAT_DISTANCE_ID IN
					<foreach collection="interestRealmItemIdList" item="items" open="(" separator="," close=")">
					   #{items}
					</foreach>
				 </if>
				 GROUP BY STAT_DATA_ID
				) Y
		  </if>
		  <if test='searchKwrd != null and searchKwrd != ""'>
		     , (
		        SELECT B.STAT_DATA_ID
				  FROM SRV_DT_CTLG_MAIN_KWRD_LIST A WITH(NOLOCK)
				     , SRV_DT_CTLG_MAIN_KWRD_DATA B WITH(NOLOCK)
				 WHERE A.USE_YN = 'Y'
				   AND REPLACE(A.CTLG_MAIN_KWRD, ' ', '') = REPLACE('${searchKwrd}', ' ', '')
				   AND A.CTLG_MAIN_KWRD_SERIAL = B.CTLG_MAIN_KWRD_SERIAL
				 GROUP BY B.STAT_DATA_ID
		       ) Z
		  </if>
		  <if test='lifeCycleItemIdList == null and interestRealmItemIdList == null and searchKwrd == null'>
		     , (
		        SELECT RECMD_KWRD_1 AS RECMD_KWRD
 				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_1 IS NOT NULL
				   AND LEN(RECMD_KWRD_1) > 0
				UNION
			    SELECT RECMD_KWRD_2 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_2 IS NOT NULL
				   AND LEN(RECMD_KWRD_2) > 0
				UNION
			    SELECT RECMD_KWRD_3 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_3 IS NOT NULL
				   AND LEN(RECMD_KWRD_3) > 0
				UNION
			    SELECT RECMD_KWRD_4 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_4 IS NOT NULL
				   AND LEN(RECMD_KWRD_4) > 0
				UNION
			    SELECT RECMD_KWRD_5 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_5 IS NOT NULL
				   AND LEN(RECMD_KWRD_5) > 0
		       ) E
		  </if>
		 WHERE X.SRV_YN = 'Y'
		 <if test='(lifeCycleItemIdList != null and lifeCycleItemIdList != "") or (interestRealmItemIdList != null and interestRealmItemIdList != "")'>
		    AND X.STAT_DATA_ID = Y.STAT_DATA_ID
		 </if>
		 <if test='searchKwrd != null and searchKwrd != ""'>
		    AND X.STAT_DATA_ID = Z.STAT_DATA_ID
		 </if>
		 <if test='lifeCycleItemIdList == null and interestRealmItemIdList == null and searchKwrd == null'>
		    AND X.MAIN_KWRD = E.RECMD_KWRD
		 </if>
		<choose>
			<when test='orderType == "statDataNm"'>
				ORDER BY X.STAT_DATA_SRV_NM
			</when>
			<when test='orderType == "accCnt"'>
				ORDER BY X.ACC_CNT DESC, X.STAT_DATA_SRV_NM
			</when>
			<otherwise>
				ORDER BY SEQ, X.STAT_DATA_SRV_NM
			</otherwise>
		</choose>
			LIMIT ${page},${pageSize}	/* 2020.09.16[한광희] 통계지리목록 페이징 추가 */
		<!-- 2020.09.21[한광희] My통계로 쿼리 수정 END -->
	</select>
	
	<!-- 2020.09.16[한광희] 통계지리목록 건수 추가 START -->
	<select id="selectStatsGrphInfoListCount" parameterType="hashmap" resultType="int">
		<!-- 2020.09.21[한광희] My통계로 쿼리 수정 START -->
		SELECT COUNT(DISTINCT(X.STAT_DATA_ID))
		  FROM SRV_DT_CTLG_DATA_LIST X WITH(NOLOCK)
		  <if test='(lifeCycleItemIdList != null and lifeCycleItemIdList != "") or (interestRealmItemIdList != null and interestRealmItemIdList != "")'>
		     , (
		        SELECT STAT_DATA_ID
				  FROM SRV_DT_CTLG_DISTANCE_DATA WITH(NOLOCK)
				 WHERE 1=1
				 <if test='lifeCycleItemIdList != null and lifeCycleItemIdList != ""'>
				    AND LFE_CYCLE_ID IN
					<foreach collection="lifeCycleItemIdList" item="items" open="(" separator="," close=")">
					   #{items}
					</foreach>
				 </if>
				 <if test='interestRealmItemIdList != null and interestRealmItemIdList != ""'>
				    AND STAT_DISTANCE_ID IN
					<foreach collection="interestRealmItemIdList" item="items" open="(" separator="," close=")">
					   #{items}
					</foreach>
				 </if>
				 GROUP BY STAT_DATA_ID
				) Y
		  </if>
		  <if test='searchKwrd != null and searchKwrd != ""'>
		     , (
		        SELECT B.STAT_DATA_ID
				  FROM SRV_DT_CTLG_MAIN_KWRD_LIST A WITH(NOLOCK)
				     , SRV_DT_CTLG_MAIN_KWRD_DATA B WITH(NOLOCK)
				 WHERE A.USE_YN = 'Y'
				   AND REPLACE(A.CTLG_MAIN_KWRD, ' ', '') = REPLACE('${searchKwrd}', ' ', '')
				   AND A.CTLG_MAIN_KWRD_SERIAL = B.CTLG_MAIN_KWRD_SERIAL
				 GROUP BY B.STAT_DATA_ID
		       ) Z
		  </if>
		  <if test='lifeCycleItemIdList == null and interestRealmItemIdList == null and searchKwrd == null'>
		     , (
		        SELECT RECMD_KWRD_1 AS RECMD_KWRD
 				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_1 IS NOT NULL
				   AND LEN(RECMD_KWRD_1) > 0
				UNION
			    SELECT RECMD_KWRD_2 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_2 IS NOT NULL
				   AND LEN(RECMD_KWRD_2) > 0
				UNION
			    SELECT RECMD_KWRD_3 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_3 IS NOT NULL
				   AND LEN(RECMD_KWRD_3) > 0
				UNION
			    SELECT RECMD_KWRD_4 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_4 IS NOT NULL
				   AND LEN(RECMD_KWRD_4) > 0
				UNION
			    SELECT RECMD_KWRD_5 AS RECMD_KWRD
				  FROM SRV_DT_CTLG_CYCLE_RECMD_KWRD WITH(NOLOCK)
				 WHERE 1=1
				   AND RECMD_KWRD_5 IS NOT NULL
				   AND LEN(RECMD_KWRD_5) > 0
		       ) E
		  </if>
		 WHERE X.SRV_YN = 'Y'
		 <if test='(lifeCycleItemIdList != null and lifeCycleItemIdList != "") or (interestRealmItemIdList != null and interestRealmItemIdList != "")'>
		    AND X.STAT_DATA_ID = Y.STAT_DATA_ID
		 </if>
		 <if test='searchKwrd != null and searchKwrd != ""'>
		    AND X.STAT_DATA_ID = Z.STAT_DATA_ID
		 </if>
		 <if test='lifeCycleItemIdList == null and interestRealmItemIdList == null and searchKwrd == null'>
		    AND X.MAIN_KWRD = E.RECMD_KWRD
		 </if>
		 <!-- 2020.09.21[한광희] My통계로 쿼리 수정 END -->
	</select>
	<!-- 2020.09.16[한광희] 통계지리목록 건수 추가 END -->
	
	<!-- 통계지리 정보 관련 SGIS 서비스 목록 조회 -->
	<select id="selectStatsGrphInfoSgisSrvList" parameterType="hashmap" resultType="hashmap">
		<if test='searchKwrd != null or recomendKwrd != null'>
			WITH W_CTLG_KWRD AS (SELECT CTLG_MAIN_KWRD_SERIAL
								   FROM SRV_DT_CTLG_MAIN_KWRD_LIST WITH(NOLOCK)
								  WHERE USE_YN = 'Y'
								  <if test='searchKwrd != null and searchKwrd != ""'>
									AND REPLACE(CTLG_MAIN_KWRD, ' ', '') = REPLACE('${searchKwrd}', ' ', '')
								  </if>
								  <if test='recomendKwrd != null and recomendKwrd != ""'>
									AND REPLACE(CTLG_MAIN_KWRD, ' ', '') = REPLACE('${recomendKwrd}', ' ', '')
								  </if>
								)
		</if>
		SELECT DISTINCT(REPLACE(A.MENU_NM, ' ', '') || REPLACE(A.SRV_NM, ' ', '')) AS SGIS_SRV_NM
		  FROM (SELECT DISTINCT(X.STAT_DATA_ID) AS STAT_DATA_ID
					 , X.STAT_DATA_NM
					 , X.STAT_DATA_EXP
					 , X.MENU_NM
					 , X.SRV_NM
					 , X.RANK
					 , X.ACC_CNT
					 , X.MAIN_KWRD
					 , X.STAT_DATA_SRV_NM	/* 2019.12.03[한광희] 통계자료서비스명 컬럼 추가 */
				  FROM (SELECT XA.*
						  FROM SRV_DT_CTLG_DATA_LIST XA WITH(NOLOCK)
							 , (SELECT STAT_DATA_ID
								  FROM SRV_DT_CTLG_DISTANCE_DATA WITH(NOLOCK)
								 WHERE 1=1
								 <if test='lifeCycleItemIdList != null and lifeCycleItemIdList != ""'>
									AND LFE_CYCLE_ID IN 
									 <foreach collection="lifeCycleItemIdList" item="items" open="(" separator="," close=")"> 
										#{items}
									 </foreach>
								 </if>
								 <if test='interestRealmItemIdList != null and interestRealmItemIdList != ""'>
									AND STAT_DISTANCE_ID IN 
									 <foreach collection="interestRealmItemIdList" item="items" open="(" separator="," close=")"> 
										#{items}
									 </foreach>
								 </if>
								 GROUP BY STAT_DATA_ID
							   ) XB
						 WHERE XA.STAT_DATA_ID = XB.STAT_DATA_ID
						   AND XA.SRV_YN = 'Y'
					   ) X
				<if test='searchKwrd != null or recomendKwrd != null'>
					 , SRV_DT_CTLG_MAIN_KWRD_DATA Y WITH(NOLOCK)
					 , W_CTLG_KWRD Z
				 WHERE X.STAT_DATA_ID = Y.STAT_DATA_ID
				   AND Y.CTLG_MAIN_KWRD_SERIAL = Z.CTLG_MAIN_KWRD_SERIAL
				</if>
			   ) A
		 GROUP BY A.STAT_DATA_ID
				, A.STAT_DATA_NM
				, A.STAT_DATA_EXP
				, A.MENU_NM
				, A.SRV_NM
				, A.RANK
				, A.ACC_CNT
				, A.MAIN_KWRD
				, A.STAT_DATA_SRV_NM	/* 2019.12.03[한광희] 통계자료서비스명 컬럼 추가 */
	</select>
	
	
	<!-- 카탈로그 1,2차 키워드검색 목록 조회 -->
	<select id="selectCtlgKwrdList" parameterType="hashmap" resultType="hashmap">
		SELECT DISTINCT
			   A.CTLG_MAIN_KWRD AS CTLG_KWRD
		  FROM SRV_DT_CTLG_MAIN_KWRD_LIST A WITH(NOLOCK)
		       INNER JOIN SRV_DT_CTLG_MAIN_KWRD_DATA B WITH(NOLOCK) ON B.CTLG_MAIN_KWRD_SERIAL = A.CTLG_MAIN_KWRD_SERIAL
		       INNER JOIN SRV_DT_CTLG_DATA_LIST C WITH(NOLOCK) ON C.STAT_DATA_ID = B.STAT_DATA_ID
		       <if test='(lifeCycleItemIdList != null and lifeCycleItemIdList != "") or (interestRealmItemIdList != null and interestRealmItemIdList != "")'>
			   INNER JOIN SRV_DT_CTLG_DISTANCE_DATA D WITH(NOLOCK) ON D.STAT_DATA_ID = C.STAT_DATA_ID
		       </if>
		 WHERE A.USE_YN = 'Y'
		   AND C.SRV_YN = 'Y'
		   AND LEN(A.CTLG_MAIN_KWRD) > 0
		<if test='memorySearchKwrd != null and memorySearchKwrd != ""'>
		   AND A.CTLG_MAIN_KWRD LIKE '%' || #{memorySearchKwrd} || '%'
		</if>
		<if test='lifeCycleItemIdList != null and lifeCycleItemIdList != ""'>
		   AND D.LFE_CYCLE_ID IN 
			<foreach collection="lifeCycleItemIdList" item="items" open="(" separator="," close=")"> 
				#{items}
			</foreach>
		</if>
		<if test='interestRealmItemIdList != null and interestRealmItemIdList != ""'>
		   AND D.STAT_DISTANCE_ID IN 
 			<foreach collection="interestRealmItemIdList" item="items" open="(" separator="," close=")"> 
				#{items}
			</foreach>
		</if>
	</select>
	
	<!-- 검색화면 조회시 통계지리 정보 목록 조회 -->
	<select id="selectMainSearchStatsInfoList" parameterType="hashmap" resultType="hashmap">
		SELECT 100 AS SEQ
			 , A.STAT_DATA_ID
			 , A.STAT_DATA_NM
			 , A.STAT_DATA_EXP
			 , A.MENU_NM
			 , A.SRV_NM
			 , A.RANK
			 , A.ACC_CNT
			 , A.MAIN_KWRD
			 , A.STAT_DATA_SRV_NM
		  FROM (SELECT DISTINCT(X.STAT_DATA_ID) AS STAT_DATA_ID
					 , X.STAT_DATA_NM
					 , X.STAT_DATA_EXP
					 , X.MENU_NM
					 , X.SRV_NM
					 , X.RANK
					 , X.ACC_CNT
					 , X.MAIN_KWRD
					 , X.STAT_DATA_SRV_NM
				  FROM (SELECT XA.*
						  FROM SRV_DT_CTLG_DATA_LIST XA WITH(NOLOCK)
							 , (SELECT STAT_DATA_ID
								  FROM SRV_DT_CTLG_DISTANCE_DATA WITH(NOLOCK)
								 WHERE 1=1								 
								 GROUP BY STAT_DATA_ID
							   ) XB
						 WHERE XA.STAT_DATA_ID = XB.STAT_DATA_ID
						   AND XA.SRV_YN = 'Y'
			 			   AND XA.STAT_DATA_ID = #{statDataId}
					   ) X
			   ) A
		 GROUP BY A.STAT_DATA_ID
				, A.STAT_DATA_NM
				, A.STAT_DATA_EXP
				, A.MENU_NM
				, A.SRV_NM
				, A.RANK
				, A.ACC_CNT
				, A.MAIN_KWRD
				, A.STAT_DATA_SRV_NM
		 ORDER BY SEQ, A.STAT_DATA_SRV_NM	
	</select>
	
	<!-- 메인화면 생애주기/관심분야 조회 -->
	<select id="selectMainStatsMeList" parameterType="hashmap" resultType="hashmap">
		<!-- 2020.09.01[한광희] 메인화면 생애주기/관심분야 선택에 따른 서비스 목록 조회 수정 START -->
		SELECT  TOP 3 XA.*
		  FROM SRV_DT_CTLG_DATA_LIST XA WITH(NOLOCK)
		     , (SELECT STAT_DATA_ID
			  	  FROM SRV_DT_CTLG_DISTANCE_DATA WITH(NOLOCK)
			 	 WHERE 1=1
			 	 <if test='lifeCycleItemIdList != null and lifeCycleItemIdList != ""'>
			 	 	AND LFE_CYCLE_ID IN 
					<foreach collection="lifeCycleItemIdList" item="items" open="(" separator="," close=")"> 
						#{items}
					</foreach>
			   	 </if>
			   	 <if test='interestRealmItemIdList != null and interestRealmItemIdList != ""'>
			   	 	AND STAT_DISTANCE_ID IN 
					<foreach collection="interestRealmItemIdList" item="items" open="(" separator="," close=")"> 
						#{items}
					</foreach>
			   	 </if>
			 	 GROUP BY STAT_DATA_ID
		   	   ) XB
		 WHERE XA.STAT_DATA_ID = XB.STAT_DATA_ID
		   AND XA.SRV_YN = 'Y'
		 ORDER BY ACC_CNT DESC
		<!-- <if test='statsMeType == "lfeCycle"'>
			SELECT TOP 3 C.LFE_CYCLE_NM AS STAT_ME_NM
			  FROM SRV_DT_CTLG_DATA_LIST A
			  JOIN SRV_DT_CTLG_DISTANCE_DATA B ON A.STAT_DATA_ID = B.STAT_DATA_ID
			  JOIN SRV_DT_CTLG_LFE_CYCLE_LIST C ON B.LFE_CYCLE_ID = C.LFE_CYCLE_ID
			 WHERE A.SRV_YN = 'Y'
			 GROUP BY C.LFE_CYCLE_NM
			 ORDER BY SUM(A.ACC_CNT) DESC
		</if>
		<if test='statsMeType == "statDistance"'>
			SELECT TOP 3 C.STAT_DISTANCE_NM AS STAT_ME_NM
			  FROM SRV_DT_CTLG_DATA_LIST A
			  JOIN SRV_DT_CTLG_DISTANCE_DATA B ON A.STAT_DATA_ID = B.STAT_DATA_ID
			  JOIN SRV_DT_CTLG_DISTANCE_LIST C ON B.STAT_DISTANCE_ID = C.STAT_DISTANCE_ID
			 WHERE A.SRV_YN = 'Y'
			 GROUP BY C.STAT_DISTANCE_NM
			 ORDER BY SUM(A.ACC_CNT) DESC
		</if> -->
		<!-- 2020.09.01[한광희] 메인화면 생애주기/관심분야 선택에 따른 서비스 목록 조회 수정 END -->
	</select>	
</mapper>