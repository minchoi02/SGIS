package kostat.sop.ServiceAPI.sbr.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kostat.sop.ServiceAPI.api.common.ThemeCdCommon;
import kostat.sop.ServiceAPI.common.util.StringUtil;
import kostat.sop.ServiceAPI.controller.service.MapService;
import kostat.sop.ServiceAPI.controller.view.AdministStatsController;
import kostat.sop.ServiceAPI.controller.view.MapController;
import kostat.sop.ServiceAPI.sbr.service.SbrStatsService;
import kostat.sop.ServiceAPI.sbr.vo.SbrVo;


/**
 * 1. 기능 : 행정통계시각화 대쉬보드 컨트롤러.
 * <p>
 * 2. 처리개요 :
 * <p>
 * 3. 주의사항 :
 * <p>
 *
 * <pre>
 *  <b>History:</b>
 *     2021.08.17	hjh	초기 작성
 * </pre>
 *
 * @author 최종 수정자 : hjh
 * @version 1.0
 * @see
 *      <p/>
 */

@Controller
@RequestMapping(value = "/view/sbrStats")
public class SbrStatsController {
	
	private final Log logger = LogFactory.getLog(SbrStatsController.class);
	
	@Resource(name="mapService")
	private MapService mapService;
	
	// 2020년 SGIS고도화 3차(테마코드) 시작 - 테마코드 공통기능 빈객체 추가 (pse)
	//@Resource(name = "themeCdCommon")
	//private ThemeCdCommon themeCdCommon;
	// 2020년 SGIS고도화 3차(테마코드) 끝
	
	@Resource(name = "sbrStatsService")
	private SbrStatsService sbrStatsService;
	
	
	/**
	 * 기업생태분석지도 > 프레임 > Main
	 *
	 * @param request
	 * @param response
	 * @return /view/sbrStats/sbrMain
	 * @throws Exception 
	 */
	@RequestMapping(value = "/sbrStatsMain")
	public ModelAndView main(HttpServletRequest request, HttpServletResponse response, ModelMap model) throws Exception {
		model.put("bizList", sbrStatsService.getBizCodeList());
		
		String[] years = {"2020","2019","2018","2017","2016","2015"};
		model.put("years", years);
		
		return new ModelAndView("sbr/sbrStatsMain");
	}
	
	/**
	 * 임시 제이슨제이터
	 * 
	 *
	 * @param request
	 * @param response
	 * @return /view/sbrStats/sbrMain
	 * @throws Exception 
	 */
	@ResponseBody
	@RequestMapping(value = "/codeList", produces="application/json;charset=UTF-8")
	public List<Map<String, Object>> getCodeList(HttpServletRequest request, HttpServletResponse response, ModelMap model, SbrVo sbrVo) throws Exception {
		return sbrStatsService.getCodeList(sbrVo);
	}
	
	
	/**
	 * 임시 제이슨제이터
	 * 
	 *
	 * @param request
	 * @param response
	 * @return /view/sbrStats/sbrMain
	 * @throws Exception 
	 */
	@ResponseBody
	@RequestMapping(value = "/sbrStatsJsonData", produces="application/json;charset=UTF-8")
	public String maindata(HttpServletRequest request, HttpServletResponse response, ModelMap model, SbrVo sbrVo) throws Exception {
		System.out.println("데이터 확인  : " + sbrVo.toString());
		return sbrStatsService.getDdata();
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrCompanyInfoList", produces="application/json;charset=UTF-8")
	public List<?> getSbrCompanyInfoList(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		List<?> resData = sbrStatsService.getSbrCompanyInfoList(sbrVo);
		return resData;
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrCompanyInfoListAll", produces="application/json;charset=UTF-8")
	public List<?> sbrCompanyInfoListAll(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		List<?> resData = sbrStatsService.getSbrCompanyInfoListAll(sbrVo);
		return resData;
	}
	
	
	@ResponseBody
	@RequestMapping(value = "/sbrActiveCompanyCount", produces="application/json;charset=UTF-8")
	public Map<String, Object> sbrActiveCompanyCount(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		System.out.println("활동현황 데이터 확인 :");
		Map<String, Object> result = sbrStatsService.getActiveCompanyCount(sbrVo);
		//System.out.println(result.toString());
		return result;
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrOpenCloseCompanyCount", produces="application/json;charset=UTF-8")
	public List<Map<String,String>> sbrOpenCloseCompanyCount(HttpServletRequest request, HttpServletResponse response, ModelMap model) throws Exception {
		List<Map<String,String>> resData = sbrStatsService.getOpenCloseCompanyCount();
		System.out.println("개폐업현황 데이터 확인 : " + resData);
		return resData;
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrGrowthList", produces="application/json;charset=UTF-8")
	public List<Map<String,String>> sbrGrowthChart(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		
		List<Map<String,String>> resData = sbrStatsService.getGrowthChart(sbrVo);
		System.out.println("성장율 확인 : " + resData);
		return resData;
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrAvgData", produces="application/json;charset=UTF-8")
	public Map<String,String> sbrAvgData(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		
		Map<String,String> resData = sbrStatsService.getAvgData(sbrVo);
		System.out.println("평균값 확인 : " + resData);
		return resData;
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrCompanyAnalysis", produces="application/json;charset=UTF-8")
	public Map<String,String> sbrCompanyAnalysis(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		
		Map<String,String> resData = sbrStatsService.getCompanyAnalysis(sbrVo);
		return resData;
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrCompanyMain", produces="application/json;charset=UTF-8")
	public List<Map<String,String>> sbrCompanyMain(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		
		List<Map<String,String>> resData = sbrStatsService.getCompanyMain(sbrVo);
		return resData;
	}
	
	@ResponseBody
	@RequestMapping(value = "/sbrAreaDataList", produces="application/json;charset=UTF-8")
	public List<Map<String,String>> sbrAreaDataList(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		List<Map<String,String>> resData = sbrStatsService.getAreaDataList(sbrVo);
		return resData;
	}

	
	//전국시도 순위 리스트
	@ResponseBody
	@RequestMapping(value = "/sbrRankListInfo", produces="application/json;charset=UTF-8")
	public List sbrRankListInfo(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		return sbrStatsService.getSbrRankListInfo(sbrVo);
	}
	
	//인구정보
	@ResponseBody
	@RequestMapping(value = "/innersearchpopulationForBorough", produces="application/json;charset=UTF-8")
	public List innersearchpopulationForBorough(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		  //return sbrStatsService.getLeftDataList(sbrVo);
		return sbrStatsService.innersearchpopulationForBorough(sbrVo);
	}
	
	//가구
	@ResponseBody
	@RequestMapping(value = "/household", produces="application/json;charset=UTF-8")
	public List household(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		  //return sbrStatsService.getLeftDataList(sbrVo);
		return sbrStatsService.household(sbrVo);
	}
	
	//주택
	@ResponseBody
	@RequestMapping(value = "/house", produces="application/json;charset=UTF-8")
	public List house(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		  //return sbrStatsService.getLeftDataList(sbrVo);
		return sbrStatsService.house(sbrVo);
	}
	
	//농림.어업 농가
	@ResponseBody
	@RequestMapping(value = "/farmhousehold", produces="application/json;charset=UTF-8")
	public List farmhousehold(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		  //return sbrStatsService.getLeftDataList(sbrVo);
		return sbrStatsService.farmhousehold(sbrVo);
	}

	//경계데이터 검색(산업단지, 상권, 전통시장, 도시화)
	@ResponseBody
	@RequestMapping(value = "/getSbrAreaData", produces="application/json;charset=UTF-8")
	public List getSbrAreaData(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		return sbrStatsService.getSbrAreaData(sbrVo);
	}
	
	//기업 생태분석 지도 경계데이터 검색(산업단지, 상권, 전통시장, 도시화)
	@ResponseBody
	@RequestMapping(value = "/getSbrCategoryArea", produces="application/json;charset=UTF-8")
	public List getSbrCategoryArea(HttpServletRequest request, HttpServletResponse response, ModelMap model,SbrVo sbrVo) throws Exception {
		return sbrStatsService.getSbrAreaData(sbrVo);
	}
		
		
	// 지역 시그널 데이터 리스트
	@ResponseBody
	@RequestMapping(value = "/sbrRegionSignalDataList", produces="application/json;charset=UTF-8")
	public Map<String, String> sbrRegionSignalDataList(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		Map<String, String> resData = sbrStatsService.getRegionSignalDataList(sbrVo);
		System.out.println("지역시그널 확인 : " + resData);
		return resData;
	}
	
	// 지역 시그널 기업활동 차트 데이터 리스트
	@ResponseBody
	@RequestMapping(value = "/sbrRegionSignalDataChartData", produces="application/json;charset=UTF-8")
	public Map sbrAreaInfoChartData(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		Map resData = sbrStatsService.getRegionSignalDataChartData(sbrVo);
		return resData;
	}
	
	// 지역 시그널 기업현황 차트 데이터 리스트
	@ResponseBody
	@RequestMapping(value = "/sbrRegionSignalDataChartDataCompany", produces="application/json;charset=UTF-8")
	public Map sbrRegionSignalDataChartDataCompany(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		Map resData = sbrStatsService.getRegionSignalDataChartDataCompany(sbrVo);
		return resData;
	}
	
	// 지역 시그널 상용직 일용직 성별  차트 데이터 리스트
	@ResponseBody
	@RequestMapping(value = "/sbrRegionSignalDataChartDataCompanyPeople", produces="application/json;charset=UTF-8")
	public Map sbrRegionSignalDataChartDataCompanyPeople(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		Map resData = sbrStatsService.getRegionSignalDataChartDataCompanyPeople(sbrVo);
		return resData;
	}
	
	// 지역 시그널 상용직 일용직 성별  차트 데이터 리스트
	@ResponseBody
	@RequestMapping(value = "/sbrRegionSignalDataChartDataArea", produces="application/json;charset=UTF-8")
	public Map sbrRegionSignalDataChartDataArea(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		Map resData = sbrStatsService.getRegionSignalDataChartDataArea(sbrVo);
		return resData;
	}
	
	// 지역 시그널 상용직 일용직 성별  차트 데이터 리스트
	@ResponseBody
	@RequestMapping(value = "/sbrComPanyInfoList", produces="application/json;charset=UTF-8")
	public List getsbrComPanyInfoList(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		List resData = sbrStatsService.getsbrComPanyInfoList(sbrVo);
		return resData;
	}
	
	
	// 일자리 목록
	@ResponseBody
	@RequestMapping(value = "/sbrjobList", produces="application/json;charset=UTF-8")
	public List getsbrjobList(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		List resData = sbrStatsService.getsbrjobList(sbrVo);
		return resData;
	}
	
	//공간분석 기준 정보
	@ResponseBody
	@RequestMapping(value = "/sbrAreaMax", produces="application/json;charset=UTF-8")
	public Map sbrAreaMax(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		Map resData = sbrStatsService.getSbrAreaMax(sbrVo);
		return resData;
	}
	
	//청장년 인구 시그널 // 토지공사
	@ResponseBody
	@RequestMapping(value = "/sbrYouthCount", produces="application/json;charset=UTF-8")
	public Map getSbrYouthCount(HttpServletRequest request, HttpServletResponse reponse, ModelMap model, SbrVo sbrVo) throws Exception {
		return sbrStatsService.getSbrYouthCountSignal(sbrVo);
	}
	

}
