(function(W, D){
	W.$more2DashDetail = W.$more2DashDetail || {};
	
	$(document).ready(function(){
	});
	$(window).load(function(){
	});
	
	$more2DashDetail.ui = {
		init : function(){
			console.log(gv_url+" : ===퇴직연금통계===");
			$administStatsMain.ui.appendContent("/view/administStatsDetail/more2Dash/main");
			setTimeout(function(){
				$more2DashDetail.ui.ready();
			}, 500);
		},
		ready : function(){
			$more2DashDetail.ui.more2Api();
			setTimeout(function() {
				$administStatsMain.ui.loading(false);
			}, 2000);
		},
		more2Api : function() {
			if(gv_checkmenu == 'more1'){
				$('#toplistpanelmain').text('일자리통계편');
			} else if(gv_checkmenu == 'more2'){
				$('#toplistpanelmain').text('퇴직연금 통계 목록');
			} else if(gv_checkmenu == 'more3'){
				$('#toplistpanelmain').text('임금근로 일자리동향');
			}
			var parentListId = '';
			
			if(gv_checkmenu == 'more1'){
				parentListId = '101_2016_10';
			} else if(gv_checkmenu == 'more2'){
				parentListId = '101_RP_002';
			} else if(gv_checkmenu == 'more3'){
				parentListId = '101_003';
			}
			var parameter ={
					 method:"getList"
					,apiKey:"NWU2NjUxODYzMWQyMTM0MGQ5NWRhMTE3ZjZjZGE0ODc="
					,vwCd:"MT_OTITLE"
					,parentListId:parentListId
					,format:"json"
					,jsonVD:"Y"
			}
			$.ajax({
				url: "/view/totSurv/proxy?" + "https://kosis.kr/openapi/statisticsList.do?",
				type: 'get',
				data: parameter,
				dataType: "json"
			}).done(function(result){
				itemInfo = result;
				var list1 = document.getElementById('list1');
				var il1=0;
				for(var i=0;i<itemInfo.length;i++){
					let tblNm = "";
					if(itemInfo[i].TBL_NM.length > 20){
						tblNm = itemInfo[i].TBL_NM.substring(0, 18) + "...";
					} else {
						tblNm = itemInfo[i].TBL_NM;
					}
					var stattb_url = "https://kosis.kr/statHtml/statHtml.do?orgId=101&tblId=" + itemInfo[i].TBL_ID + "&conn_path=I2";
					list1.innerHTML += '<li data-org_id="' + itemInfo[i].ORG_ID + '" data-tbl_id="' + itemInfo[i].TBL_ID +	'" data-tbl_nm="' + itemInfo[i].TBL_NM + '">' +
									   '<a class="searchmenua" style="width: 240px;" href="javascript:void(0);" title="' + itemInfo[i].TBL_NM + '">' + tblNm + 
									   '</a><a onclick="javascript:openPop1('+"'"+stattb_url+"'"+')" class="link-kosis link-btn" title="새창열림">KOSIS' + tblNm + '</a></li>';
					il1++;
				}
				$(".con").css({'display': 'block'});
				$("#list1").css({'overflow-y':'auto', 'overflow-x':'hidden'}).css('height', 40*il1+'px');
				
				for(var i=0;i<$("a.searchmenua").length;i++){
					if(gv_checkmenu == 'more1'){
						$("a.searchmenua:eq(" + i + ")").attr("onclick", "javascript:openApiSearch(this);");
					} else if (gv_checkmenu == 'more2'){
						$("a.searchmenua:eq(" + i + ")").attr("onclick", "javascript:$more2DashDetail.ui.openApiSearch2(this);");
					} else if (gv_checkmenu == 'more3'){
						$("a.searchmenua:eq(" + i + ")").attr("onclick", "javascript:openApiSearch3(this);");
					}
				}
				$('.con .listbox:text').css('display', 'none');
				setTimeout(function(){
					$("a.searchmenua:eq(0)").click();
				},500);
			});
		},
		searchInput : function() {
			$(".searchLayer").fadeIn();
			var parentListId = '';
			
			if(gv_checkmenu == 'more1'){
				parentListId = '101_2016_10';
			} else if(gv_checkmenu == 'more2'){
				parentListId = '101_RP_002';
			} else if(gv_checkmenu == 'more3'){
				parentListId = '101_003';
			}
			var parameter ={
					 method:"getList"
					,apiKey:"NWU2NjUxODYzMWQyMTM0MGQ5NWRhMTE3ZjZjZGE0ODc="
					,vwCd:"MT_OTITLE"
					,parentListId:parentListId
					,format:"json"
					,jsonVD:"Y"
			}
			$.ajax({
				url: "/view/totSurv/proxy?" + "https://kosis.kr/openapi/statisticsList.do?",
				type: 'get',
				data: parameter,
				dataType: "json"
			}).done(function(result){
				itemInfo = result;
				var list2 = document.getElementById('list2');
				var il1=0;
				list2.innerHTML = '';
				for(var i=0;i<itemInfo.length;i++){
					let tblNm = "";
					if(itemInfo[i].TBL_NM.length > 28){
						tblNm = itemInfo[i].TBL_NM.substring(0, 26) + "...";
					} else {
						tblNm = itemInfo[i].TBL_NM;
					}
					var stattb_url = "https://kosis.kr/statHtml/statHtml.do?orgId=101&tblId=" + itemInfo[i].TBL_ID + "&conn_path=I2";
					if($('.searchInput').val() != ''){
						if(itemInfo[i].TBL_NM.includes($('.searchInput').val()) == true){
							list2.innerHTML += '<tr><td data-org_id="' + itemInfo[i].ORG_ID + '" data-tbl_id="' + itemInfo[i].TBL_ID +	'" data-tbl_nm="' + itemInfo[i].TBL_NM + '">' +
											   '<a class="searchmenua" style="width: 240px;" href="javascript:void(0);" title="' + itemInfo[i].TBL_NM + '">' + tblNm + '</a></td></tr>';
							il1++;
						}
					}
				}
				il2++;
				localStorage.setItem('memory', $('.searchInput').val());
				if($('.searchInput').val() == ''){
					alert('검색어를 입력하세요.');
					$('#searchCount').text('0건');
					$('.searchInput').focus();
					return;
				} else {
					$('#searchMemory').append('<tr><td><a onclick="$more2DashDetail.ui.searchClick('+il2+')" style="cursor:pointer">' + localStorage.getItem('memory') + 
											  '</a><img src="/images/administStatsDetail/btnClose.png" id="img'+il2+'" onclick="$more2DashDetail.ui.remove('+il2+')" class="btnTagHidden" /></td></tr>');
				}
				$('#searchCount').text(il1 + '건');
				$(".con").css({'display': 'block'});
				$(".searchMemory").css('max-height', '120px');
				$(".searchMemory").css({'overflow-y':'auto', 'overflow-x':'hidden'});
				
				for(var i=0;i<$("a.searchmenua").length;i++){
					if(gv_checkmenu == 'more1'){
						$("a.searchmenua:eq(" + i + ")").attr("onclick", "javascript:openApiSearch(this);");
					} else if (gv_checkmenu == 'more2'){
						$("a.searchmenua:eq(" + i + ")").attr("onclick", "javascript:$more2DashDetail.ui.openApiSearch2(this);");
					} else if (gv_checkmenu == 'more3'){
						$("a.searchmenua:eq(" + i + ")").attr("onclick", "javascript:openApiSearch3(this);");
					}
				}
				$('.searchInput').val('');
				$('.searchInput').focus();
			});
		},
		remove : function(n) {
			$('#img'+n+'').parent().parent().remove();
		},
		searchClick : function(n) {
			$('.searchInput').val($('#img'+n+'').parent().text());
			$more2DashDetail.ui.searchInput();
		},
		searchBtn1 : function() {
			var tblIdData = $("#modalSearchTitle").val();
			var yearData = $("#modalSearchYear").val();
			
			$more2DashDetail.ui.search(tblIdData, yearData);
		},
		search : function(tblId, startPrdDe) {
			var itmId = '';
			var objL1 = '';
			var objL2 = '';
			var objL3 = '';
			
			if(tblId == 'DT_1RP101' || tblId == 'DT_1RP102' || tblId == 'DT_1RP103' || tblId == 'DT_1RP104' || tblId == 'DT_1RP105'){itmId = 'T13';}
			else if(tblId == 'DT_1RP106'){itmId = 'T16';}
			else if(tblId == 'DT_1RP000' || tblId == 'DT_1RP001' || tblId == 'DT_1RP002' || 
					tblId == 'DT_1RP003' || tblId == 'DT_1RP004' || tblId == 'DT_1RP008'){itmId = 'T001';}
			else if(tblId == 'DT_1RP005'){itmId = 'T01';}
			else if(tblId == 'DT_1RP006' || tblId == 'DT_1RP007'){itmId = 'T02';}
			else if(tblId == 'DT_1RP009' || tblId == 'DT_1RP010' || tblId == 'DT_1RP011' || tblId == 'DT_1RP032'){itmId = 'T01';}
			else if(tblId == 'DT_1RP012' || tblId == 'DT_1RP013'){itmId = 'T03';}
			else if(tblId == 'DT_1RP014' || tblId == 'DT_1RP015' || tblId == 'DT_1RP016' || tblId == 'DT_1RP018'){itmId = 'T05';}
			
			if(tblId == 'DT_1RP101' || tblId == 'DT_1RP002' || tblId == 'DT_1RP004' || 
			   tblId == 'DT_1RP009' || tblId == 'DT_1RP014' || tblId == 'DT_1RP015'){objL1 = '0';objL2 = '00';}
			else if(tblId == 'DT_1RP102' || tblId == 'DT_1RP000' || tblId == 'DT_1RP003' || tblId == 'DT_1RP005' || tblId == 'DT_1RP006' || 
					tblId == 'DT_1RP007' || tblId == 'DT_1RP008' || tblId == 'DT_1RP010' || tblId == 'DT_1RP011' || 
					tblId == 'DT_1RP012' || tblId == 'DT_1RP013' || tblId == 'DT_1RP016' || tblId == 'DT_1RP032'){objL1 = '0';objL2 = '0';}
			else if(tblId == 'DT_1RP103' || tblId == 'DT_1RP104' || tblId == 'DT_1RP105' || tblId == 'DT_1RP106'){objL1 = '0';}
			else if(tblId == 'DT_1RP001'){objL1 = '00';objL2 = '00';}
			else if(tblId == 'DT_1RP018'){objL1 = '00';objL2 = '0';objL3 = '0';}
			
			var parameter ={
					 apiKey:"NWU2NjUxODYzMWQyMTM0MGQ5NWRhMTE3ZjZjZGE0ODc="
					,itmId:itmId //통계청
					,objL1:objL1 //분류1
					,objL2:objL2 //2
					,objL3:objL3
					,prdSe:'Y'
					,format:'json'
					,jsonVD:'Y'
					,startPrdDe:startPrdDe
					,loadGubun:'2'
					,orgId:'101'
					,tblId:tblId
			}
			$.ajax({
				url: proxy+'https://kosis.kr/openapi/Param/statisticsParameterData.do?method=getList',
				type: 'get',
				data: parameter
			}).done(function(result){
				var res = JSON.parse(result);
				for(var i=0;i<$("#list1").children().length;i++){
					if($("#list1").children()[i].dataset.tbl_id == tblId){
						var li = $("#list1").children().find('.searchmenua')[i];
					}
				}
				if(gv_checkmenu == 'more2'){$more2DashDetail.ui.openApiSearch2(li);}
				else if(gv_checkmenu == 'more3'){openApiSearch3(li);}
			});
		},
		openApiSearch2 : function(li) {
			//$more2DashDetail.ui
			let proxy = "/view/totSurv/proxy?";
			$(".searchLayer").fadeOut();
			$('.searchInput').val('');
			let format = "";
			var list2 = document.getElementById('list2');
			list2.innerHTML = '';
			$('#searchCount').text('0건');
			$(".tabArea .tab li").removeClass("on");
			$(".tabArea .tabBox").removeClass("on");
			$('.tabArea .tab li:eq(' + 0 + ')').addClass("on");
			$('.tabArea .tabBox:eq(' + 0 + ')').addClass("on");
			$(".tabArea0 .tab li").removeClass("on");
			$(".tabArea0 .tabBox").removeClass("on");
			$('.tabArea0 .tab li:eq(' + 0 + ')').addClass("on");
			$('.tabArea0 .tabBox:eq(' + 0 + ')').addClass("on");
			$(".tabArea2 .tab li").removeClass("on");
			$(".tabArea2 .tabBox").removeClass("on");
			$('.tabArea2 .tab li:eq(' + 0 + ')').addClass("on");
			$('.tabArea2 .tabBox:eq(' + 0 + ')').addClass("on");
			$(".tabArea3 .tab li").removeClass("on");
			$(".tabArea3 .tabBox").removeClass("on");
			$('.tabArea3 .tab li:eq(' + 0 + ')').addClass("on");
			$('.tabArea3 .tabBox:eq(' + 0 + ')').addClass("on");
			
			$(".tabArea .tab li a").on("click", function(){
				// 해당 요소를 클릭하는 내 자신의 index 번호를 가져온다. [0], [1]
				const num = $(".tabArea .tab li a").index($(this));
				
				// 기존에 적용되어 있는 on class 삭제
				$(".tabArea .tab li").removeClass("on");
				$(".tabArea .tabBox").removeClass("on");

				// 다음 요소 클릭시 on class 추가
				$('.tabArea .tab li:eq(' + num + ')').addClass("on");
				$('.tabArea .tabBox:eq(' + num + ')').addClass("on");
			});
			$(".tabArea0 .tab li a").on("click", function(){
				const num = $(".tabArea0 .tab li a").index($(this));
				$(".tabArea0 .tab li").removeClass("on");
				$(".tabArea0 .tabBox").removeClass("on");
				$('.tabArea0 .tab li:eq(' + num + ')').addClass("on");
				$('.tabArea0 .tabBox:eq(' + num + ')').addClass("on");
			});
			$(".tabArea2 .tab li a").on("click", function(){
				const num = $(".tabArea2 .tab li a").index($(this));
				$(".tabArea2 .tab li").removeClass("on");
				$(".tabArea2 .tabBox").removeClass("on");
				$('.tabArea2 .tab li:eq(' + num + ')').addClass("on");
				$('.tabArea2 .tabBox:eq(' + num + ')').addClass("on");
			});
			$(".tabArea3 .tab li a").on("click", function(){
				const num = $(".tabArea3 .tab li a").index($(this));
				$(".tabArea3 .tab li").removeClass("on");
				$(".tabArea3 .tabBox").removeClass("on");
				$('.tabArea3 .tab li:eq(' + num + ')').addClass("on");
				$('.tabArea3 .tabBox:eq(' + num + ')').addClass("on");
			});
			
			for(var i=0;i<$("a.searchmenua").length;i++){
				if($("a.searchmenua:eq(" + i + ")").css("color") == "#1772a9"){
					$("a.searchmenua:eq(" + i + ")").css("color", "#666666");
					$("a.searchmenua:eq(" + i + ")").css('font-weight', 400);
				}
			}
			$(li).parent().find('a:eq(0)').css('color','#1772a9');
			$(li).parent().find('a:eq(0)').css('font-weight', 700);
			var itmId = '';
			var objL1 = '';
			var objL2 = '';
			var objL3 = '';
			var newEstPrdCnt = '6';
			var startPrdDe = $('#modalSearchYear').val();
			var selectedYear = $("#modalSearchYear option:selected").text() + '년';
			if($('#modalSearchYear').val() == undefined){startPrdDe = '2020';}
			tblId = $(li).parent().data('tbl_id');
			var tblNm = $(li).parent().data('tbl_nm');
			$('#modalSearchTitle option').remove();
			if(tblNm == undefined){
				$('#modalSearchTitle').html('<option value="DT_1RP101">성별 연령별 퇴직연금제도 가입률</option>');
			} else {
				$('#modalSearchTitle').append('<option value="'+ tblId +'">'+ tblNm +'</option>');
				$('#subtitle').html(tblNm);
			}
			$('.charttitle').show();
			$('#chartTab1_2').hide();
			$('#chartTab1_3').show();
			if(tblId == undefined){tblId = 'DT_1RP101';}
			$('.tab').hide();
			$('#tabArea').show();
			if(tblId == 'DT_1RP101'){
				$('#title1').text('연도별 퇴직연금제도 가입률');
				$('#title2').text(selectedYear + ' 성별 연령별 퇴직연금제도 가입률');
				$('#title3').text('연도별 퇴직연금제도 가입(대상) 근로자');
				$('#title4').text(selectedYear + ' 성별 연령별 퇴직연금제도 가입(대상) 근로자');
				$('#title5').text(selectedYear + ' 성별 퇴직연금제도 가입 근로자');
				$('#title6').text(selectedYear + ' 연령별 퇴직연금제도 가입 근로자');
				/*$('#tabArea2').show();*/
				/*$('#chartTab1_2').show();
				$('#chartTab2_2').show();
				$('#chartTab2_2').text('남자');
				$('#chartTab2_3').text('여자');*/
			} else if(tblId == 'DT_1RP102'){
				$('#title1').text('연도별 퇴직연금제도 가입률');
				$('#title2').text(selectedYear + ' 근속기간별 퇴직연금제도 가입률');
				$('#title3').text('연도별 퇴직연금제도 가입(대상) 근로자');
				$('#title4').text(selectedYear + ' 근속기간별 퇴직연금제도 가입(대상) 근로자');
				$('#title5').text(selectedYear + ' 성별 퇴직연금제도 가입 근로자');
				$('#title6').text(selectedYear + ' 근속기간별 퇴직연금제도 가입 근로자');
				//$('#tabArea2').show();
				/*$('#chartTab1_2').show();
				$('#chartTab1_2').text('성별');
				$('#chartTab1_3').text('근속기간별');
				$('#chartTab2_1').text('총계');
				$('#chartTab2_2').show();
				$('#chartTab2_2').text('남자');
				$('#chartTab2_3').text('여자');*/
			} else if(tblId == 'DT_1RP103'){
				$('#title1').text('연도별 퇴직연금제도 가입률');
				$('#title2').text(selectedYear + ' 종사자규모별 퇴직연금제도 가입률');
				$('#title3').text('연도별 퇴직연금제도 가입(대상) 근로자');
				$('#title4').text(selectedYear + ' 종사자규모별 퇴직연금제도 가입(대상) 근로자');
				$('#title5').text(selectedYear + ' 종사자규모별 퇴직연금제도 가입 근로자');
				/*$('#chartTab1_3').text('종사자규모별');*/
				//$('#charttitle6').hide();
			} else if(tblId == 'DT_1RP104'){
				$('#title1').text('연도별 퇴직연금제도 가입률');
				$('#title2').text(selectedYear + ' 산업대분류별 퇴직연금제도 가입률');
				$('#title3').text('연도별 퇴직연금제도 가입(대상) 근로자');
				$('#title4').text(selectedYear + ' 산업대분류별 퇴직연금제도 가입(대상) 근로자');
				$('#title5').text(selectedYear + ' 산업대분류별 퇴직연금제도 가입 근로자');
				$('#chartTab1_3').text('산업대분류별');
				//$('#charttitle2').hide();
			} else if(tblId == 'DT_1RP105'){
				$('#title1').text('연도별 퇴직연금제도 도입률');
				$('#title2').text(selectedYear + ' 종사자규모별 퇴직연금제도 도입률');
				$('#title3').text('연도별 퇴직연금제도 도입(대상) 사업장');
				$('#title4').text(selectedYear + ' 종사자규모별 퇴직연금제도 도입(대상) 사업장');
				$('#title5').text(selectedYear + ' 종사자규모별 퇴직연금제도 도입 사업장');
				$('#chartTab1_3').text('종사자규모별');
				//$('#charttitle2').hide();
			} else if(tblId == 'DT_1RP106'){
				$('#title1').text('연도별 퇴직연금제도 도입률');
				$('#title2').text(selectedYear + ' 산업대분류별 퇴직연금제도 도입률');
				$('#title3').text('연도별 퇴직연금제도 도입(대상) 사업장');
				$('#title4').text(selectedYear + ' 산업대분류별 퇴직연금제도 도입(대상) 사업장');
				$('#title5').text(selectedYear + ' 산업대분류별 퇴직연금제도 도입 사업장');
				$('#chartTab1_3').text('산업대분류별');
				//$('#charttitle2').hide();
			} else if(tblId == 'DT_1RP000'){
				$('#title1').text('연도별 퇴직연금제도 가입 근로자');
				$('#title2').text(selectedYear + ' 성별 제도유형별 퇴직연금제도 가입 근로자');
				$('#title4').text(selectedYear + ' 제도유형별 퇴직연금제도 가입 근로자');
				$('#title5').text(selectedYear + ' 성별 퇴직연금제도 가입 근로자');
				$('#chartTab1_2').show();
				$('#chartTab1_2').text('성별');
				/*$('#chartTab1_3').hide();
				$('#charttitle2').hide();
				$('#charttitle3').hide();*/
			} else if(tblId == 'DT_1RP001'){
				$('#title1').text('연도별 퇴직연금제도 가입 근로자');
				$('#title2').text(selectedYear + ' 성별 연령별 퇴직연금제도 가입 근로자');
				$('#title3').text(selectedYear + ' 연령별 제도유형별 퇴직연금제도 가입');
				$('#title4').text(selectedYear + ' 성별 퇴직연금제도 가입 근로자');
				$('#title5').text(selectedYear + ' 연령별 퇴직연금제도 가입 근로자');
				$('#title6').text(selectedYear + ' 제도유형별 퇴직연금제도 가입 근로자');
				/*$('#chartTab1_2').show();
				$('#chartTab1_3').show();*/
			} else if(tblId == 'DT_1RP002'){
				$('#title1').text('연도별 퇴직연금제도 가입 근로자');
				$('#title2').text(selectedYear + ' 성별 근속기간별 퇴직연금제도 가입 근로자');
				$('#title3').text(selectedYear + ' 근속기간별 제도유형별 퇴직연금제도 가입 근로자');
				$('#title4').text(selectedYear + ' 성별 퇴직연금제도 가입 근로자');
				$('#title5').text(selectedYear + ' 근속기간별 퇴직연금제도 가입 근로자');
				$('#title6').text(selectedYear + ' 제도유형별 퇴직연금제도 가입 근로자');
				/*$('#chartTab1_2').show();
				$('#chartTab1_3').show();
				$('#chartTab1_3').text('근속기간별');*/
			} else if(tblId == 'DT_1RP003'){
				$('#title1').text('연도별 퇴직연금제도 가입 근로자');
				$('#title3').text(selectedYear + ' 산업대분류별 제도유형별 퇴직연금제도 가입 근로자');
				$('#title4').text(selectedYear + ' 제도유형별 퇴직연금제도 가입 근로자');
				$('#title5').text(selectedYear + ' 산업대분류별 퇴직연금제도 가입 근로자');
				/*$('#chartTab1_3').show();
				$('#chartTab1_3').text('산업대분류별');
				$('#charttitle2').hide();
				$('#charttitle5').hide();*/
			} else if(tblId == 'DT_1RP004'){
				$('#title1').text('연도별 퇴직연금제도 가입 근로자');
				$('#title2').text(selectedYear + ' 성별 가입기간별 퇴직연금제도 가입 근로자');
				$('#title3').text(selectedYear + ' 가입기간별 제도유형별 퇴직연금제도 가입 근로자');
				$('#title4').text(selectedYear + ' 성별 퇴직연금제도 가입 근로자');
				$('#title5').text(selectedYear + ' 가입기간별 퇴직연금제도 가입 근로자');
				$('#title6').text(selectedYear + ' 제도유형별 퇴직연금제도 가입 근로자');
				/*$('#chartTab1_2').show();
				$('#chartTab1_3').text('가입기간별');*/
			} else if(tblId == 'DT_1RP005'){
				$('#title1').text('연도별 퇴직연금제도 가입 근로자');
				$('#title3').text(selectedYear + ' 종사자규모별 제도유형별 퇴직연금제도 가입 근로자');
				$('#title4').text(selectedYear + ' 종사자규모별 퇴직연금제도 가입 근로자');
				$('#title5').text(selectedYear + ' 제도유형별 퇴직연금제도 가입 근로자');
				/*$('#chartTab1_3').text('종사자규모별');
				$('#charttitle2').hide();
				$('#charttitle5').hide();*/
			} else if(tblId == 'DT_1RP006'){
				$('#title1').text('연도별 퇴직연금제도 도입 사업장');
				$('#title3').text(selectedYear + ' 종사자규모별 제도유형별 퇴직연금제도 도입 사업장');
				$('#title4').text(selectedYear + ' 제도유형별 퇴직연금제도 도입 사업장');
				$('#title5').text(selectedYear + ' 종사자규모별 퇴직연금제도 도입 사업장');
				/*$('#chartTab1_3').text('종사자규모별');
				$('#charttitle2').hide();
				$('#charttitle5').hide();*/	
			} else if(tblId == 'DT_1RP007'){
				$('#title1').text('연도별 퇴직연금제도 도입 사업장');
				$('#title3').text(selectedYear + ' 산업대분류별 제도유형별 퇴직연금제도 도입 사업장');
				$('#title4').text(selectedYear + ' 제도유형별 퇴직연금제도 도입 사업장');
				$('#title5').text(selectedYear + ' 산업대분류별 퇴직연금제도 도입 사업장');
				/*$('#chartTab1_3').text('산업대분류별');
				$('#charttitle2').hide();
				$('#charttitle5').hide();*/
			} else if(tblId == 'DT_1RP008'){
				$('#title1').text('연도별 퇴직연금제도 도입 사업장');
				$('#title3').text(selectedYear + ' 도입기간별 제도유형별 퇴직연금제도 도입 사업장');
				$('#title4').text(selectedYear + ' 제도유형별 퇴직연금제도 도입 사업장');
				$('#title5').text(selectedYear + ' 도입기간별 퇴직연금제도 도입 사업장');
				/*$('#chartTab1_3').text('도입기간별');
				$('#charttitle2').hide();
				$('#charttitle5').hide();*/
			} else if(tblId == 'DT_1RP009'){
				$('#title1').text('연도별 개인형 IRP 가입자');
				$('#title2').text('연도별 개인형 IRP 적립금액');
				$('#title3').text(selectedYear + ' 성별 연령별 개인형 IRP 가입자');
				$('#title4').text(selectedYear + ' 성별(연령별) 개인형 IRP 가입자');
				$('#title5').text(selectedYear + ' 성별 연령별 개인형 IRP 적립금액');
				$('#title6').text(selectedYear + ' 성별(연령별) 개인형 IRP 적립금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('성별');
				$('.chartNm3').text('연령별');*/
			} else if(tblId == 'DT_1RP010'){
		 		$('#title1').text('연도별 개인형 IRP 가입자');
				$('#title2').text('연도별 개인형 IRP 적립금액');
				$('#title3').text(selectedYear + ' 성별 가입기간별 개인형 IRP 가입자');
				$('#title4').text(selectedYear + ' 성별(가입기간별) 개인형 IRP 가입자');
				$('#title5').text(selectedYear + ' 성별 가입기간별 개인형 IRP 적립금액');
				$('#title6').text(selectedYear + ' 성별(가입기간별) 개인형 IRP 적립금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('성별');
				$('.chartNm3').text('가입기간별');*/
			} else if(tblId == 'DT_1RP011'){
				$('#title1').text('연도별 개인형 IRP 추가 가입자');
				$('#title2').text('연도별 개인형 IRP 추가 적립금액');
				$('#title3').text(selectedYear + ' 대상자별 성별 개인형 IRP 가입자');
				$('#title4').text(selectedYear + ' 대상자별(성별) 개인형 IRP 가입자');
				$('#title5').text(selectedYear + ' 대상자별 성별 개인형 IRP 적립금액');
				$('#title6').text(selectedYear + ' 대상자별(성별) 개인형 IRP 적립금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('대상자별');
				$('.chartNm3').text('성별');*/
			} else if(tblId == 'DT_1RP012'){
				$('#title1').text('연도별 적립금액');
				$('#title2').text(selectedYear +' 금융권역별 운용방법별 적립금액');
				$('#title4').text(selectedYear +' 운용방법별 적립금액');
				$('#title5').text(selectedYear +' 금융권역별 적립금액');
				/*$('#chartTab1_2').show();
				$('#chartTab1_2').text('금융권역별');
				$('#chartTab1_3').text('운용방법별');
				$('#charttitle2').hide();
				$('#charttitle3').hide();*/
			} else if(tblId == 'DT_1RP013'){
				$('#title1').text('연도별 적립금액');
				$('#title2').text(selectedYear + ' 제도유형별 운용방법별 적립금액');
				$('#title4').text(selectedYear + ' 운용방법별 적립금액');
				$('#title5').text(selectedYear + ' 제도유형별 적립금액');
				/*$('#chartTab1_2').show();
				$('#chartTab1_2').text('제도유형별');
				$('#chartTab1_3').text('운용방법별');
				$('#charttitle2').hide();
				$('#charttitle3').hide();*/
			} else if(tblId == 'DT_1RP014'){
				$('#title1').text('연도별 개인형 IRP 이전자');
				$('#title2').text('연도별 개인형 IRP 이전금액');
				$('#title3').text(selectedYear + ' 성별 연령별 개인형 IRP 이전자');
				$('#title4').text(selectedYear + ' 성별(연령별) 개인형 IRP 이전 금액');
				$('#title5').text(selectedYear + ' 성별 연령별 개인형 IRP 이전자');
				$('#title6').text(selectedYear + ' 성별(연령별) 개인형 IRP 이전금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('성별');
				$('.chartNm3').text('연령별');*/
			} else if(tblId == 'DT_1RP015'){
				$('#title1').text('연도별 IRP 해지자');
				$('#title2').text('연도별 IRP 해지금액');
				$('#title3').text(selectedYear + ' 성별 연령별 개인형 IRP 해지자');
				$('#title4').text(selectedYear + ' 성별(연령별) 개인형 IRP 해지 금액');
				$('#title5').text(selectedYear + ' 성별 연령별 개인형 IRP 해지자');
				$('#title6').text(selectedYear + ' 성별(연령별) 개인형 IRP 해지금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('성별');
				$('.chartNm3').text('연령별');*/
			} else if(tblId == 'DT_1RP016'){
				$('#title1').text('연도별 퇴직연금 중도인출자');
				$('#title2').text('연도별 퇴직연금 중도인출금액');
				$('#title3').text(selectedYear + ' 사유별 성별 퇴직연금 중도인출자');
				$('#title4').text(selectedYear + ' 사유별(성별) 퇴직연금 중도인출 금액');
				$('#title5').text(selectedYear + ' 사유별 성별 퇴직연금 중도인출자');
				$('#title6').text(selectedYear + ' 사유별(성별) 퇴직연금 중도인출 금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('성별');
				$('.chartNm3').text('사유별');*/
			} else if(tblId == 'DT_1RP018'){
				$('#title1').text('연도별 퇴직연금 중도인출자');
				$('#title2').text('연도별 퇴직연금 중도인출금액');
				$('#title3').text(selectedYear + ' 사유별 성별 연령별 퇴직연금 중도인출자');
				$('#title4').text(selectedYear + ' 사유별(성별,연령별) 퇴직연금 중도인출 금액');
				$('#title5').text(selectedYear + ' 사유별 성별 연령별 퇴직연금 중도인출자');
				$('#title6').text(selectedYear + ' 사유별(성별,연령별) 퇴직연금 중도인출금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('성별');
				$('.chartNm3').text('연령별');
				$('#chartTab2_1').text('사유별');
				$('#chartTab2_2').text('성별');
				$('#chartTab3_1').text('사유별');
				$('#chartTab3_2').text('성별');*/
			} else if(tblId == 'DT_1RP032'){
				$('#title1').text('연도별 IRP 이전예외자');
				$('#title2').text('연도별 IRP 이전예외금액');
				$('#title3').text(selectedYear + ' 이전예외사유별 성별 IRP 이전예외자');
				$('#title4').text(selectedYear + ' 이전예외사유별(성별) IRP 이전예외 금액');
				$('#title5').text(selectedYear + ' 이전예외사유별 성별 IRP 이전예외자');
				$('#title6').text(selectedYear + ' 이전예외사유별(성별) IRP 이전예외 금액');
				/*$('#chartTab1_2').show();
				$('.chartNm2').text('이전예외사유별');
				$('.chartNm3').text('성별');*/
			}
			/*$('#division2').show();
			if(tblId == 'DT_1RP009' || tblId == 'DT_1RP010' || tblId == 'DT_1RP011' || tblId == 'DT_1RP014' || 
			   tblId == 'DT_1RP015' || tblId == 'DT_1RP016' || tblId == 'DT_1RP018' || tblId == 'DT_1RP032'){
				$('#tabArea0').show();
				$('#tabArea2').show();
				$('#tabArea3').show();
				$('#division2').hide();
				if(tblId == 'DT_1RP018'){
					$('#chartTab2_2').show();
					$('#chartTab3_2').show();
				} else {
					$('#chartTab2_2').hide();
					$('#chartTab3_2').hide();
				}
			}*/
			//$('.division').html('');
			
			if(tblId == 'DT_1RP101' || tblId == 'DT_1RP102' || tblId == 'DT_1RP103' || tblId == 'DT_1RP104' || tblId == 'DT_1RP105'){
				itmId = 'T13';
			}
			else if(tblId == 'DT_1RP106'){
				itmId = 'T16';
			}
			else if(tblId == 'DT_1RP000' || tblId == 'DT_1RP001' || tblId == 'DT_1RP002' || tblId == 'DT_1RP003' || tblId == 'DT_1RP004' || tblId == 'DT_1RP008'){
				itmId = 'T001';
			}
			else if(tblId == 'DT_1RP005'){
				itmId = 'T01';
			}
			else if(tblId == 'DT_1RP006' || tblId == 'DT_1RP007'){
				itmId = 'T02';
			}
			else if(tblId == 'DT_1RP009' || tblId == 'DT_1RP010' || tblId == 'DT_1RP011' || tblId == 'DT_1RP032'){
				itmId = 'T01';
			}
			else if(tblId == 'DT_1RP012' || tblId == 'DT_1RP013'){
				itmId = 'T03';
			}
			else if(tblId == 'DT_1RP014' || tblId == 'DT_1RP015' || tblId == 'DT_1RP016' || tblId == 'DT_1RP018'){
				itmId = 'T05';
			}
			
			if(tblId == 'DT_1RP101' || tblId == 'DT_1RP002' || tblId == 'DT_1RP004' || tblId == 'DT_1RP009' || tblId == 'DT_1RP014' || tblId == 'DT_1RP015'){
				objL1 = '0';objL2 = '00';
			}
			else if(tblId == 'DT_1RP102' || tblId == 'DT_1RP000' || tblId == 'DT_1RP003' || tblId == 'DT_1RP005' || tblId == 'DT_1RP006' || tblId == 'DT_1RP007' || tblId == 'DT_1RP008' || 
					tblId == 'DT_1RP010' || tblId == 'DT_1RP011' || tblId == 'DT_1RP012' || tblId == 'DT_1RP013' || tblId == 'DT_1RP016' || tblId == 'DT_1RP032'){
				objL1 = '0';objL2 = '0';
			}
			else if(tblId == 'DT_1RP103' || tblId == 'DT_1RP104' || tblId == 'DT_1RP105' || tblId == 'DT_1RP106'){
				objL1 = '0';
				$('#division2').hide();
			}
			else if(tblId == 'DT_1RP001'){
				objL1 = '00';objL2 = '00';
			}
			else if(tblId == 'DT_1RP018'){
				objL1 = '00';
				objL2 = '0';
				objL3 = '0';
			}
			
			var valueSuffix1 = '';
			var valueSuffix2 = '';
			var valueSuffix3 = '';
			var valueSuffix4 = '';
			if(tblId == 'DT_1RP101' || tblId == 'DT_1RP102' || tblId == 'DT_1RP103' || 
			   tblId == 'DT_1RP104' || tblId == 'DT_1RP105' || tblId == 'DT_1RP106'){valueSuffix1 = '%';}
			else if(tblId == 'DT_1RP006' || tblId == 'DT_1RP007' || tblId == 'DT_1RP008'){valueSuffix1 = '개';}
			else if(tblId == 'DT_1RP012' || tblId == 'DT_1RP013'){valueSuffix1 = ' 백만원';}
			else {valueSuffix1 = '명';}
			
			if(tblId == 'DT_1RP105' || tblId == 'DT_1RP106' || tblId == 'DT_1RP006' || tblId == 'DT_1RP007' || tblId == 'DT_1RP008'){valueSuffix3 = '개';}
			else if(tblId == 'DT_1RP012' || tblId == 'DT_1RP013'){valueSuffix3 = ' 백만원';}
			else {valueSuffix3 = '명';}
			
			if(tblId == 'DT_1RP009' || tblId == 'DT_1RP010' || tblId == 'DT_1RP011' || tblId == 'DT_1RP014' ||
			   tblId == 'DT_1RP015' || tblId == 'DT_1RP016' || tblId == 'DT_1RP018' || tblId == 'DT_1RP032'){valueSuffix2 = ' 백만원';valueSuffix4 = ' 백만원';	}
			else {valueSuffix2 = valueSuffix1;valueSuffix4 = valueSuffix3;}
			
			let parameter ={
				 apiKey:"NWU2NjUxODYzMWQyMTM0MGQ5NWRhMTE3ZjZjZGE0ODc="
				,itmId:itmId      
				,objL1:objL1
				,objL2:objL2
				,objL3:objL3
				,prdSe:'Y'   
				,format:'json'
				,jsonVD:'Y'
				,newEstPrdCnt:newEstPrdCnt
				,loadGubun:'1'
				,orgId:'101'
				,tblId:tblId
			}
			$.ajax({
				url: proxy+'https://kosis.kr/openapi/Param/statisticsParameterData.do?method=getList',
				type: 'get',
				data: parameter
			}).done(function(result){
				var res = JSON.parse(result);
				console.log("========================1번차트 데이터========================");
				console.log(res);
				let DataDt = new Array;
				let chartData = new Array;
				let charts1 = "";
				let categories = new Array;
				let tblId = res[0].TBL_ID;
				let itmId1 = "";
				let itmId2 = "";
				let itmId3 = "";
				let objL1 = "";
				let objL2 = "";
				let objL3 = "";
				let format = "";
				for(var i=0; i<res.length; i++) {
					DataDt.push(Number(res[i].DT));
					categories.push(Number(res[i].PRD_DE));
				}
				console.log("1번차트 데이터: "+DataDt);
				if(tblId == 'DT_1RP101' || tblId == 'DT_1RP102' || tblId == 'DT_1RP103' || tblId == 'DT_1RP104' || tblId == 'DT_1RP105' || tblId == 'DT_1RP106') {
					format = "{y} %";
				}else if(tblId == 'DT_1RP000' || tblId == 'DT_1RP001' || tblId == 'DT_1RP002' || tblId == 'DT_1RP003' || tblId == 'DT_1RP004' || tblId == 'DT_1RP005' || tblId == 'DT_1RP032') {
					format = "{y} 명";
				}else if(tblId == 'DT_1RP006' || tblId == 'DT_1RP007' || tblId == 'DT_1RP008') {
					format = "{y} 개";
				}else if(tblId == 'DT_1RP009' || tblId == 'DT_1RP010' || tblId == 'DT_1RP011' || tblId == 'DT_1RP012' || tblId == 'DT_1RP013' || tblId == 'DT_1RP014' || 
						 tblId == 'DT_1RP015' || tblId == 'DT_1RP016' || tblId == 'DT_1RP018') {
					format = "{y} 원";
				}
				chartData.push({
					name: '가입률',
					data: DataDt,
					color: '#D0D0D0',
					marker: {
						radius: 5,
						symbol: 'circle',
					},
					//dashStyle: 'longdash',
					lineWidth: 2,
					//해당년도 위 데이터 표시
					dataLabels: {
						enabled: true,
						format: format,
						style: {
							fontSize :'14px',
							color: '#000',
							fontWeight: '600',
						},
					},
				});
				console.log(chartData);
				$("#charttitle1 .tabArea").empty();
				if(tblId == 'DT_1RP101' || tblId == 'DT_1RP102' || tblId == 'DT_1RP001' || tblId == 'DT_1RP002' || tblId == 'DT_1RP004' || tblId == 'DT_1RP009' || tblId == 'DT_1RP010' ||
				   tblId == 'DT_1RP011' || tblId == 'DT_1RP012' || tblId == 'DT_1RP013' || tblId == 'DT_1RP014' || tblId == 'DT_1RP015' || tblId == 'DT_1RP016' || tblId == 'DT_1RP032') {
					$("#charttitle1 .tabArea").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart11' style='width:650px; height:230px'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart12' style='width:650px; height:230px'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart13' style='width:650px; height:230px'></div></figure></div></div>");
				}else if(tblId == 'DT_1RP103' || tblId == 'DT_1RP104' || tblId == 'DT_1RP105' || tblId == 'DT_1RP106' || tblId == 'DT_1RP000' || tblId == 'DT_1RP003' || tblId == 'DT_1RP005' || 
						 tblId == 'DT_1RP006' || tblId == 'DT_1RP007' || tblId == 'DT_1RP008') {
					$("#charttitle1 .tabArea").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart11' style='width:650px; height:230px'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart12' style='width:650px; height:230px'></div></figure></div></div>");
				}else if(tblId == 'DT_1RP018') {
					$("#charttitle1 .tabArea").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart11' style='width:650px; height:230px'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart12' style='width:650px; height:230px'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart13' style='width:650px; height:230px'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart14' style='width:650px; height:230px'></div></figure></div></div>");
				}
				charts1 = Highcharts.chart('chart11', {
					chart : {
						type : 'line',
					},
					credits: {
						enabled: false
					},
					exporting : {
						enabled : false
					},
					title: {
						text: '',
					},
					subtitle: {
						text: '',
					},
					yAxis: {
						title: {
						  text: '',
						},
						labels: {
							enabled : false
						},
						lineColor: '#E8E8E8'
					},
					xAxis: {
						labels: {
							style: {
								color: '#494949',
								fontSize:'14px',
								fontWeight: 'bold',
							}
						},
						categories: categories
					},
					legend: {
						enabled: true,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					plotOptions: {
						series: {
							marker: {
								enabled: true,
								lineWidth : 2,
								lineColor:'#F15C80',
								fillColor:'#ffffff',
								fontFamily: 'Noto Sans KR',
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						zIndex: 100,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',
						},
						formatter: function () {
						},
					},
					series: chartData 
				});
				// 2~6번 차트 데이터
				console.log(tblId);
				if(tblId == "DT_1RP101" || tblId == "DT_1RP102" || tblId == "DT_1RP000" || tblId == "DT_1RP001" || tblId == "DT_1RP002" || tblId == "DT_1RP003" || tblId == "DT_1RP004" ||
				   tblId == "DT_1RP005" || tblId == "DT_1RP006" || tblId == "DT_1RP007" || tblId == "DT_1RP008" || tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" ||
				   tblId == "DT_1RP012" || tblId == "DT_1RP013" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP032") { //여기하자
					itmId1 = "ALL";
					objL1 = "ALL";
					objL2 = "ALL";
					objL3 = "";
				}else if(tblId == "DT_1RP103" || tblId == "DT_1RP104" || tblId == "DT_1RP105" || tblId == "DT_1RP106") {
					itmId1 = "ALL";
					objL1 = "ALL";
					objL2 = "";
					objL3 = "";
				}else if(tblId == "DT_1RP018") {
					itmId1 = "ALL";
					objL1 = "ALL";
					objL2 = "ALL";
					objL3 = "ALL";
				}
				let parameter2 = {
					 apiKey:"NWU2NjUxODYzMWQyMTM0MGQ5NWRhMTE3ZjZjZGE0ODc="
					,itmId: itmId1
					,objL1: objL1
					,objL2: objL2
					,objL3: objL3
					,format: "json"
					,jsonVD: "Y"
					,prdSe: "Y"
					,startPrdDe: "2015"
					,endPrdDe: "2020"
					,orgId: "101"
					,tblId: tblId	
				}
				$.ajax({
					url: proxy+'https://kosis.kr/openapi/Param/statisticsParameterData.do?method=getList',
					type: 'get',
					async: false,
					data: parameter2,
					dataType: "json"
				}).done(function(res) {
					console.log("===================== 2 ~ 6 chart =====================");
					currentData = res;
					console.log(currentData);
				});
				setTimeout(function() {
					$more2DashDetail.chart.makeChartData(currentData);
				}, 300);
			});
		}
	};
	$more2DashDetail.chart = {
		/**
		 * @name : $more2DashDetail.chart.makeChartData
		 * @description : 차트 데이터 가공
		 * @date : 2022.10.13
		 * @author : 조규환
		 * @history :
		 */
		makeChartData : function(res) {
			console.log("===================== 데이터가공 =====================");
			console.log(res);
			let param = new Array;
			let itmId = "";
			let objL1 = "";
			let objL2 = "";
			let objL3 = "";
			let proxy = "/view/totSurv/proxy?";
			let legend = new Array;
			let chartDivisionData2 = new Array; 
			let overlapRemoveData2 = new Array;
			let chartDivisionData3 = new Array; 
			let overlapRemoveData3 = new Array;
			let chartDivisionData4 = new Array; 
			let overlapRemoveData4 = new Array;
			
			let selectNm1 = new Array;
			let selectNm2 = new Array;
			let selectNm3 = new Array;
			let selectNm4 = new Array;
			let selectNm5 = new Array;
			let selectNm6 = new Array;
			
			let tblId = res[0].TBL_ID;
			let prdDe = new Array;
			for(let i=0; i<6; i++) {
				prdDe.push(res[i].PRD_DE);
			}
			let legendNm2 = new Array;
			let legendNm3 = new Array;
			let legendNm4 = new Array;
			let legendNm5 = new Array;
			let legendNm6 = new Array;
			
			let xAxis2 = new Array;
			let xAxis3 = new Array;
			let xAxis4 = new Array;
			let xAxis5 = new Array;
			let xAxis6 = new Array;
			
			let categories2 = new Array;
			let categories3 = new Array;
			let categories4 = new Array;
			let categories5 = new Array;
			let categories6 = new Array;
			
			let chartVal2 = new Array;
			let chartVal3 = new Array;
			let chartVal4 = new Array;
			let chartVal4_1 = new Array;
			let chartVal4_2 = new Array;
			let chartVal5 = new Array;
			let chartVal5_1 = new Array;
			let chartVal5_2 = new Array;
			let chartVal6 = new Array;

			let divisionData = new Array; //
			
			let seriesyearData2 = new Array;  	//2번 차트에 들어갈 데이터 배열
			let seriesyearData3 = new Array; 	//3번 차트에 들어갈 데이터 배열
			let seriesyearData4 = new Array; 	//4번 차트에 들어갈 데이터 배열
			let seriesyearData5 = new Array; 	//5번 차트에 들어갈 데이터 배열
			let seriesyearData6 = new Array; 	//6번 차트에 들어갈 데이터 배열
			
			let color1 = new Array;
			let color2 = new Array;
			let color3 = new Array;
			let color4 = new Array;
			let color5 = new Array;
			let color6 = new Array;
			
			let split2 = new Array;
			let split3 = new Array;
			let split4 = new Array;
			let split5 = new Array;
			let split6 = new Array;
			var chartColor = ['#7CB5EC', '#F15C80', '#F7A35C', '#90ED7D', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4', '#FFDA55', '#70658B', 
				 			  '#55CCFF', '#AD46E0', '#906D3B', '#A828A8', '#FFCD28', '#DCAD67', '#FF7E9D', '#48DAD2', '#BB55FF', '#B9E2FA'];
			for(let i=1; i<7; i++) {
				$("#charttitle"+i).removeClass();
			}
			$("#charttitle3_4").removeClass();
			$("#charttitle5_6").removeClass();
			if(tblId == "DT_1RP101" || tblId == "DT_1RP102") {
				$("#charttitle4 .tabArea4").empty();
				$("#charttitle4 .tabArea4").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart41' style='width:900px; height:170px;'></div></figure></div></div>" +
					"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart42' style='width:900px; height:170px;'></div></figure></div></div>" +
					"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart43' style='width:900px; height:170px;'></div></figure></div></div>");
			}else if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP032") {
				$("#charttitle2 .tabArea2").empty();
				$("#charttitle5 .tabArea5").empty();
				$("#charttitle6 .tabArea6").empty();
				$("#charttitle2 .tabArea2").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart21' style='width:900px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart22' style='width:900px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart23' style='width:900px; height:200px;'></div></figure></div></div>");
				$("#charttitle5 .tabArea5").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart51' style='width:400px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart52' style='width:400px; height:200px;'></div></figure></div></div>");
				$("#charttitle6 .tabArea6").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart61' style='width:400px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart62' style='width:400px; height:200px;'></div></figure></div></div>");
			}else if(tblId == "DT_1RP018") {
				$("#charttitle2 .tabArea2").empty();
				$("#charttitle5 .tabArea5").empty();
				$("#charttitle6 .tabArea6").empty();
				$("#charttitle2 .tabArea2").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart21' style='width:900px; height:170px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart22' style='width:900px; height:170px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart23' style='width:900px; height:170px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart24' style='width:900px; height:170px;'></div></figure></div></div>");
				$("#charttitle5 .tabArea5").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart51' style='width:400px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart52' style='width:400px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart53' style='width:400px; height:200px;'></div></figure></div></div>");
				$("#charttitle6 .tabArea6").append("<div class='tabBox on'><div class='chartbox'><figure class='highcharts-figure'><div id='chart61' style='width:400px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart62' style='width:400px; height:200px;'></div></figure></div></div>" +
						"<div class='tabBox'><div class='chartbox'><figure class='highcharts-figure'><div id='chart63' style='width:400px; height:200px;'></div></figure></div></div>");
			}
			if(tblId == "DT_1RP101" || tblId == "DT_1RP102" || tblId == "DT_1RP001" || tblId == "DT_1RP002" || tblId == "DT_1RP004") {
				$("#chart21").css("width", "680");
				$("#chart21").css("height", "230");
				$("#chart51").css("width", "400");
				$("#chart51").css("height", "200");
			}else if(tblId == "DT_1RP103" || tblId == "DT_1RP104" || tblId == "DT_1RP105" || tblId == "DT_1RP106") {
				$("#chart21").css("width", "680");
				$("#chart21").css("height", "230");
				$("#chart51").css("width", "400");
				$("#chart51").css("height", "200");
			}else if(tblId == "DT_1RP000") {
				$("#chart21").css("width", "680");
				$("#chart21").css("height", "220");
				/*$("#chart41").css("width", "680");
				$("#chart41").css("height", "400");*/
				$("#chart51").css("width", "680");
				$("#chart51").css("height", "400");
			}else if(tblId == "DT_1RP003" || tblId == "DT_1RP005" || tblId == "DT_1RP006" || tblId == "DT_1RP007" || tblId == "DT_1RP008" || tblId == "DT_1RP012" || tblId == "DT_1RP013") {
				$("#chart21").css("width", "680");
				$("#chart21").css("height", "220");
				$("#chart31").css("width", "680");
				$("#chart31").css("height", "430");
				$("#chart51").css("width", "680");
				$("#chart51").css("height", "430");
			}else if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP017" ||
					 tblId == "DT_1RP018") {
				$("#chart31").css("width", "950");
				$("#chart31").css("height", "210");
				$("#chart41").css("width", "950");
				$("#chart41").css("height", "210");
				$("#chart51").css("width", "400");
				$("#chart51").css("height", "200");
				$("#chart61").css("width", "400");
				$("#chart61").css("height", "200");
			}
			
			if(tblId == "DT_1RP101") {
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm4.push(res[0].C1_NM, "남자", "여자");
				color3 = ['#7CB5EC', '#F15C80'];
				color4 = ['#7CB5EC', '#F15C80'];
				color5 = ['#7CB5EC', '#F15C80'];
				for(let i=0; i<res.length; i++) {
					$("#charttitle1").addClass("item flex-width-780 flex-height-280");
					$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
					$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
					$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
					$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
					$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
					$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
					$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
					$("#charttitle1").show();
					$("#charttitle2").show();
					$("#charttitle3").show();
					$("#charttitle4").show();
					$("#charttitle5").show();
					$("#charttitle6").show();
					$("#chart51").css("height", "165");
					if(res[i].C1 == "0" && res[i].ITM_ID == "T13" && res[i].PRD_DE == prdDe[5]) {
						if(res[i].C2 == "01" || res[i].C2 == "02" || res[i].C2 == "03" || res[i].C2 == "04" || res[i].C2 == "05" || res[i].C2 == "06" || res[i].C2 == "07" || res[i].C2 == "08" ||
								res[i].C2 == "09" || res[i].C2 == "10" || res[i].C2 == "11"	) {
							categories2.push(res[i].C2_NM);
						}
					}
					//2번차트
					for(let j=0; j<3; j++) {
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == j && res[i].ITM_ID == "T13" && res[i].C2 == "00") {
								legendNm2.push(res[i].C1_NM);
							}
							if(res[i].C1 == j && res[i].ITM_ID == "T13") {
								if(res[i].C2 == "01" || res[i].C2 == "02" || res[i].C2 == "03" || res[i].C2 == "04" || res[i].C2 == "05" || res[i].C2 == "06" || res[i].C2 == "07" || res[i].C2 == "08" ||
								   res[i].C2 == "09" || res[i].C2 == "10" || res[i].C2 == "11"	) {
									chartDivisionData2.push(Number(res[i].DT));
								}
							}
						}
					}
					//3번차트
					if(res[i].PRD_DE == prdDe[0] && res[i].C1 == "0" && res[i].C2 == "00") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm3.push(res[i].ITM_NM);
						}
					}
					for(let j=0; j<prdDe.length; j++) {
						if(res[i].PRD_DE == prdDe[j] && res[i].C1 == "0" && res[i].C2 == "00") {
							if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
					}
					
					//4번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].C2 == "00") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].C2 != "00") {
						if(res[i].ITM_ID == "T11") {
							categories4.push(res[i].C2_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T12") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
					//5번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0" && res[i].C2 == "00") {
						if(res[i].ITM_ID == "T11") {
							legendNm5.push(res[i].C1_NM);
							categories5.push(res[i].C1_NM);
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "1" && res[i].C2 == "00") {
						if(res[i].ITM_ID == "T12") {
							chartVal5_1.push(res[i].C1_NM, Number(res[i].DT));
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "2" && res[i].C2 == "00") {
						if(res[i].ITM_ID == "T12") {
							chartVal5_2.push(res[i].C1_NM, Number(res[i].DT));
						}
					}
					//6번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].C2 != "00") {
						if(res[i].ITM_ID == "T12") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 11);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				categories3 = prdDe;
				chartVal4.push(chartVal4_1, chartVal4_2);
				chartVal5.push(chartVal5_1, chartVal5_2);
				console.log(chartVal2);
			}else if(tblId == "DT_1RP102") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				$("#chart51").css("height", "165");
				color3 = ['#7CB5EC', '#F15C80'];
				color4 = ['#7CB5EC', '#F15C80'];
				color5 = ['#7CB5EC', '#F15C80'];
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].ITM_ID == "T13" && res[i].PRD_DE == prdDe[5]) {
						if(res[i].C2 != "0") {
							categories2.push(res[i].C2_NM);
						}
						
					}
					if(res[i].C2 == "0" && res[i].ITM_ID == "T11" && res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0") {
							selectNm4.push(res[i].C1_NM);
						}
						if(res[i].C1 == "1") {
							selectNm4.push(res[i].C1_NM);
						}
						if(res[i].C1 == "2") {
							selectNm4.push(res[i].C1_NM);
						}
					}
					//2번차트
					for(let j=0; j<3; j++) {
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == j && res[i].ITM_ID == "T13" && res[i].C2 == "0") {
								legendNm2.push(res[i].C1_NM);
							}
							if(res[i].C1 == j && res[i].ITM_ID == "T13") {
								if(res[i].C2 != "0") {
									chartDivisionData2.push(Number(res[i].DT));
								}
							}
						}
					}
					//3번차트
					if(res[i].PRD_DE == prdDe[0] && res[i].C1 == "0" && res[i].C2 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm3.push(res[i].ITM_NM);
						}
					}
					for(let j=0; j<prdDe.length; j++) {
						if(res[i].PRD_DE == prdDe[j] && res[i].C1 == "0" && res[i].C2 == "0") {
							if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
					}
					//4번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].C2 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].C2 != "0") {
						if(res[i].ITM_ID == "T11") {
							categories4.push(res[i].C2_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T12") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
					//5번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0" && res[i].C2 == "0") {
						if(res[i].ITM_ID == "T11") {
							legendNm5.push(res[i].C1_NM);
							categories5.push(res[i].C1_NM);
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "1" && res[i].C2 == "0") {
						if(res[i].ITM_ID == "T12") {
							chartVal5_1.push(res[i].C1_NM, Number(res[i].DT));
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "2" && res[i].C2 == "0") {
						if(res[i].ITM_ID == "T12") {
							chartVal5_2.push(res[i].C1_NM, Number(res[i].DT));
						}
					}
					//6번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].C2 != "0") {
						if(res[i].ITM_ID == "T12") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 5);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				categories3 = prdDe;
				chartVal4.push(chartVal4_1, chartVal4_2);
				chartVal5.push(chartVal5_1, chartVal5_2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP103") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				$("#chart51").css("height", "400");
				color3 = ['#7CB5EC', '#F15C80'];
				color4 = ['#7CB5EC', '#F15C80'];
				legendNm2.push("가입률");
				for(let i=0; i<res.length; i++) {
					//2번차트
					
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 != "0" && res[i].ITM_ID == "T13") {
							categories2.push(res[i].C1_NM);
							chartDivisionData2.push(Number(res[i].DT));
						}
					}
					//3번차트
					if(res[i].PRD_DE == prdDe[0] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm3.push(res[i].ITM_NM);
						}
					}
					for(let j=0; j<prdDe.length; j++) {
						if(res[i].PRD_DE == prdDe[j] && res[i].C1 == "0") {
							if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
					}
					//4번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T11") {
							categories4.push(res[i].C1_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T12") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
					//5번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T11") {
							legendNm5.push(res[i].C1_NM);
							categories5.push(res[i].C1_NM);
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T12") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 7);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				categories3 = prdDe;
				chartVal4.push(chartVal4_1, chartVal4_2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP104") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				$("#chart51").css("height", "400");
				color3 = ['#7CB5EC', '#F15C80'];
				color4 = ['#7CB5EC', '#F15C80'];
				legendNm2.push("가입률");
				for(let i=0; i<res.length; i++) {
					//2번차트
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 != "0" && res[i].ITM_ID == "T13") {
							categories2.push(res[i].C1_NM);
							chartDivisionData2.push(Number(res[i].DT));
						}
					}
					//3번차트
					if(res[i].PRD_DE == prdDe[0] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm3.push(res[i].ITM_NM);
						}
					}
					for(let j=0; j<prdDe.length; j++) {
						if(res[i].PRD_DE == prdDe[j] && res[i].C1 == "0") {
							if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
					}
					//4번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T11") {
							categories4.push(res[i].C1_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T12") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
					//5번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T11") {
							legendNm5.push(res[i].C1_NM);
							categories5.push(res[i].C1_NM);
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T12") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 21);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				categories3 = prdDe;
				chartVal4.push(chartVal4_1, chartVal4_2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP105") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				$("#chart51").css("height", "400");
				color3 = ['#7CB5EC', '#F15C80'];
				color4 = ['#7CB5EC', '#F15C80'];
				legendNm2.push("도입률");
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 != "0" && res[i].ITM_ID == "T13") {
							categories2.push(res[i].C1_NM);
							chartDivisionData2.push(Number(res[i].DT));
						}
					}
					//3번차트
					if(res[i].PRD_DE == prdDe[0] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm3.push(res[i].ITM_NM);
						}
					}
					for(let j=0; j<prdDe.length; j++) {
						if(res[i].PRD_DE == prdDe[j] && res[i].C1 == "0") {
							if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
					}
					//4번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T11") {
							categories4.push(res[i].C1_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T12") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
					//5번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T11") {
							legendNm5.push(res[i].C1_NM);
							categories5.push(res[i].C1_NM);
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T12") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 7);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				categories3 = prdDe;
				chartVal4.push(chartVal4_1, chartVal4_2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP106") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5").addClass("item flex-width-440 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				$("#chart51").css("height", "400");
				color3 = ['#7CB5EC', '#F15C80'];
				color4 = ['#7CB5EC', '#F15C80'];
				legendNm2.push("도입률");
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 != "0" && res[i].ITM_ID == "T16") {
							categories2.push(res[i].C1_NM);
							chartDivisionData2.push(Number(res[i].DT));
						}
					}
					//3번차트
					if(res[i].PRD_DE == prdDe[0] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T14" || res[i].ITM_ID == "T15") {
							legendNm3.push(res[i].ITM_NM);
						}
					}
					for(let j=0; j<prdDe.length; j++) {
						if(res[i].PRD_DE == prdDe[j] && res[i].C1 == "0") {
							if(res[i].ITM_ID == "T14" || res[i].ITM_ID == "T15") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
					}
					//4번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0") {
						if(res[i].ITM_ID == "T14" || res[i].ITM_ID == "T15") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T14") {
							categories4.push(res[i].C1_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T15") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
					//5번차트
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T14") {
							legendNm5.push(res[i].C1_NM);
							categories5.push(res[i].C1_NM);
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0") {
						if(res[i].ITM_ID == "T15") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 21);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				categories3 = prdDe;
				chartVal4.push(chartVal4_1, chartVal4_2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP000") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				color3 = ['#7CB5EC', '#F15C80'];
				color4 = ['#7CB5EC', '#F15C80'];
				color5 = ['#7CB5EC', '#F15C80'];
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						//2번
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm2.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0" && res[i].C2 != "0") {
							overlapRemoveData2.push(res[i].C1_NM); //중복
							chartDivisionData2.push(Number(res[i].DT));
						}
						//3번차트 
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							legendNm3.push(res[i].C1_NM);
							categories3.push(res[i].C1_NM); //중복
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//5번차트 
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm5.push(res[i].C2_NM);
							categories5.push(res[i].C2_NM); //중복
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP001") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 != "00" && res[i].C2 == "1101") {
							legendNm2.push(res[i].C1_NM);
						}
						if(res[i].C1 != "00") {
							if(res[i].C2 == "1101") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartDivisionData2.push(Number(res[i].DT));
							}
							if(res[i].C2 == "1102") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartDivisionData2.push(Number(res[i].DT));
							}
						}
						//3
						if(res[i].C1 == "00" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							legendNm3.push(res[i].C2_NM);
						}
						if(res[i].C1 != "00" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							overlapRemoveData3.push(res[i].C1_NM);
							chartDivisionData3.push(Number(res[i].DT)); //1101 1102 2201 2202 2203
						}
						//4
						if(res[i].C1 == "00") {
							if(res[i].C2 == "1101" || res[i].C2 == "1102") {
								chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
							}
						}
						//5
						if(res[i].C1 != "00" && res[i].C2 == "00") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 == "00" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				categories3 = $more2DashDetail.util.overlapRemove(overlapRemoveData3);
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 2);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 11);
				selectNm1.push(res[0].C1_NM, "성별", res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP002") { //성별 근속기간별 퇴직연금제도 가입 근로자 수 
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 != "0" && res[i].C2 == "1101") {
							legendNm2.push(res[i].C1_NM);
						}
						if(res[i].C1 != "0") {
							if(res[i].C2 == "1101") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartDivisionData2.push(Number(res[i].DT));
							}
							if(res[i].C2 == "1102") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartDivisionData2.push(Number(res[i].DT));
							}
						}
						//3
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							legendNm3.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							overlapRemoveData3.push(res[i].C1_NM);
							chartDivisionData3.push(Number(res[i].DT)); //1101 1102 2201 2202 2203
						}
						//4
						if(res[i].C1 == "0") {
							if(res[i].C2 == "1101" || res[i].C2 == "1102") {
								chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
							}
						}
						//5
						if(res[i].C1 != "0" && res[i].C2 == "00") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 2);
				categories3 = $more2DashDetail.util.overlapRemove(overlapRemoveData3);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				selectNm1.push(res[0].C1_NM, "성별", res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP003") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				for(let i=0; i<res.length; i++) { //산업대분류별 퇴직연금제도 가입 근로자수
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm2.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0" && res[i].C2 != "0") {
							overlapRemoveData2.push(res[i].C1_NM);
							chartDivisionData2.push(Number(res[i].DT));
						}
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							categories3.push(res[i].C1_NM);
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							categories5.push(res[i].C2_NM);
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 21);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP004") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						//2
						if(res[i].C1 != "0" && res[i].C2 == "1101") {
							legendNm2.push(res[i].C1_NM);
						}
						if(res[i].C1 != "0") {
							if(res[i].C2 == "1101") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartDivisionData2.push(Number(res[i].DT));
							}
							if(res[i].C2 == "1102") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartDivisionData2.push(Number(res[i].DT));
							}
						}
						//3
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							legendNm3.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							overlapRemoveData3.push(res[i].C1_NM);
							chartDivisionData3.push(Number(res[i].DT)); //1101 1102 2201 2202 2203
						}
						//4
						if(res[i].C1 == "0") {
							if(res[i].C2 == "1101" || res[i].C2 == "1102") {
								chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
							}
						}
						//5
						if(res[i].C1 != "0" && res[i].C2 == "00") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].C2 != "1101" && res[i].C2 != "1102") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				categories3 = $more2DashDetail.util.overlapRemove(overlapRemoveData3);
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 2);
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 6);
				selectNm1.push(res[0].C1_NM, "성별", res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP005") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				let chartVal2_1 = new Array;
				let chartVal2_2 = new Array;
				let chartVal2_3 = new Array;
				let chartVal2_4 = new Array;
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							legendNm2.push(res[i].C1_NM);
						}
						if(res[i].C2 != "0") {
							if(res[i].C1 == "1") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartVal2_1.push(Number(res[i].DT));
							}
							if(res[i].C1 == "2") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartVal2_2.push(Number(res[i].DT));
							}
							if(res[i].C1 == "3") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartVal2_3.push(Number(res[i].DT));
							}
							if(res[i].C1 == "4") {
								overlapRemoveData2.push(res[i].C2_NM);
								chartVal2_4.push(Number(res[i].DT));
							}
						}
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							categories3.push(res[i].C1_NM);
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							categories5.push(res[i].C2_NM);
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				chartVal2.push(chartVal2_1, chartVal2_2, chartVal2_3, chartVal2_4);
				selectNm1.push(res[0].C1_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP006") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				let chartVal2_1 = new Array;
				let chartVal2_2 = new Array;
				let chartVal2_3 = new Array;
				let chartVal2_4 = new Array;
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm2.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0") {
							if(res[i].C2 == "1") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_1.push(Number(res[i].DT));
							}
							if(res[i].C2 == "2") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_2.push(Number(res[i].DT));
							}
							if(res[i].C2 == "3") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_3.push(Number(res[i].DT));
							}
							if(res[i].C2 == "4") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_4.push(Number(res[i].DT));
							}
						}
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							categories3.push(res[i].C1_NM);
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							categories5.push(res[i].C2_NM);
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				chartVal2.push(chartVal2_1, chartVal2_2, chartVal2_3, chartVal2_4);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP007") { //산업대분류별 퇴직연금제도 도입 사업장 수
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm2.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0" && res[i].C2 != "0") {
							overlapRemoveData2.push(res[i].C1_NM);
							chartDivisionData2.push(Number(res[i].DT));
						}
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							categories3.push(res[i].C1_NM);
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							categories5.push(res[i].C2_NM);
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				chartVal2 = $more2DashDetail.util.division(chartDivisionData2, 21);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP008") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				let chartVal2_1 = new Array;
				let chartVal2_2 = new Array;
				let chartVal2_3 = new Array;
				let chartVal2_4 = new Array;
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm2.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0") {
							if(res[i].C2 == "1") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_1.push(Number(res[i].DT));
							}
							if(res[i].C2 == "2") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_2.push(Number(res[i].DT));
							}
							if(res[i].C2 == "3") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_3.push(Number(res[i].DT));
							}
							if(res[i].C2 == "4") {
								overlapRemoveData2.push(res[i].C1_NM);
								chartVal2_4.push(Number(res[i].DT));
							}
						}
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							categories3.push(res[i].C1_NM);
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							categories5.push(res[i].C2_NM);
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = $more2DashDetail.util.overlapRemove(overlapRemoveData2);
				chartVal2.push(chartVal2_1, chartVal2_2, chartVal2_3, chartVal2_4);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP009") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T03") {
						chartVal2.push(Number(res[i].DT));
					}
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T03") {
							legendNm2.push(res[i].ITM_NM);
						}
						//3
						if(res[i].C2 == "00" && res[i].ITM_ID == "T01") {
							if(res[i].C1 == "1") {
								categories3.push(res[i].C1_NM);
							}
						}
						if(res[i].C2 == "00" && res[i].ITM_ID == "T01") {
							if(res[i].C1 == "2") {
								categories3.push(res[i].C1_NM);
							}
						}
						if(res[i].C2 != "00" && res[i].ITM_ID == "T01") {
							if(res[i].C1 == "1") {
								legendNm3.push(res[i].C2_NM);
								chartDivisionData3.push(Number(res[i].DT));
							}
							if(res[i].C1 == "2") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
						//4
						if(res[i].C2 == "00" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1") {
								categories4.push(res[i].C1_NM);
							}
							if(res[i].C1 == "2") {
								categories4.push(res[i].C1_NM);
							}
						}
						if(res[i].C2 != "00" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1") {
								legendNm4.push(res[i].C2_NM);
								chartDivisionData4.push(Number(res[i].DT));
							}
							if(res[i].C1 == "2") {
								chartDivisionData4.push(Number(res[i].DT));
							}
						}
						//5
						if(res[i].C2 == "00" && res[i].ITM_ID == "T01") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
						//6
						if(res[i].C2 == "00" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}
				}
				categories2 = prdDe;
				split = $more2DashDetail.util.split(chartDivisionData3, tblId);
				chartVal3 = $more2DashDetail.util.division(split, 2);
				
				split4 = $more2DashDetail.util.split(chartDivisionData4, tblId);
				chartVal4 = $more2DashDetail.util.division(split4, 2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm2.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C2_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP010") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
						chartVal2.push(Number(res[i].DT));
					}
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							legendNm2.push(res[i].ITM_NM);
						}
						//3
						if(res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							if(res[i].C1 == "1") {
								categories3.push(res[i].C1_NM);
							}
							if(res[i].C1 == "2") {
								categories3.push(res[i].C1_NM);
							}
						}
						if(res[i].C2 != "0" && res[i].ITM_ID == "T01") {
							if(res[i].C1 == "1") {
								legendNm3.push(res[i].C2_NM);
								chartDivisionData3.push(Number(res[i].DT));
							}
							if(res[i].C1 == "2") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
						//4
						if(res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1") {
								categories4.push(res[i].C1_NM);
							}
							if(res[i].C1 == "2") {
								categories4.push(res[i].C1_NM);
							}
						}
						if(res[i].C2 != "0" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1") {
								legendNm4.push(res[i].C2_NM);
								chartDivisionData4.push(Number(res[i].DT));
							}
							if(res[i].C1 == "2") {
								chartDivisionData4.push(Number(res[i].DT));
							}
						}
						//5
						if(res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
						//6
						if(res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}
				}
				categories2 = prdDe;
				
				split = $more2DashDetail.util.split(chartDivisionData3, tblId);
				chartVal3 = $more2DashDetail.util.division(split, 2);
				
				split4 = $more2DashDetail.util.split(chartDivisionData4 , tblId);
				chartVal4 = $more2DashDetail.util.division(split4, 2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm2.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C2_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP011") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
						chartVal2.push(Number(res[i].DT));
					}
					if(res[i].PRD_DE == prdDe[3]) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							legendNm2.push(res[i].ITM_NM);
						}
						//3
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							categories3.push(res[i].C1_NM);
							categories4.push(res[i].C1_NM);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T01") {
							legendNm3.push(res[i].C2_NM);
							legendNm4.push(res[i].C2_NM);
						}
						if(res[i].C2 != "0" && res[i].ITM_ID == "T01") {
							if(res[i].C1 != "0") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
						//4
						if(res[i].C2 != "0" && res[i].ITM_ID == "T03") {
							if(res[i].C1 != "1") {
								chartDivisionData4.push(Number(res[i].DT));
							}
						}
						//5
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = prdDe;
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 4);
				chartVal4 = $more2DashDetail.util.division(chartDivisionData4, 4);
				selectNm1.push(res[0].C1_NM, "대상자별", res[0].C2_OBJ_NM);
				selectNm2.push(res[0].C1_NM, "대상자별", res[0].C2_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C2_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP012") { //금융권역별 운용방법별 적립금액
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						//2
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							categories2.push(res[i].C1_NM);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm2.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0" && res[i].C2 != "0") {
							chartDivisionData2.push(Number(res[i].DT));
						}
						//3
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//4
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				split2 = $more2DashDetail.util.split(chartDivisionData2, tblId);
				chartVal2 = $more2DashDetail.util.division(split2, 5);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP013") { //제도유형별 운용방법별 적립금액
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-780 flex-height-495 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle5").addClass("item flex-width-780 flex-height-495 flex-mgL-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-780 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").hide();
				$("#charttitle5").show();
				$("#charttitle6").hide();
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5]) {
						//2
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							categories2.push(res[i].C1_NM);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							legendNm2.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0" && res[i].C2 != "0") {
							chartDivisionData2.push(Number(res[i].DT));
						}
						//3
						if(res[i].C1 != "0" && res[i].C2 == "0") {
							chartVal3.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//4
						if(res[i].C1 == "0" && res[i].C2 != "0") {
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				split2 = $more2DashDetail.util.split(chartDivisionData2, tblId);
				chartVal2 = $more2DashDetail.util.division(split2, 4);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP014") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
						chartVal2.push(Number(res[i].DT));
					}
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							legendNm2.push(res[i].ITM_NM);
						}
						//3
						if(res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								categories3.push(res[i].C1_NM);
								categories4.push(res[i].C1_NM);
							}
						}
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T05") {
							legendNm3.push(res[i].C2_NM);
							legendNm4.push(res[i].C2_NM);
						}
						if(res[i].C2 != "00" && res[i].ITM_ID == "T05") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
						//4
						if(res[i].C2 != "00" && res[i].ITM_ID == "T06") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartDivisionData4.push(Number(res[i].DT));
							}
						}
						//5
						if(res[i].C1 == "1" && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "2" && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 == "1" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "2" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = prdDe;
				split3 = $more2DashDetail.util.split(chartDivisionData3, tblId)
				split4 = $more2DashDetail.util.split(chartDivisionData4, tblId)
				
				chartVal3 = $more2DashDetail.util.division(split3, 2);
				chartVal4 = $more2DashDetail.util.division(split4, 2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm2.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C2_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP015") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
						chartVal2.push(Number(res[i].DT));
					}
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							legendNm2.push(res[i].ITM_NM);
						}
						//3
						if(res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								categories3.push(res[i].C1_NM);
								categories4.push(res[i].C1_NM);
							}
						}
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T05") {
							legendNm3.push(res[i].C2_NM);
							legendNm4.push(res[i].C2_NM);
						}
						if(res[i].C2 != "00" && res[i].ITM_ID == "T05") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
						//4
						if(res[i].C2 != "00" && res[i].ITM_ID == "T06") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartDivisionData4.push(Number(res[i].DT));
							}
						}
						//5
						if(res[i].C1 == "1" && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "2" && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 == "1" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "2" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = prdDe;
				split3 = $more2DashDetail.util.split(chartDivisionData3, tblId)
				split4 = $more2DashDetail.util.split(chartDivisionData4, tblId)
				
				chartVal3 = $more2DashDetail.util.division(split3, 2);
				chartVal4 = $more2DashDetail.util.division(split4, 2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm2.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C2_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C2_OBJ_NM);
			}else if(tblId == "DT_1RP016") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
						chartVal2.push(Number(res[i].DT));
					}
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
							legendNm2.push(res[i].ITM_NM);
						}
						//3
						if(res[i].C2 == "0" && res[i].ITM_ID == "T06") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								categories3.push(res[i].C1_NM);
								categories4.push(res[i].C1_NM);
							}
						}
						if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T05") {
							legendNm3.push(res[i].C2_NM);
							legendNm4.push(res[i].C2_NM);
						}
						if(res[i].C2 != "0" && res[i].ITM_ID == "T05") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartDivisionData3.push(Number(res[i].DT));
							}
						}
						//4
						if(res[i].C2 != "0" && res[i].ITM_ID == "T06") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartDivisionData4.push(Number(res[i].DT));
							}
						}
						//5
						if(res[i].C1 == "1" && res[i].C2 == "0" && res[i].ITM_ID == "T05") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].C1 == "2" && res[i].C2 == "0" && res[i].ITM_ID == "T05") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 == "0" && res[i].ITM_ID == "T06") {
							for(let j=1; j<7; j++) {
								if(res[i].C2 == j) {
									chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
				categories2 = prdDe;
				split3 = $more2DashDetail.util.split(chartDivisionData3, tblId)
				split4 = $more2DashDetail.util.split(chartDivisionData4, tblId)
				
				chartVal3 = $more2DashDetail.util.division(split3, 2);
				chartVal4 = $more2DashDetail.util.division(split4, 2);
				selectNm1.push(res[0].C1_NM, res[0].C2_OBJ_NM.substr(4, 6), res[0].C1_OBJ_NM);
				selectNm2.push(res[0].C1_NM, res[0].C2_OBJ_NM.substr(4, 6), res[0].C1_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C1_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP018") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "00" && res[i].C2 == "0"  && res[i].C3 == "0" && res[i].ITM_ID == "T06") {
						chartVal2.push(Number(res[i].DT));
					}
					if(res[i].PRD_DE == prdDe[5]) {
						/*if(res[i].C1 != "00" && res[i].C2 == "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
							legendNm2.push(res[i].C1_NM);
						}*/
						//3
						if(res[i].C1 == "00" && res[i].C2 != "0" && res[i].C3 != "0" && res[i].ITM_ID == "T05") {
							categories3.push(res[i].C2_NM);
							categories4.push(res[i].C2_NM);
						}
						if(res[i].C1 != "00" && res[i].C2 == "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
							legendNm3.push(res[i].C1_NM);
							legendNm4.push(res[i].C1_NM);
						}
						if(res[i].C1 != "00" && res[i].C2 != "0" && res[i].C3 != "0" && res[i].ITM_ID == "T05") {
							chartDivisionData3.push(Number(res[i].DT));
						}
						//4
						if(res[i].C1 != "00" && res[i].C2 != "0" && res[i].C3 != "0" && res[i].ITM_ID == "T06") {
							chartDivisionData4.push(Number(res[i].DT));
						}
						//5
						if(res[i].C1 == "00" && res[i].C2 != "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
							chartVal5.push([res[i].C2_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 == "00" && res[i].C2 != "0" && res[i].C3 == "0" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = prdDe;
				/*split3 = $more2DashDetail.util.split(chartDivisionData3, tblId)
				split4 = $more2DashDetail.util.split(chartDivisionData4, tblId)*/
				chartVal3 = $more2DashDetail.util.division(chartDivisionData3, 11);
				chartVal4 = $more2DashDetail.util.division(chartDivisionData4, 11);
				/*
				chartVal4 = $more2DashDetail.util.division(split4, 2);*/
				selectNm1.push(res[0].C1_NM, res[0].C2_OBJ_NM.substr(4, 6), res[0].C3_OBJ_NM, res[0].C1_OBJ_NM);
				selectNm2.push(res[0].C1_NM, res[0].C2_OBJ_NM.substr(4, 6), res[0].C3_OBJ_NM, res[0].C1_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C3_OBJ_NM, res[0].C1_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C3_OBJ_NM, res[0].C1_OBJ_NM);
			}else if(tblId == "DT_1RP032") {
				$("#charttitle1").addClass("item flex-width-780 flex-height-280");
				$("#charttitle2").addClass("item flex-width-780 flex-height-280 flex-mgL-10 charttitle");
				$("#charttitle3").addClass("item flex-width-1000 flex-height-245 charttitle");
				$("#charttitle4").addClass("item flex-width-1000 flex-height-245 flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle3_4").addClass("item-box flex-width-1000 flex-height-500");
				$("#charttitle5").addClass("item flex-width-440 flex-height-245 flex-mgL-10 charttitle");
				$("#charttitle6").addClass("item flex-width-440 flex-height-245  flex-mgL-10 flex-mgT-10 charttitle");
				$("#charttitle5_6").addClass("item-box flex-width-440 flex-height-500");
				$("#charttitle1").show();
				$("#charttitle2").show();
				$("#charttitle3").show();
				$("#charttitle4").show();
				$("#charttitle5").show();
				$("#charttitle6").show();
				let chartVal3_1 = new Array;
				let chartVal3_2 = new Array;
				let chartVal4_1 = new Array;
				let chartVal4_2 = new Array;
				for(let i=0; i<res.length; i++) {
					if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
						chartVal2.push(Number(res[i].DT));// 데이터 가져왔음
					}
					if(res[i].PRD_DE == prdDe[5]) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							legendNm2.push(res[i].ITM_NM);
						}
						//3
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							categories3.push(res[i].C1_NM);
							categories4.push(res[i].C1_NM);
						}
						if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T01") {
							legendNm3.push(res[i].C2_NM);
							legendNm4.push(res[i].C2_NM);
						}
						if(res[i].C1 != "0"&& res[i].C2 == "1" && res[i].ITM_ID == "T01") {
							chartVal3_1.push(Number(res[i].DT));
						}
						if(res[i].C1 != "0"&& res[i].C2 == "2" && res[i].ITM_ID == "T01") {
							chartVal3_2.push(Number(res[i].DT));
						}
						//4
						if(res[i].C1 != "0"&& res[i].C2 == "2" && res[i].ITM_ID == "T03") {
							chartVal4_1.push(Number(res[i].DT));
						}
						if(res[i].C1 != "0"&& res[i].C2 == "2" && res[i].ITM_ID == "T03") {
							chartVal4_2.push(Number(res[i].DT));
						}
						//5
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							chartVal5.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						//6
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
				categories2 = prdDe;
				split3 = $more2DashDetail.util.split(chartDivisionData3, tblId)
				split4 = $more2DashDetail.util.split(chartDivisionData4, tblId)
				
				/*chartVal3 = $more2DashDetail.util.division(split3, 4);
				chartVal4 = $more2DashDetail.util.division(split3, 4);*/
				chartVal3.push(chartVal3_1, chartVal3_2);
				chartVal4.push(chartVal4_1, chartVal4_2);
				selectNm1.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm2.push(res[0].C1_NM, res[0].C1_OBJ_NM, res[0].C2_OBJ_NM);
				selectNm4.push(res[0].C1_NM, res[0].C2_OBJ_NM);
				selectNm6.push(res[0].C1_NM, res[0].C2_OBJ_NM);
			}
			if(tblId == "DT_1RP101" || tblId == "DT_1RP102" || tblId == "DT_1RP103" || tblId == "DT_1RP104" || tblId == "DT_1RP105" || tblId == "DT_1RP106") {
				xAxis2.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'12px',
							fontWeight: 'bold',
						}
					},
					categories: categories2
				});
				xAxis3.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'12px',
							fontWeight: 'bold',
						}
					},
					categories: categories3
				});
				xAxis4.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'12px',
							fontWeight: 'bold',
						}
					},
					categories: categories4
				});
				xAxis5.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'12px',
							fontWeight: 'bold',
						}
					},
					categories: categories5
				});
				for(let i=0; i<legendNm2.length; i++) {
					seriesyearData2.push({
						name: legendNm2[i],
						data: chartVal2[i],
						color: '#D0D0D0',
						marker: {
							radius: 5,
							symbol: 'circle',
						},
						//dashStyle: 'longdash',
						lineWidth: 2,
						//해당년도 위 데이터 표시
						dataLabels: {
							enabled: true,
							format: '{y}%',
							//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
							style: {
								fontSize :'10px',
								color: '#000',
								fontWeight: '600',
							},
						},
						color: chartColor[i]
					});
				}
				for(let i=0; i<legendNm3.length; i++) {
					seriesyearData3.push({
						name: legendNm3[i],
						data: chartVal3[i],
						//바 상단의 수치값
						dataLabels: {
							enabled: true,
							color:'#000',
							format: '{y} 명',
							style: {
								fontSize:'10px',
								fontWeight:'600',
							},
							formatter: function() {
								if (this.y < 0) {
									return "<span style='font-weight: bold;'>" + this.y + "</span>";
								}
							}
						},
						color: chartColor[i]
					});
				}
				for(let i=0; i<legendNm4.length; i++) {
					seriesyearData4.push({
						name: legendNm4[i],
						data: chartVal4[i],
						//바 상단의 수치값
						dataLabels: {
							enabled: true,
							color:'#000',
							format: '{y} 명',
							style: {
								fontSize:'10px',
								fontWeight:'600',
							},
							formatter: function() {
								if (this.y < 0) {
									return "<span style='font-weight: bold;'>" + this.y + "</span>";
								}
							}
						},
						color: chartColor[i]
					});
				}
				seriesyearData5.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal5,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
				seriesyearData6.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal6,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px', 
						}
					},
				});
			}else if(tblId == "DT_1RP000" || tblId == "DT_1RP003" || tblId == "DT_1RP005" || tblId == "DT_1RP006" || tblId == "DT_1RP007" || tblId == "DT_1RP008" || tblId == "DT_1RP012" ||
					 tblId == "DT_1RP013") {
				xAxis2.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'11px',
							fontWeight: 'bold',
						}
					},
					categories: categories2
				});
				xAxis3.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'11px',
							fontWeight: 'bold',
						}
					},
					categories: categories3
				});
				xAxis5.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'11px',
							fontWeight: 'bold',
						}
					},
					categories: categories5
				});
				for(let i=0; i<legendNm2.length; i++) {
					seriesyearData2.push({
						name: legendNm2[i],
						data: chartVal2[i],
						color: '#D0D0D0',
						marker: {
							radius: 5,
							symbol: 'circle',
						},
						//dashStyle: 'longdash',
						lineWidth: 2,
						//해당년도 위 데이터 표시
						dataLabels: {
							enabled: false,
							format: '{y}%',
							//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
							style: {
								fontSize :'12px',
								color: '#000',
								fontWeight: '600',
							},
						},
						color: chartColor[i]
					});
				}
				seriesyearData3.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal3,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
				seriesyearData5.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal5,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
			}else if(tblId == "DT_1RP001" || tblId == "DT_1RP002" || tblId == "DT_1RP004") {
				xAxis2.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'10px',
							fontWeight: 'bold',
						}
					},
					gridLineWidth: 0,
					tickWidth: 0,
					categories: categories2
				});
				xAxis3.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'10px',
							fontWeight: 'bold',
						}
					},
					gridLineWidth: 0,
					tickWidth: 0,
					categories: categories3
				});
				xAxis4.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'11px',
							fontWeight: 'bold',
						}
					},
					categories: categories4
				});
				xAxis5.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'11px',
							fontWeight: 'bold',
						}
					},
					categories: categories5
				});
				for(let i=0; i<legendNm2.length; i++) {
					seriesyearData2.push({
						name: legendNm2[i],
						data: chartVal2[i],
						color: '#D0D0D0',
						marker: {
							radius: 5,
							symbol: 'circle',
						},
						//dashStyle: 'longdash',
						lineWidth: 1,
						//해당년도 위 데이터 표시
						dataLabels: {
							enabled: false,
							format: '{y}%',
							//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
							style: {
								fontSize :'14px',
								color: '#000',
								fontWeight: '600',
							},
						},
						color: chartColor[i]
					});
				}
				for(let i=0; i<legendNm3.length; i++) {
					seriesyearData3.push({
						name: legendNm3[i],
						data: chartVal3[i],
						color: '#D0D0D0',
						marker: {
							radius: 5,
							symbol: 'circle',
						},
						//dashStyle: 'longdash',
						lineWidth: 5,
						//해당년도 위 데이터 표시
						dataLabels: {
							enabled: false,
							format: '{y}%',
							//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
							style: {
								fontSize :'14px',
								color: '#000',
								fontWeight: '600',
							},
						},
						color: chartColor[i]
					});
				}
				seriesyearData4.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal4,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
				seriesyearData5.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal5,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
				seriesyearData6.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal6,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
					color: color5
				});
			}else if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP018" ||
					 tblId == "DT_1RP032") {
				xAxis2.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'14px',
							fontWeight: 'bold',
						}
					},
					gridLineWidth: 0,
					tickWidth: 0,
					categories: categories2
				});
				xAxis3.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'10px',
							fontWeight: 'bold',
						}
					},
					gridLineWidth: 0,
					tickWidth: 0,
					categories: categories3
				});
				xAxis4.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'10px',
							fontWeight: 'bold',
						}
					},
					gridLineWidth: 0,
					tickWidth: 0,
					categories: categories4
				});
				seriesyearData2.push({
					name: legendNm2,
					data: chartVal2,
					color: '#D0D0D0',
					marker: {
						radius: 5,
						symbol: 'circle',
					},
					//dashStyle: 'longdash',
					lineWidth: 2,
					//해당년도 위 데이터 표시
					dataLabels: {
						enabled: true,
						format: '{y} 원',
						//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						style: {
							fontSize :'14px',
							color: '#000',
							fontWeight: '600',
						},
					},
					color: ""
				});
				for(let i=0; i<legendNm3.length; i++) {
					seriesyearData3.push({
						name: legendNm3[i],
						data: chartVal3[i],
						color: '#D0D0D0',
						marker: {
							radius: 5,
							symbol: 'circle',
						},
						//dashStyle: 'longdash',
						lineWidth: 2,
						//해당년도 위 데이터 표시
						dataLabels: {
							enabled: false,
							format: '{y} 명',
							//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
							style: {
								fontSize :'14px',
								color: '#000',
								fontWeight: '600',
							},
						},
						color: chartColor[i]
					});
				}
				for(let i=0; i<legendNm4.length; i++) {
					seriesyearData4.push({
						name: legendNm4[i],
						data: chartVal4[i],
						color: '#D0D0D0',
						marker: {
							radius: 5,
							symbol: 'circle',
						},
						//dashStyle: 'longdash',
						lineWidth: 2,
						//해당년도 위 데이터 표시
						dataLabels: {
							enabled: false,
							format: '{y} 명',
							//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
							style: {
								fontSize :'14px',
								color: '#000',
								fontWeight: '600',
							},
						},
						color: chartColor[i]
					});
				}
				seriesyearData5.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal5,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
				seriesyearData6.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal6,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
			}
			
			$("#chart21").empty();
			$("#chart31").empty();
			$("#chart41").empty();
			$("#chart51").empty();
			$("#chart61").empty();
			$more2DashDetail.chart.makeChart(xAxis2, seriesyearData2, xAxis3, seriesyearData3, xAxis4, seriesyearData4, xAxis5, seriesyearData5, xAxis6, seriesyearData6, tblId);
			$more2DashDetail.util.selectChart(tblId, selectNm1, selectNm2, selectNm3, selectNm4, selectNm5, selectNm6);
			
			//셀렉트 체인지 기능
			$("select[id=selectChoice1]").change(function(){
				let value = $(this).val(); //value값 가져오기
				let selectChoiceNm1 = $("#selectChoice1 option:checked").text(); //value값 가져오기
				$('.tabArea .tabBox').css("display", "none");
				$('.tabArea .tabBox').removeClass("on");
				$('.tabArea .tabBox:eq(' + value + ')').css("display", "block");
				$('.tabArea .tabBox:eq(' + value + ')').addClass("on");
				$more2DashDetail.chart.selectChartCreate1(res, value, selectNm1, selectChoiceNm1, prdDe);
			});
			$("select[id=selectChoice2]").change(function(){
				let value = $(this).val(); //value값 가져오기
				let selectChoiceNm2 = $("#selectChoice2 option:checked").text(); //value값 가져오기
				$('.tabArea2 .tabBox').css("display", "none");
				$('.tabArea2 .tabBox').removeClass("on");
				$('.tabArea2 .tabBox:eq(' + value + ')').css("display", "block");
				$('.tabArea2 .tabBox:eq(' + value + ')').addClass("on");
				$more2DashDetail.chart.selectChartCreate2(res, value, selectNm1, selectChoiceNm2, prdDe);
			});
			
			$("select[id=selectChoice4]").change(function(){
				let value = $(this).val(); //value값 가져오기
				let selectChoiceNm4 = $("#selectChoice4 option:checked").text(); //value값 가져오기
				if(tblId == "DT_1RP101" || tblId == "DT_1RP102") {
					$('.tabArea4 .tabBox').css("display", "none");
					$('.tabArea4 .tabBox').removeClass("on");
					$('.tabArea4 .tabBox:eq(' + value + ')').css("display", "block");
					$('.tabArea4 .tabBox:eq(' + value + ')').addClass("on");
				}
				if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP018" ||
				   tblId == "DT_1RP032") {
					$('.tabArea5 .tabBox').css("display", "none");
					$('.tabArea5 .tabBox').removeClass("on");
					$('.tabArea5 .tabBox:eq(' + value + ')').css("display", "block");
					$('.tabArea5 .tabBox:eq(' + value + ')').addClass("on");
				}
				$more2DashDetail.chart.selectChartCreate4(res, value, selectNm1, selectChoiceNm4, prdDe);
			});
			$("select[id=selectChoice6]").change(function(){
				let value = $(this).val(); //value값 가져오기
				let selectChoiceNm6 = $("#selectChoice6 option:checked").text(); //value값 가져오기
				$('.tabArea6 .tabBox').css("display", "none");
				$('.tabArea6 .tabBox').removeClass("on");
				$('.tabArea6 .tabBox:eq(' + value + ')').css("display", "block");
				$('.tabArea6 .tabBox:eq(' + value + ')').addClass("on");
				$more2DashDetail.chart.selectChartCreate6(res, value, selectNm1, selectChoiceNm6, prdDe);
			});
		},
		/**
		 * @name : $more2DashDetail.chart.makeChart
		 * @description : 차트 데이터 생성
		 * @date : 2022.10.13
		 * @author : 조규환
		 * @history :
		 */
		makeChart : function(xAxis2, seriesyearData2, xAxis3, seriesyearData3, xAxis4, seriesyearData4, xAxis54, seriesyearData5, xAxis6, seriesyearData6, tblId) {
			var charts2; 
			var charts3; 
			var charts4; 
			var charts5; 
			var charts6;
			if(tblId == "DT_1RP101" || tblId == "DT_1RP102" || tblId == "DT_1RP103" || tblId == "DT_1RP104" || tblId == "DT_1RP105" || tblId == "DT_1RP106") {
				charts2 = Highcharts.chart('chart21', {
					chart : {
						type : 'column',
						width : 680
					},
					credits: {enabled: false},
					exporting : {enabled : false},
					title: {text: '',},
					subtitle: {text: '',},
					yAxis: {
						title: {text: '',},
						labels: {enabled : false},
						lineColor: '#E8E8E8'
					},
					xAxis: xAxis2, 
					legend: {
						enabled: true,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {color: '#FF0000',},
					},
					plotOptions: {
						series: {
							marker: {
								enabled: true,
								lineWidth : 2,
								lineColor:'#F15C80',
								fillColor:'#ffffff',
								fontFamily: 'Noto Sans KR',
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						zIndex: 100,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',
						},
						formatter: function () {
						},
					},
					series: seriesyearData2
					
				});
				//3번
				charts3 = Highcharts.chart('chart31', {
					chart : {
						type: 'line',//가로 column 지정은 "column"이 아닌 "bar"
						style: {fontFamily: 'Noto Sans KR',}
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : {enabled : false},
					title: {text: '',},
					legend: {
						enabled: true,
						margin: 0,
						width: 100,
						verticalAlign: 'middle',
						align: 'left',
						margin: 5,
						x:0,
						itemMarginTop: 7,
						itemStyle: {textOverflow: "ellipsis"}
					},
					xAxis: xAxis3, 
					yAxis: [{
						//y axis 왼쪽
						title: {text: ''},
						labels: {enabled: false}
					}],
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						enabled : false,
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'8px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							return '<span style="color:#EEFF2E">'  + this.series.name + '</span> : ' + this.y;
						},
					},
					plotOptions: {series: {borderRadius: 5}},
					series: seriesyearData3
				});

				//4번
				charts4 = Highcharts.chart('chart41', {
					chart : {
						type: 'column',//가로 column 지정은 "column"이 아닌 "bar"
						style: {fontFamily: 'Noto Sans KR',}
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : {enabled : false},
					title: {text: '',},
					legend: {
						enabled: true,
						margin: 0,
						width: 100,
						verticalAlign: 'middle',
						align: 'left',
						margin: 5,
						x:0,
						itemMarginTop: 7,
						itemStyle: {
							textOverflow: "ellipsis"
						}
					},
					xAxis: xAxis4, 
					yAxis: [{
						//y axis 왼쪽
						title: {text: ''},
						labels: {enabled: false}
					}],
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						enabled : false,
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'8px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							return '<span style="color:#EEFF2E">'  + this.series.name + '</span> : ' + this.y;
						},
					},
					plotOptions: {
						series: {borderRadius: 5}
					},
					series: seriesyearData4
				});
				
				charts5 = Highcharts.chart('chart51', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: 35,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							/*marker: {
								enabled: true, //마커 보이기 / 안보이기 [true : 보이기, false : 안보이기]
								lineWidth: 2, //라인 굵기
								lineColor:'#F15C80', //라인 색
								fillColor:'#ffffff'
							},
							dataLabels: {
								enabled: true, //데이터레이블 보이기/안보이기 [true : 보이기, false : 안보이기]
								allowOverlap: true //데이터레이블 겹치기/안겹치기 (안겹치기시 겹치는 데이터레이블 안보임) [true : 겹치다, false : 안겹치다]
							},*/
							events: {
								/*mouseOver: function (event) { //마우스 오버 이벤트[마우스올리면 : show(데이터레이블 보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.show();
									});
								},
								mouseOut: function (e) { //마우스 오버 이벤트[마우스내리면 : hide(데이터레이블 안보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.hide();
									});
								},*/
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '명';
						},
					},
					series: seriesyearData5
				});
				if(tblId == "DT_1RP101" || tblId == "DT_1RP102") {
					charts6 = Highcharts.chart('chart61', {
						chart : {
							renderTo: 'dounutChart',
							type: 'pie',
							marginTop: -15,
							style: {
								fontFamily: 'Noto Sans KR',
							},
						},
						credits: {enabled: false}, //highchart 워터마크 숨김처리
						exporting : { enabled : false },
						title: {
							text: '',
						},
						subtitle: {
							//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
							align: 'center',
							verticalAlign: 'middle',
							x:-65,
							y:0,
							style: {
								color: '#494949',
								fontSize: '14px',
								fontWeight:'bold',
								lineHeight: 24,
							}
						},
						events: {
							load: function () {
								let chart = this,
								legend = chart.legend;
								for (let i = 0, len = legend.allItems.length; i < len; i++) {
									(function (i) {
										let item = legend.allItems[i].legendItem;
										item.on('mouseover', function (e) {
											chart.tooltip.refresh([chart.series[0].points[i]]);
										}).on('mouseout', function (e) {
											//chart.options.tooltip.enabled = false;
											chart.render();
										});
									})(i);
								}
							}
						},
						legend: {
							enabled : true,
							width: 100,
							verticalAlign: 'middle',
							align: 'right',
							itemMarginTop: 7,
							x: 35,
							itemStyle: {
								textOverflow: "ellipsis",
								fontSize :'12px',
								color: '#333333',
								textAlign:'center',
								fontWeight: '600',
								fontFamily: 'Noto Sans KR',	
							},
							itemHoverStyle: {
								color: '#FF0000',
							},
							formatter: function() {
								$('#container .highcharts-legend').hover(function() {
									console.log("test");
									//return chart.tooltip.refresh(chart.series.data);
								});
							}
						},
						plotOptions: {
							pie: {//도넛(파이)차트 전체 옵션 지정.
								size: '60%', 
								showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
								dataLabels : {
									enabled : true,
									distance : 3
								},
								point: {
									events: {
										legendItemClick: function () {
											return false;
										},
									}
								},
							},
							series: {
								/*marker: {
									enabled: true, //마커 보이기 / 안보이기 [true : 보이기, false : 안보이기]
									lineWidth: 2, //라인 굵기
									lineColor:'#F15C80', //라인 색
									fillColor:'#ffffff'
								},
								dataLabels: {
									enabled: true, //데이터레이블 보이기/안보이기 [true : 보이기, false : 안보이기]
									allowOverlap: true //데이터레이블 겹치기/안겹치기 (안겹치기시 겹치는 데이터레이블 안보임) [true : 겹치다, false : 안겹치다]
								},*/
								events: {
									/*mouseOver: function (event) { //마우스 오버 이벤트[마우스올리면 : show(데이터레이블 보이기)]
										$.each(this.data, function(i, point){
											point.dataLabel.show();
										});
									},
									mouseOut: function (e) { //마우스 오버 이벤트[마우스내리면 : hide(데이터레이블 안보이기)]
										$.each(this.data, function(i, point){
											point.dataLabel.hide();
										});
									},*/
									legendItemClick: function () {
										return false;
									}
								}
							}
						},
						tooltip: {
							useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
							borderRadius: 10,
							backgroundColor :'#000000', 
							borderWidth:0,
							shadow: false,
							padding:10,
							style: {			 
								fontSize :'14px',  
								color: '#fff',
								fontWeight: '600',
								textAlign:'center',
							},
							shared: true,
							formatter: function() {
								return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '명';
							},
						},
						series: seriesyearData6
					});
				}
				
			}else if(tblId == "DT_1RP000" || tblId == "DT_1RP005" || tblId == "DT_1RP006" || tblId == "DT_1RP008" || tblId == "DT_1RP012" ||
					 tblId == "DT_1RP013") {
				charts2 = Highcharts.chart('chart21', {
					chart : {
						renderTo: 'horiStackedBar',
						type: 'bar',//가로 column 지정은 "column"이 아닌 "bar"
						style: {
							fontFamily: 'notoSans',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					legend: {
						enabled: true,
						itemMarginBottom: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					xAxis: xAxis2,
					yAxis: [{
						//y axis 왼쪽
						title: {
							text: ''
						},
						labels: {
							enabled: false
						},
						//crop: false,
						stackLabels: {
							/*overflow: 'allow',
							crop: false,*/
							enabled: true,//stacked bar 필수 설정 옵션.
							x:20,
							y:1,
							format: '{total} 만개',
							style: {
								fontSize: '12px',
								fontWeight: '600',
								color:'#000'
							}
						},
						gridLineWidth: 0
					}],
					plotOptions: {
						series: {
							stacking: 'normal',//stacked bar 필수 설정 옵션.(default undefined)
							//bar 너비
							pointWidth: 10,
							borderRadius: 5,
							/*borderRadiusTopLeft: 8,
							borderRadiusTopRight: 8*/
						},
						dataLabels: {
							enabled: true,
							format: '{y}',
							style: {
								fontSize:'14px',
								fontWeight:'500',
								textOutline:0,
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							var s = '';
							$.each(this.points, function(i, point) {
								s += point.series.name +': '+ point.y +'명<br/>';
							});
							return s;
						},
						shared: true
					},
					series: seriesyearData2
				});
				//3번
				charts3 = Highcharts.chart('chart31', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							/*marker: {
								enabled: true, //마커 보이기 / 안보이기 [true : 보이기, false : 안보이기]
								lineWidth: 2, //라인 굵기
								lineColor:'#F15C80', //라인 색
								fillColor:'#ffffff'
							},
							dataLabels: {
								enabled: true, //데이터레이블 보이기/안보이기 [true : 보이기, false : 안보이기]
								allowOverlap: true //데이터레이블 겹치기/안겹치기 (안겹치기시 겹치는 데이터레이블 안보임) [true : 겹치다, false : 안겹치다]
							},*/
							events: {
								/*mouseOver: function (event) { //마우스 오버 이벤트[마우스올리면 : show(데이터레이블 보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.show();
									});
								},
								mouseOut: function (e) { //마우스 오버 이벤트[마우스내리면 : hide(데이터레이블 안보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.hide();
									});
								},*/
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '명';
						},
					},
					series: seriesyearData3
				});
				//5번
				charts5 = Highcharts.chart('chart51', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							/*marker: {
								enabled: true, //마커 보이기 / 안보이기 [true : 보이기, false : 안보이기]
								lineWidth: 2, //라인 굵기
								lineColor:'#F15C80', //라인 색
								fillColor:'#ffffff'
							},
							dataLabels: {
								enabled: true, //데이터레이블 보이기/안보이기 [true : 보이기, false : 안보이기]
								allowOverlap: true //데이터레이블 겹치기/안겹치기 (안겹치기시 겹치는 데이터레이블 안보임) [true : 겹치다, false : 안겹치다]
							},*/
							events: {
								/*mouseOver: function (event) { //마우스 오버 이벤트[마우스올리면 : show(데이터레이블 보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.show();
									});
								},
								mouseOut: function (e) { //마우스 오버 이벤트[마우스내리면 : hide(데이터레이블 안보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.hide();
									});
								},*/
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '명';
						},
					},
					series: seriesyearData5
				});
			}else if(tblId == "DT_1RP001" || tblId == "DT_1RP002" || tblId == "DT_1RP004") { //성별 연령별 퇴직연금제도 가입 근로자 수
				charts2 = Highcharts.chart('chart21', {
					chart : {
						renderTo: 'horiStackedBar',
						type: 'bar',//가로 column 지정은 "column"이 아닌 "bar"
						style: {
							fontFamily: 'notoSans',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					legend: {
						enabled: true,
						itemMarginBottom: -5,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					xAxis: xAxis2,
					yAxis: [{
						//y axis 왼쪽
						title: {
							text: ''
						},
						labels: {
							enabled: false
						},
						//crop: false,
						stackLabels: {
							/*overflow: 'allow',
							crop: false,*/
							enabled: true,//stacked bar 필수 설정 옵션.
							x:20,
							y:1,
							format: '{total} 만개',
							style: {
								fontSize: '14px',
								fontWeight: '600',
								color:'#000'
							}
						},
						gridLineWidth: 0
					}],
					plotOptions: {
						series: {
							stacking: 'normal',//stacked bar 필수 설정 옵션.(default undefined)
							//bar 너비
							pointWidth: 20,
							borderRadius: 5,
							/*borderRadiusTopLeft: 8,
							borderRadiusTopRight: 8*/
						},
						dataLabels: {
							enabled: true,
							format: '{y}',
							style: {
								fontSize:'14px',
								fontWeight:'500',
								textOutline:0,
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							var s = '';
							$.each(this.points, function(i, point) {
								s += point.series.name +': '+ point.y +'만개<br/>';
							});
							return s;
						},
						shared: true
					},
					series: seriesyearData2
				});
				charts3 = Highcharts.chart('chart31', {
					chart : {
						renderTo: 'horiStackedBar',
						type: 'bar',//가로 column 지정은 "column"이 아닌 "bar"
						style: {
							fontFamily: 'notoSans',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					legend: {
						enabled: true,
						itemMarginBottom: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					xAxis: xAxis3,
					yAxis: [{
						//y axis 왼쪽
						title: {
							text: ''
						},
						labels: {
							enabled: false
						},
						//crop: false,
						stackLabels: {
							/*overflow: 'allow',
							crop: false,*/
							enabled: true,//stacked bar 필수 설정 옵션.
							x:20,
							y:1,
							format: '{total} 만개',
							style: {
								fontSize: '11px',
								fontWeight: '600',
								color:'#000'
							}
						},
						gridLineWidth: 0
					}],
					plotOptions: {
						series: {
							stacking: 'normal',//stacked bar 필수 설정 옵션.(default undefined)
							//bar 너비
							pointWidth: 10,
							borderRadius: 5,
							/*borderRadiusTopLeft: 8,
							borderRadiusTopRight: 8*/
						},
						dataLabels: {
							enabled: true,
							format: '{y}',
							style: {
								fontSize:'14px',
								fontWeight:'500',
								textOutline:0,
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							var s = '';
							$.each(this.points, function(i, point) {
								s += point.series.name +': '+ point.y +'만개<br/>';
							});
							return s;
						},
						shared: true
					},
					series: seriesyearData3
				});
				//4번
				charts4 = Highcharts.chart('chart41', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							events: {
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData4
				});
				//5번
				charts5 = Highcharts.chart('chart51', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							events: {
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData5
				});
				//6번
				charts6 = Highcharts.chart('chart61', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							events: {
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData6
				});
			}else if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP018" || 
					 tblId == "DT_1RP032") {
				charts2 = Highcharts.chart('chart21', {
					chart : {
						type : 'line',
						width : 680
					},
					credits: {
						enabled: false
					},
					exporting : {
						enabled : false
					},
					title: {
						text: '',
					},
					subtitle: {
						text: '',
					},
					yAxis: {
						title: {
						  text: '',
						},
						labels: {
							enabled : false
						},
						lineColor: '#E8E8E8'
					},
					xAxis: xAxis2, 
					legend: {
						enabled: false,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					plotOptions: {
						series: {
							marker: {
								enabled: true,
								lineWidth : 2,
								lineColor:'#F15C80',
								fillColor:'#ffffff',
								fontFamily: 'Noto Sans KR',
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						zIndex: 100,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',
						},
						formatter: function () {
						},
					},
					series: seriesyearData2
					
				});
				charts2 = Highcharts.chart('chart31', {
					chart : {
						renderTo: 'horiStackedBar',
						type: 'bar',//가로 column 지정은 "column"이 아닌 "bar"
						style: {
							fontFamily: 'notoSans',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					legend: {
						enabled: true,
						itemMarginBottom: -3,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'11px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					xAxis: xAxis3,
					yAxis: [{
						//y axis 왼쪽
						title: {
							text: ''
						},
						labels: {
							enabled: false
						},
						//crop: false,
						stackLabels: {
							/*overflow: 'allow',
							crop: false,*/
							enabled: true,//stacked bar 필수 설정 옵션.
							x:20,
							y:1,
							format: '{total} 만개',
							style: {
								fontSize: '12px',
								fontWeight: '600',
								color:'#000'
							}
						},
						gridLineWidth: 0
					}],
					plotOptions: {
						series: {
							stacking: 'normal',//stacked bar 필수 설정 옵션.(default undefined)
							//bar 너비
							pointWidth: 7,
							borderRadius: 2,
							/*borderRadiusTopLeft: 8,
							borderRadiusTopRight: 8*/
						},
						dataLabels: {
							enabled: false,
							format: '{y}',
							style: {
								fontSize:'14px',
								fontWeight:'500',
								textOutline:0,
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							var s = '';
							$.each(this.points, function(i, point) {
								s += point.series.name +': '+ point.y +'만개<br/>';
							});
							return s;
						},
						shared: true
					},
					series: seriesyearData3
				});
				//4
				charts2 = Highcharts.chart('chart41', {
					chart : {
						renderTo: 'horiStackedBar',
						type: 'bar',//가로 column 지정은 "column"이 아닌 "bar"
						style: {
							fontFamily: 'notoSans',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					legend: {
						enabled: true,
						itemMarginBottom: -3,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'11px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					xAxis: xAxis4,
					yAxis: [{
						//y axis 왼쪽
						title: {
							text: ''
						},
						labels: {
							enabled: false
						},
						//crop: false,
						stackLabels: {
							/*overflow: 'allow',
							crop: false,*/
							enabled: true,//stacked bar 필수 설정 옵션.
							x:20,
							y:1,
							format: '{total} 만원',
							style: {
								fontSize: '12px',
								fontWeight: '600',
								color:'#000'
							}
						},
						gridLineWidth: 0
					}],
					plotOptions: {
						series: {
							stacking: 'normal',//stacked bar 필수 설정 옵션.(default undefined)
							//bar 너비
							pointWidth: 7,
							borderRadius: 2,
							/*borderRadiusTopLeft: 8,
							borderRadiusTopRight: 8*/
						},
						dataLabels: {
							enabled: true,
							format: '{y}',
							style: {
								fontSize:'14px',
								fontWeight:'500',
								textOutline:0,
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							var s = '';
							$.each(this.points, function(i, point) {
								s += point.series.name +': '+ point.y +'만개<br/>';
							});
							return s;
						},
						shared: true
					},
					series: seriesyearData4
				});
				charts5 = Highcharts.chart('chart51', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							events: {
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData5
				});
				charts6 = Highcharts.chart('chart61', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							events: {
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData6
				});
			}else if(tblId == "DT_1RP003" || tblId == "DT_1RP007") {
				charts2 = Highcharts.chart('chart31', {
					chart : {
						renderTo: 'horiStackedBar',
						type: 'bar',//가로 column 지정은 "column"이 아닌 "bar"
						style: {
							fontFamily: 'notoSans',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					legend: {
						enabled: true,
						itemMarginBottom: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
					},
					xAxis: xAxis2,
					yAxis: [{
						//y axis 왼쪽
						title: {
							text: ''
						},
						labels: {
							enabled: false
						},
						//crop: false,
						stackLabels: {
							/*overflow: 'allow',
							crop: false,*/
							enabled: true,//stacked bar 필수 설정 옵션.
							x:20,
							y:1,
							format: '{total} 만개',
							style: {
								fontSize: '12px',
								fontWeight: '600',
								color:'#000'
							}
						},
						gridLineWidth: 0
					}],
					plotOptions: {
						series: {
							stacking: 'normal',//stacked bar 필수 설정 옵션.(default undefined)
							//bar 너비
							pointWidth: 10,
							borderRadius: 5,
							/*borderRadiusTopLeft: 8,
							borderRadiusTopRight: 8*/
						},
						dataLabels: {
							enabled: true,
							format: '{y}',
							style: {
								fontSize:'14px',
								fontWeight:'500',
								textOutline:0,
							},
						},
					},
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'14px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							var s = '';
							$.each(this.points, function(i, point) {
								s += point.series.name +': '+ point.y +'만개<br/>';
							});
							return s;
						},
						shared: true
					},
					series: seriesyearData2
				});
				//3번
				charts3 = Highcharts.chart('chart21', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							/*marker: {
								enabled: true, //마커 보이기 / 안보이기 [true : 보이기, false : 안보이기]
								lineWidth: 2, //라인 굵기
								lineColor:'#F15C80', //라인 색
								fillColor:'#ffffff'
							},
							dataLabels: {
								enabled: true, //데이터레이블 보이기/안보이기 [true : 보이기, false : 안보이기]
								allowOverlap: true //데이터레이블 겹치기/안겹치기 (안겹치기시 겹치는 데이터레이블 안보임) [true : 겹치다, false : 안겹치다]
							},*/
							events: {
								/*mouseOver: function (event) { //마우스 오버 이벤트[마우스올리면 : show(데이터레이블 보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.show();
									});
								},
								mouseOut: function (e) { //마우스 오버 이벤트[마우스내리면 : hide(데이터레이블 안보이기)]
									$.each(this.data, function(i, point){
										point.dataLabel.hide();
									});
								},*/
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData3
				});
				//5번
				charts5 = Highcharts.chart('chart51', {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							events: {
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData5
				});
			}
		},
		/**
		 * @name : $more2DashDetail.chart.selectChartCreate1
		 * @description : 셀렉트 차트1 데이터 생성
		 * @date : 2022.10.17
		 * @author : 조규환
		 * @history :
		 */
		selectChartCreate1 : function(res, value, selectNm1, selectChoiceNm, prdDe) {
			//res: 데이터, value: select value, selectNm1: select option name, selectChoiceNm: 선택한 select option, prdDe: 년도
			console.log(res);
			console.log(value);
			console.log(selectNm1);
			console.log(selectChoiceNm);
			console.log(prdDe);
			let tblId = res[0].TBL_ID;
			let c1 = new Array;
			let c2 = new Array;
			let charts1 = "";
			let count = "";
			let format = "";
			let categories = "";
			let divisionData = new Array;
			let overlapRemoveDataDt = new Array;
			let dataNm = new Array;
			let dataDt = new Array;
			let chartData = new Array;
			console.log(prdDe[5]);
			for(let i=1; i<7; i++) {
				$(".chart1"+i).empty();
			}
			if(tblId == "DT_1RP101") {
				categories = prdDe;
				format = "{y} %";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['가입률'];
					//1번차트
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					c1 = ['1', '2'];
					dataNm = ['남자', '여자'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == c1[0] && res[i].C2 == "00" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].C1 == c1[1] && res[i].C2 == "00" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T13") {
							if(res[i].PRD_DE == prdDe[5]) {
								dataNm.push(res[i].C2_NM);
							}
							divisionData.push(Number(res[i].DT));
						}
					}
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
				console.log(dataNm);
				console.log(dataDt);
			}else if(tblId == "DT_1RP102") { //요깃
				categories = prdDe;
				format = "{y} %";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['가입률'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별"){
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "1" && res[i].C2 == "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
						if(res[i].C1 == "2" && res[i].C2 == "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "근속기간별"){
					let c2Count = 0;
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<6; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T13") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}	
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP103") {
				categories = prdDe;
				format = "{y} %";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['가입률'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "종사자규모별"){
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<6; l++) {
							if(res[i].C1 == l && res[i].ITM_ID == "T13") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}	
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP104") {
				categories = prdDe;
				format = "{y} %";
				if(selectChoiceNm == "합계") {
					count = "1";
					dataNm = ['가입률'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "산업분류별"){
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP105") {
				categories = prdDe;
				format = "{y} %";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['가입률'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "종사자규모별"){
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].ITM_ID == "T13") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP106") {
				categories = prdDe;
				format = "{y} %";
				if(selectChoiceNm == "합계") {
					count = "1";
					dataNm = ['가입률'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].ITM_ID == "T16") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "산업분류별"){
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].ITM_ID == "T16") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP000") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['근로자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "1" && res[i].C2 == "0" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
						if(res[i].C1 == "2" && res[i].C2 == "0" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP001") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['근로자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "00" && res[i].C2 == "00" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "00" && res[i].C2 == "1101" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C2_NM);
						}
						if(res[i].C1 == "00" && res[i].C2 == "1102" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C2_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<13; l++) {
							if(res[i].C1 == "0"+l && res[i].C2 == "00" && res[i].ITM_ID == "T001") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP002") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['근로자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "1101" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C2_NM);
						}
						if(res[i].C1 == "0" && res[i].C2 == "1102" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C2_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "근속기간별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<7; l++) {
							if(res[i].C1 == l && res[i].C2 == "00" && res[i].ITM_ID == "T001") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP003") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "합계") {
					count = "1";
					dataNm = ['근로자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "산업분류별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP004") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['근로자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "1101" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C2_NM);
						}
						if(res[i].C1 == "0" && res[i].C2 == "1102" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C2_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "가입기간별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<7; l++) {
							if(res[i].C1 == l && res[i].C2 == "00" && res[i].ITM_ID == "T001") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP005") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['근로자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "종사자규모별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<8; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T01") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP006") {
				categories = prdDe;
				format = "{y} 개";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['도입 사업장 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T02") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "종사자규모별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<8; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].ITM_ID == "T02") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP007") {
				categories = prdDe;
				format = "{y} 개";
				if(selectChoiceNm == "합계") {
					count = "1";
					dataNm = ['도입 사업장 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T02") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "산업분류별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T02") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP008") {
				categories = prdDe;
				format = "{y} 개";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['도입 사업장 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T001") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "도입기간별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<6; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].ITM_ID == "T001") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP009") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['가입자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "1" && res[i].C2 == "00" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
						if(res[i].C1 == "2" && res[i].C2 == "00" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<12; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T01") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP010") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['가입자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "1" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
						if(res[i].C1 == "2" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
							overlapRemoveDataDt.push(res[i].C1_NM);
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "가입기간별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<12; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T01") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP011") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['가입자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "대상자별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<5; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<3; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T01") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 4);
			}else if(tblId == "DT_1RP012") {
				categories = prdDe;
				format = "{y} 원";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['적립금액'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "금융권역별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<6; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "운용방법별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<4; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T03") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP013") {
				categories = prdDe;
				format = "{y} 원";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['적립금액'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "제도유형별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<6; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "운용방법별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<4; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T03") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP014") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['이전자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<3; l++) {
							if(res[i].C1 == l && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<12; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP015") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['해지자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<3; l++) {
							if(res[i].C1 == l && res[i].C2 == "00" && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<12; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP016") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['인출자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T05") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "사유별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<3; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<7; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP018") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['인출자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "00" && res[i].C2 == "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "사유별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<7; l++) {
							if(res[i].C1 == "00" && res[i].C2 == l && res[i].C3 == "0" && res[i].ITM_ID == "T05") { 
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<7; l++) {
							if(res[i].C1 == "00" && res[i].C2 == "0" && res[i].C3 == l && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C3_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "연령별") {
					count = "4";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<12; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP032") {
				categories = prdDe;
				format = "{y} 명";
				if(selectChoiceNm == "계") {
					count = "1";
					dataNm = ['예외자 수'];
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T01") {
							divisionData.push(Number(res[i].DT));
						}
					}
				}else if(selectChoiceNm == "IRP이전예외사유별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<5; l++) {
							if(res[i].C1 == l && res[i].C2 == "0" && res[i].ITM_ID == "T01") { 
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C1_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}else if(selectChoiceNm == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						for(let l=1; l<3; l++) {
							if(res[i].C1 == "0" && res[i].C2 == l && res[i].ITM_ID == "T01") { 
								divisionData.push(Number(res[i].DT));
								overlapRemoveDataDt.push(res[i].C2_NM);
							}
						}
					}
					dataNm = $more2DashDetail.util.overlapRemove(overlapRemoveDataDt);
				}
				dataDt = $more2DashDetail.util.division(divisionData, 3);
			}
			for(let i=0; i<dataNm.length; i++) {
				chartData.push({
					name: dataNm[i],
					data: dataDt[i],
					color: '#D0D0D0',
					marker: {
						radius: 5,
						symbol: 'circle',
					},
					//dashStyle: 'longdash',
					lineWidth: 2,
					//해당년도 위 데이터 표시
					dataLabels: {
						enabled: true,
						format: format,
						style: {
							fontSize :'14px',
							color: '#000',
							fontWeight: '600',
						},
					},
				});
			}
			console.log(chartData);
			charts1 = "charts1"+count;
			charts1 = Highcharts.chart('chart1'+count, {
				chart : {
					type : 'line',
				},
				credits: {
					enabled: false
				},
				exporting : {
					enabled : false
				},
				title: {
					text: '',
				},
				subtitle: {
					text: '',
				},
				yAxis: {
					title: {
					  text: '',
					},
					labels: {
						enabled : false
					},
					lineColor: '#E8E8E8'
				},
				xAxis: {
					labels: {
						style: {
							color: '#494949',
							fontSize:'14px',
							fontWeight: 'bold',
						}
					},
					categories: categories
				},
				legend: {
					enabled: true,
					itemStyle: {
						textOverflow: "ellipsis",
						fontSize :'12px',
						color: '#333333',
						textAlign:'center',
						fontWeight: '600',
						fontFamily: 'Noto Sans KR',	
					},
					itemHoverStyle: {
						color: '#FF0000',
					},
				},
				plotOptions: {
					series: {
						marker: {
							enabled: true,
							lineWidth : 2,
							lineColor:'#F15C80',
							fillColor:'#ffffff',
							fontFamily: 'Noto Sans KR',
						},
					},
				},
				tooltip: {
					useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
					borderRadius: 10,
					backgroundColor :'#000000',
					borderWidth:0,
					shadow: false,
					padding:10,
					zIndex: 100,
					style: {
						fontSize :'14px',
						color: '#fff',
						textAlign:'center',
						fontWeight: '600',
						fontFamily: 'Noto Sans KR',
					},
					formatter: function () {
					},
				},
				series: chartData 
			});
		},
		/**
		 * @name : $more2DashDetail.chart.selectChartCreate2
		 * @description : 셀렉트 차트2 데이터 생성
		 * @date : 2022.10.26
		 * @author : 조규환
		 * @history :
		 */
		selectChartCreate2 : function(res, value, selectNm1, selectChoiceNm2, prdDe) { //2번차트 셀렉트
			let count = "";
			let legendNm2 = new Array;
			let chartVal2 = new Array;
			let xAxis2 = new Array;
			let seriesyearData2 = new Array;
			let categories2 = new Array;
			let divisionData = new Array;
			if(tblId == "DT_1RP009") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T03") {
							chartVal2.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "00" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C2 == "00" && res[i].ITM_ID == "T03") {
								if(res[i].C1 == "1") {
									legendNm2.push(res[i].C1_NM);
								}
								if(res[i].C1 == "2") {
									legendNm2.push(res[i].C1_NM);
								}
							}
						}
					}
					chartVal2 = $more2DashDetail.util.division(divisionData, 6);
				}else if(selectChoiceNm2 == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].ITM_ID == "T03") {
								for(let j=1; j<12; j++) {
									if(res[i].C2 == j) {
										legendNm2.push(res[i].C1_NM);
									}
								}
							}
						}
					}
					chartVal2 = $more2DashDetail.util.division(divisionData, 6);
				}
			}else if(tblId == "DT_1RP010") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "가입기간별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP011") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[3]) {
							if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "대상자별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[3]) {
							if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[3]) {
							if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(divisionData, 4);
			}else if(tblId == "DT_1RP014") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 != "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP015") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 != "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "연령별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 != "00" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP016") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "사유별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP018") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "00" && res[i].C2 == "0"  && res[i].C3 == "0" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 != "00" && res[i].C2 == "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
								legendNm2.push(res[i].C1_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "사유별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "00" && res[i].C2 != "0"  && res[i].C3 == "0" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "00" && res[i].C2 != "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
								legendNm2.push(res[i].C2_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "00" && res[i].C2 == "0"  && res[i].C3 != "0" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "00" && res[i].C2 == "0" && res[i].C3 != "0" && res[i].ITM_ID == "T05") {
								legendNm2.push(res[i].C3_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "연령별") {
					count = "4";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "00" && res[i].C2 == "0"  && res[i].C3 == "0" && res[i].ITM_ID == "T06") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 != "00" && res[i].C2 == "0" && res[i].C3 == "0" && res[i].ITM_ID == "T05") {
								legendNm2.push(res[i].C1_NM);
							}
						}
					}
				}
				chartVal2 = $more2DashDetail.util.division(divisionData, 6);
			}else if(tblId == "DT_1RP032") {
				categories2 = prdDe;
				if(selectChoiceNm2 == "계") {
					count = "1";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "IRP이전예외사유별") {
					count = "2";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}else if(selectChoiceNm2 == "성별") {
					count = "3";
					for(let i=0; i<res.length; i++) {
						if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T03") {
							divisionData.push(Number(res[i].DT));
						}
						if(res[i].PRD_DE == prdDe[5]) {
							if(res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T03") {
								legendNm2.push(res[i].ITM_NM);
							}
						}
					}
				}
			}
			chartVal2 = $more2DashDetail.util.division(divisionData, 3);
			xAxis2.push({
				labels: {
					style: {
						color: '#494949',
						fontSize:'14px',
						fontWeight: 'bold',
					}
				},
				gridLineWidth: 0,
				tickWidth: 0,
				categories: categories2
			});
			for(let i=0; i<chartVal2.length; i++) {
				seriesyearData2.push({
					name: legendNm2[i],
					data: chartVal2[i],
					color: '#D0D0D0',
					marker: {
						radius: 5,
						symbol: 'circle',
					},
					//dashStyle: 'longdash',
					lineWidth: 2,
					//해당년도 위 데이터 표시
					dataLabels: {
						enabled: true,
						format: '{y} 원',
						//format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						style: {
							fontSize :'14px',
							color: '#000',
							fontWeight: '600',
						},
					},
					color: ""
				});
			}
			
			
			var charts2 = "charts2"+count;
			charts2 = Highcharts.chart('chart2'+count, {
				chart : {
					type : 'line',
					width : 680
				},
				credits: {
					enabled: false
				},
				exporting : {
					enabled : false
				},
				title: {
					text: '',
				},
				subtitle: {
					text: '',
				},
				yAxis: {
					title: {
					  text: '',
					},
					labels: {
						enabled : false
					},
					lineColor: '#E8E8E8'
				},
				xAxis: xAxis2, 
				legend: {
					enabled: false,
					itemStyle: {
						textOverflow: "ellipsis",
						fontSize :'12px',
						color: '#333333',
						textAlign:'center',
						fontWeight: '600',
						fontFamily: 'Noto Sans KR',	
					},
					itemHoverStyle: {
						color: '#FF0000',
					},
				},
				plotOptions: {
					series: {
						marker: {
							enabled: true,
							lineWidth : 2,
							lineColor:'#F15C80',
							fillColor:'#ffffff',
							fontFamily: 'Noto Sans KR',
						},
					},
				},
				tooltip: {
					useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
					borderRadius: 10,
					backgroundColor :'#000000',
					borderWidth:0,
					shadow: false,
					padding:10,
					zIndex: 100,
					style: {
						fontSize :'14px',
						color: '#fff',
						textAlign:'center',
						fontWeight: '600',
						fontFamily: 'Noto Sans KR',
					},
					formatter: function () {
					},
				},
				series: seriesyearData2
			});
		},
		/**
		 * @name : $more2DashDetail.chart.selectChartCreate4
		 * @description : 셀렉트 차트4 데이터 생성
		 * @date : 2022.10.17
		 * @author : 조규환
		 * @history :
		 */
		selectChartCreate4 : function(res, value, selectNm1, selectChoiceNm4, prdDe) {
			let tblId = res[0].TBL_ID;
			let legendNm4 = new Array;
			let categories = new Array;
			let chartVal4 = new Array
			let chartVal4_1 = new Array
			let chartVal4_2 = new Array
			let seriesyearData4 = new Array;
			let xAxis4 = new Array;
			let count = "";
			console.log(selectChoiceNm4);
			if(tblId == "DT_1RP101") {
				if(selectChoiceNm4 == "계") {
					count = '1';
					c1 = '0';
				}else if(selectChoiceNm4 == "남자") {
					count = '2';
					c1 = '1';
				}else if(selectChoiceNm4 == "여자") {
					count = '3';
					c1 = '2';
				}
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == c1 && res[i].C2 == "00") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == c1 && res[i].C2 != "00") {
						if(res[i].ITM_ID == "T11") {
							categories.push(res[i].C2_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T12") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
				}
			}else if(tblId == "DT_1RP102") { 
				if(selectChoiceNm4 == "계") {
					count = '1';
					c1 = '0';
				}else if(selectChoiceNm4 == "남자") {
					count = '2';
					c1 = '1';
				}else if(selectChoiceNm4 == "여자") {
					count = '3';
					c1 = '2';
				}
				for(let i=0; i<res.length; i++) {
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == c1 && res[i].C2 == "0") {
						if(res[i].ITM_ID == "T11" || res[i].ITM_ID == "T12") {
							legendNm4.push(res[i].ITM_NM); //categories4
						}
					}
					if(res[i].PRD_DE == prdDe[5] && res[i].C1 == c1 && res[i].C2 != "0") {
						if(res[i].ITM_ID == "T11") {
							categories.push(res[i].C2_NM);
							chartVal4_1.push(Number(res[i].DT));
						}else if(res[i].ITM_ID == "T12") {
							chartVal4_2.push(Number(res[i].DT));
						}
					}
				}
			}else if(tblId == "DT_1RP009") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T01"  && res[i].C2 == "00") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T01"  && res[i].C1 == "0") {
							for(let l=1; l<12; l++) {
								if(res[i].C2 == l) {
									chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
				console.log(legendNm4);
			}else if(tblId == "DT_1RP010") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T01"  && res[i].C2 == "0") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "가입기간별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T01"  && res[i].C1 == "0") {
							for(let l=1; l<7; l++) {
								if(res[i].C2 == l) {
									chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
			}else if(tblId == "DT_1RP011") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[3] && res[i].ITM_ID == "T01"  && res[i].C2 == "0") {
							if(res[i].C1 == "1" || res[i].C1 == "2" || res[i].C1 == "3" || res[i].C1 == "4") {
								chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "성별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[3] && res[i].ITM_ID == "T01"  && res[i].C1 == "0") {
							for(let l=1; l<3; l++) {
								if(res[i].C2 == l) {
									chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
			}else if(tblId == "DT_1RP014") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C2 == "00") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C1 == "0") {
							for(let l=1; l<12; l++) {
								if(res[i].C2 == l) {
									chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
			}else if(tblId == "DT_1RP015") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C2 == "00") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C1 == "0") {
							for(let l=1; l<12; l++) {
								if(res[i].C2 == l) {
									chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
			}else if(tblId == "DT_1RP016") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C2 == "0") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "성별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C1 == "0") {
							for(let l=1; l<7; l++) {
								if(res[i].C2 == l) {
									chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
			}else if(tblId == "DT_1RP018") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C1 == "00" && res[i].C2 != "0" && res[i].C3 == "0") {
							chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "성별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C1 == "00" && res[i].C2 == "0") {
							if(res[i].C3 == "1" || res[i].C3 == "2") {
								chartVal4.push([res[i].C3_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = '3';
						if(res[i].PRD_DE == prdDe[5] && res[i].ITM_ID == "T05"  && res[i].C2 == "0" && res[i].C3 == "0") {
							for(let l=1; l<12; l++) {
								if(res[i].C1 == l) {
									chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
								}
							}
						}
					}
				}
			}else if(tblId == "DT_1RP032") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = '1';
						if(res[i].PRD_DE == prdDe[2] && res[i].ITM_ID == "T01" && res[i].C2 == "0") {
							if(res[i].C1 == "1" || res[i].C1 == "2" || res[i].C1 == "3" || res[i].C1 == "4") {}
							chartVal4.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "성별") {
						count = '2';
						if(res[i].PRD_DE == prdDe[2] && res[i].ITM_ID == "T01" && res[i].C1 == "0") {
							if(res[i].C2 == "1" || res[i].C2 == "2") {
								chartVal4.push([res[i].C2_NM, Number(res[i].DT)]);
							}
						}
					}
				}
			}
			if(tblId == "DT_1RP101" || tblId == "DT_1RP102") {
				chartVal4.push(chartVal4_1, chartVal4_2); //오일
				
				xAxis4.push({
					labels: {
						style: {
							color: '#494949',
							fontSize:'14px',
							fontWeight: 'bold',
						}
					},
					categories: categories
				});
				
				for(let i=0; i<legendNm4.length; i++) {
					seriesyearData4.push({
						name: legendNm4[i],
						data: chartVal4[i],
						//바 상단의 수치값
						dataLabels: {
							enabled: true,
							color:'#000',
							format: '{y} 명',
							style: {
								fontSize:'10px',
								fontWeight:'600',
							},
							formatter: function() {
								if (this.y < 0) {
									return "<span style='font-weight: bold;'>" + this.y + "</span>";
								}
							}
						},
						color: '#F15C80'
					});
				}
			}else if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP018" ||
					 tblId == "DT_1RP032") {
				seriesyearData4.push({
					type: 'pie',
					//name: chartNm,
					innerSize: '80%',
					data: chartVal4,
					dataLabels: {
						enabled: true,
						format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
						align: 'center',
						//세로 위치 지정
						style: {
							fontSize: '14px'
						}
					},
				});
			}
			console.log(seriesyearData4);
			console.log(count);
			var charts4 = "charts4"+count;
			if(tblId == "DT_1RP101" || tblId == "DT_1RP102") {
				charts4 = Highcharts.chart('chart4'+count, {
					chart : {
						type: 'column',//가로 column 지정은 "column"이 아닌 "bar"
						style: {
							fontFamily: 'Noto Sans KR',
						}
					},
					credits: {
						enabled: false
					}, //highchart 워터마크 숨김처리
					exporting : {
						enabled : false 
					},
					title: {
						text: '',
					},
					legend: {
						enabled: true,
						margin: 0,
						width: 100,
						verticalAlign: 'middle',
						align: 'left',
						margin: 5,
						x:0,
						itemMarginTop: 7,
						itemStyle: {
							textOverflow: "ellipsis"
						}
					},
					xAxis: xAxis4, 
					yAxis: [{
						//y axis 왼쪽
						title: {
							text: ''
						},
						labels: {
							enabled: false
						}
					}],
					tooltip: {
						useHTML: true,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						enabled : false,
						borderRadius: 10,
						backgroundColor :'#000000',
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {
							fontSize :'8px',
							color: '#fff',
							textAlign:'center',
							fontWeight: '600',
						},
						formatter: function() {
							return '<span style="color:#EEFF2E">'  + this.series.name + '</span> : ' + this.y;
						},
					},
					plotOptions: {
						series: {
							borderRadius: 5
						}
					},
					series: seriesyearData4
				});
			}else if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP018" ||
					 tblId == "DT_1RP032") {
				charts4 = Highcharts.chart('chart5'+count, {
					chart : {
						renderTo: 'dounutChart',
						type: 'pie',
						marginTop: -15,
						style: {
							fontFamily: 'Noto Sans KR',
						},
					},
					credits: {enabled: false}, //highchart 워터마크 숨김처리
					exporting : { enabled : false },
					title: {
						text: '',
					},
					subtitle: {
						//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
						align: 'center',
						verticalAlign: 'middle',
						x:-65,
						y:0,
						style: {
							color: '#494949',
							fontSize: '14px',
							fontWeight:'bold',
							lineHeight: 24,
						}
					},
					events: {
						load: function () {
							let chart = this,
							legend = chart.legend;
							for (let i = 0, len = legend.allItems.length; i < len; i++) {
								(function (i) {
									let item = legend.allItems[i].legendItem;
									item.on('mouseover', function (e) {
										chart.tooltip.refresh([chart.series[0].points[i]]);
									}).on('mouseout', function (e) {
										//chart.options.tooltip.enabled = false;
										chart.render();
									});
								})(i);
							}
						}
					},
					legend: {
						enabled : true,
						width: 100,
						verticalAlign: 'middle',
						align: 'right',
						itemMarginTop: 7,
						x: -15,
						itemStyle: {
							textOverflow: "ellipsis",
							fontSize :'12px',
							color: '#333333',
							textAlign:'center',
							fontWeight: '600',
							fontFamily: 'Noto Sans KR',	
						},
						itemHoverStyle: {
							color: '#FF0000',
						},
						formatter: function() {
						}
					},
					plotOptions: {
						pie: {//도넛(파이)차트 전체 옵션 지정.
							size: '60%', 
							showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
							dataLabels : {
								enabled : true,
								distance : 3
							},
							point: {
								events: {
									legendItemClick: function () {
										return false;
									},
								}
							},
						},
						series: {
							events: {
								legendItemClick: function () {
									return false;
								}
							}
						}
					},
					tooltip: {
						useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
						borderRadius: 10,
						backgroundColor :'#000000', 
						borderWidth:0,
						shadow: false,
						padding:10,
						style: {			 
							fontSize :'14px',  
							color: '#fff',
							fontWeight: '600',
							textAlign:'center',
						},
						shared: true,
						formatter: function() {
							return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
						},
					},
					series: seriesyearData4
				});
			}
		},
		/**
		 * @name : $more2DashDetail.chart.selectChartCreate6
		 * @description : 셀렉트 차트6 데이터 생성
		 * @date : 2022.10.27
		 * @author : 조규환
		 * @history :
		 */
		selectChartCreate6 : function(res, value, selectNm1, selectChoiceNm4, prdDe) {
			let count = "";
			let chartVal6 = new Array;
			let seriesyearData6 = new Array;
			if(tblId == "DT_1RP009") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].C2 == "00" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].ITM_ID == "T03") {
							for(let j=1; j<12; j++) {
								if(res[i].C2 == j) {
									chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
								}	
							}
						}
					}
				}
			}else if(tblId == "DT_1RP010") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].PRD_DE == prdDe[5] && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							if(res[i].C1 == "1" || res[i].C1 == "2") {
								chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
							}
						}
					}else if(selectChoiceNm4 == "가입기간별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].ITM_ID == "T03") {
							for(let j=1; j<7; j++) {
								if(res[i].C2 == j) {
									chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
								}	
							}
						}
					}
				}
			}else if(tblId == "DT_1RP011") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "성별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].ITM_ID == "T03") {
							for(let j=1; j<3; j++) {
								if(res[i].C2 == j) {
									chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
								}	
							}
						}
					}
				}
			}else if(tblId == "DT_1RP014") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].ITM_ID == "T06") {
							for(let j=1; j<12; j++) {
								if(res[i].C2 == j) {
									chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
								}	
							}
						}
					}
				}
			}else if(tblId == "DT_1RP015") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "1" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "2" && res[i].C2 == "00" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].ITM_ID == "T06") {
							for(let j=1; j<12; j++) {
								if(res[i].C2 == j) {
									chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
								}	
							}
						}
					}
				}
			}else if(tblId == "DT_1RP016") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].ITM_ID == "T06") {
							for(let j=1; j<7; j++) {
								if(res[i].C2 == j) {
									chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
								}
							}
						}
					}else if(selectChoiceNm4 == "성별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "1" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "2" && res[i].C2 == "0" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
			}else if(tblId == "DT_1RP018") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "00" && res[i].C2 != "0" && res[i].C3 == "0" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "성별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "00" && res[i].C2 == "0" && res[i].C3 != "0" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C3_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "연령별") {
						count = "3";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "00" && res[i].C2 == "0" && res[i].C3 == "0" && res[i].ITM_ID == "T06") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}
				}
			}else if(tblId == "DT_1RP032") {
				for(let i=0; i<res.length; i++) {
					if(selectChoiceNm4 == "계") {
						count = "1";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 != "0" && res[i].C2 == "0" && res[i].ITM_ID == "T03") {
							chartVal6.push([res[i].C1_NM, Number(res[i].DT)]);
						}
					}else if(selectChoiceNm4 == "성별") {
						count = "2";
						if(res[i].PRD_DE == prdDe[5] && res[i].C1 == "0" && res[i].C2 != "0" && res[i].ITM_ID == "T03") {
							chartVal6.push([res[i].C2_NM, Number(res[i].DT)]);
						}
					}
				}
			}
			seriesyearData6.push({
				type: 'pie',
				//name: chartNm,
				innerSize: '80%',
				data: chartVal6,
				dataLabels: {
					enabled: true,
					format: '{point.percentage:.1f} %',//label의 포맷을 "데이터 명 : y"로 지정해서 사용.
					align: 'center',
					//세로 위치 지정
					style: {
						fontSize: '14px'
					}
				},
			});
			var charts6 = "charts6"+count;
			charts6 = Highcharts.chart('chart6'+count, {
				chart : {
					renderTo: 'dounutChart',
					type: 'pie',
					marginTop: -15,
					style: {
						fontFamily: 'Noto Sans KR',
					},
				},
				credits: {enabled: false}, //highchart 워터마크 숨김처리
				exporting : { enabled : false },
				title: {
					text: '',
				},
				subtitle: {
					//text: '전체일자리<br><span class="customSt2" style="font-size: 20px">totJob만개</span>',
					align: 'center',
					verticalAlign: 'middle',
					x:-65,
					y:0,
					style: {
						color: '#494949',
						fontSize: '14px',
						fontWeight:'bold',
						lineHeight: 24,
					}
				},
				events: {
					load: function () {
						let chart = this,
						legend = chart.legend;
						for (let i = 0, len = legend.allItems.length; i < len; i++) {
							(function (i) {
								let item = legend.allItems[i].legendItem;
								item.on('mouseover', function (e) {
									chart.tooltip.refresh([chart.series[0].points[i]]);
								}).on('mouseout', function (e) {
									//chart.options.tooltip.enabled = false;
									chart.render();
								});
							})(i);
						}
					}
				},
				legend: {
					enabled : true,
					width: 100,
					verticalAlign: 'middle',
					align: 'right',
					itemMarginTop: 7,
					x: -15,
					itemStyle: {
						textOverflow: "ellipsis",
						fontSize :'12px',
						color: '#333333',
						textAlign:'center',
						fontWeight: '600',
						fontFamily: 'Noto Sans KR',	
					},
					itemHoverStyle: {
						color: '#FF0000',
					},
					formatter: function() {
					}
				},
				plotOptions: {
					pie: {//도넛(파이)차트 전체 옵션 지정.
						size: '60%', 
						showInLegend: true, //범례 show/hide 설정. (series 내에서 개별 지정도 가능.)
						dataLabels : {
							enabled : true,
							distance : 3
						},
						point: {
							events: {
								legendItemClick: function () {
									return false;
								},
							}
						},
					},
					series: {
						events: {
							legendItemClick: function () {
								return false;
							}
						}
					}
				},
				tooltip: {
					useHTML: false,//툴팁 포맷을 html로 변경할 경우 true로 지정.(default false)
					borderRadius: 10,
					backgroundColor :'#000000', 
					borderWidth:0,
					shadow: false,
					padding:10,
					style: {			 
						fontSize :'14px',  
						color: '#fff',
						fontWeight: '600',
						textAlign:'center',
					},
					shared: true,
					formatter: function() {
						return '<span style="color:#fff">'  + this.point.name + '</span> : ' + this.y + '만개';
					},
				},
				series: seriesyearData6
			});
		},
	}
	$more2DashDetail.util = {
		/**
		 * @name : $more2DashDetail.util.split
		 * @description : 차트 데이터배열 n개씩 자르기
		 * @date : 2022.10.13
		 * @author : 조규환
		 * @history :
		 */	
		split : function(items, tblId) {
			let Arr = new Array;
			let count = new Array;
			/*for(let i=0; i<items.length / 2; i++) {
				for(let j=items.length / 2; j<items.length; j++) {
				}
			}*/
			if(tblId == "DT_1RP009" || tblId == "DT_1RP014" || tblId == "DT_1RP015") {
				count = [0, 11, 1, 12, 2, 13, 3, 14, 4, 15, 5, 16, 6, 17, 7, 18, 8, 19, 9, 20, 10, 21];
			}else if(tblId == "DT_1RP010") {
				count = [0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11];
			}else if(tblId == "DT_1RP012") {
				count = [0, 3, 6, 9, 12, 1, 4, 7, 10, 13, 2, 5, 8, 11, 14];
			}else if(tblId == "DT_1RP013") {
				count = [0, 3, 6, 9, 1, 4, 7, 10, 2, 5, 8, 11];
			}else if(tblId == "DT_1RP016") {
				count = [0, 7, 1, 8, 2, 9, 3, 10, 4, 11, 5, 12, 6, 13];
			}else if(tblId == "DT_1RP032") {
				count = [0, 2, 4, 6, 1, 3, 5, 7, 4, 11, 5, 12, 6, 13];
			}
			for(let i=0; i<count.length; i++) {
				Arr.push(items[count[i]]);
			}
			return Arr;
		},	
		/**
		 * @name : $more2DashDetail.util.division
		 * @description : 차트 데이터배열 n개씩 자르기
		 * @date : 2022.10.13
		 * @author : 조규환
		 * @history :
		 */
		division : function(data = [], size = 1) { //data = [], size = 1, data, number
			const items = [...data];
			const arr = [];

			while (items.length) {
				arr.push(items.splice(0, size));
			}

			return arr;
			/*const length = data.length;
			const divide = Math.floor(length / number) + (Math.floor( length % number ) > 0 ? 1 : 0); // 12/6 = 2 + 
			const newArray = [];

			for (let i = 0; i <= divide; i++) {
				// 배열 0부터 n개씩 잘라 새 배열에 넣기
				newArray.push(data.splice(0, number)); 
			}
			return newArray;*/
		},
		/**
		 * @name : $more2DashDetail.util.overlapRemove
		 * @description : 차트 데이터 중복제거
		 * @date : 2022.10.13
		 * @author : 조규환
		 * @history :
		 */
		overlapRemove : function(dataArr) {
			const set = new Set(dataArr);
			const newArr = [...set];
			return newArr;
		},
		/**
		 * @name : $more2DashDetail.util.selectChart
		 * @description : 차트 셀렉트창 생성
		 * @date : 2022.10.17
		 * @author : 조규환
		 * @history :
		 */
		selectChart : function(tblId, selectNm1, selectNm2, selectNm3, selectNm4, selectNm5, selectNm6) {
			console.log(tblId);
			console.log(selectNm1);
			console.log(selectNm2);
			console.log(selectNm3);
			console.log(selectNm4);
			console.log(selectNm5);
			console.log(selectNm6);
			let option1 = "";
			let option2 = "";
			let option3 = "";
			let option4 = "";
			let option5 = "";
			let option6 = "";
			for(let i=1; i<7; i++) {
				$('.select'+i).empty();
			}
			if(tblId == "DT_1RP101" || tblId == "DT_1RP102") {
				$(".select1").append("<select class='' id='selectChoice1'></select>");
				$(".select4").append("<select class='' id='selectChoice4'></select>");
				for(let i=0; i<selectNm1.length; i++) {
					option1 = "<option value='" +i+ "'>"+selectNm1[i]+"</option>";;
					option4 = "<option value='" +i+ "'>"+selectNm4[i]+"</option>";;
					$('#selectChoice1').append(option1);
					$('#selectChoice4').append(option4);
				}
			}else if(tblId == "DT_1RP103" || tblId == "DT_1RP104" || tblId == "DT_1RP105" || tblId == "DT_1RP106" || tblId == "DT_1RP000" || tblId == "DT_1RP001" || tblId == "DT_1RP002" ||
					 tblId == "DT_1RP003" || tblId == "DT_1RP004" || tblId == "DT_1RP005" || tblId == "DT_1RP006" || tblId == "DT_1RP007" || tblId == "DT_1RP008" || tblId == "DT_1RP012" ||
					 tblId == "DT_1RP013") {
				$(".select1").append("<select class='' id='selectChoice1'></select>");
				for(let i=0; i<selectNm1.length; i++) {
					option1 = "<option value='" +i+ "'>"+selectNm1[i]+"</option>";;
					$('#selectChoice1').append(option1);
				}
			}else if(tblId == "DT_1RP009" || tblId == "DT_1RP010" || tblId == "DT_1RP011" || tblId == "DT_1RP014" || tblId == "DT_1RP015" || tblId == "DT_1RP016" || tblId == "DT_1RP018" ||
					 tblId == "DT_1RP032") {
				$(".select1").append("<select class='' id='selectChoice1'></select>");
				$(".select2").append("<select class='' id='selectChoice2'></select>");
				$(".select5").append("<select class='' id='selectChoice4'></select>");
				$(".select6").append("<select class='' id='selectChoice6'></select>");
				for(let i=0; i<selectNm1.length; i++) {
					option1 = "<option value='" +i+ "'>"+selectNm1[i]+"</option>";;
					option2 = "<option value='" +i+ "'>"+selectNm2[i]+"</option>";;
					$('#selectChoice1').append(option1);
					$('#selectChoice2').append(option2);
				}
				for(let i=0; i<selectNm4.length; i++) {
					option5 = "<option value='" +i+ "'>"+selectNm4[i]+"</option>";;
					option6 = "<option value='" +i+ "'>"+selectNm6[i]+"</option>";;
					$('#selectChoice4').append(option5);
					$('#selectChoice6').append(option6);
				}
			}
		},
	}
}(window, document));
//통계 리스트 출력

var il2=0;
//상단 검색기능
function searchInput(){
	
}

//최근 검색어 삭제
function remove(n){
}

//최근 검색어 클릭시 검색
function searchClick(n){
	
}

//하단 통계정보 조회(연도)
function searchBtn1(){
	
}

var tblId = '';
//하단 통계정보 조회(연도)
function search(tblId, startPrdDe){
	
}
//차트 출력
function openApiSearch2(li){
	
}

function makeChartData(res) {
	
}
function makeChart(xAxis, seriesyearData2) {
	
}
function division(data, number) {
	
}
