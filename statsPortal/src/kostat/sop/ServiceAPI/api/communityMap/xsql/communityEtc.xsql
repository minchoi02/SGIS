<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="communityEtc">
	<insert id="insertCmmntyMapList">
		INSERT INTO SRV_DT_CMMNTY_MAP_LIST(
			CMMNTY_MAP_LIST_ID,
			CMMNTY_MAP_ID,
			LIST,
			RECMD_STAT_YN
		)VALUES(
			<!-- mng_s 20170713_주용민, 이중화 관련 sequence 삭제 -->
			<!-- SRV_DT_CMMNTY_MAP_LIST_ID.nextval,	-->
			(SELECT MAX(CMMNTY_MAP_LIST_ID)+1 FROM SRV_DT_CMMNTY_MAP_LIST),
			<!-- mng_e 20170713_주용민-->
			#{cmmnty_map_id},
			#{list},
			#{recmd_stat_yn}
		)
	</insert>
	<select id="selectMapList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			CASE
				WHEN LIST='bassBsnes' THEN '총사업체'
				WHEN LIST='bassStats' THEN '총인구'
				ELSE (SELECT HIST_NM FROM SRV_DT_STATSEARCHHIST WHERE SRV_DT_STATSEARCHHIST.HIST_ID = LIST)
			END AS HIST_NM,
			LIST,
			( SELECT map_type FROM srv_dt_statsearchhist WHERE hist_id = LIST ) AS map_type
		FROM SRV_DT_CMMNTY_MAP_LIST
		WHERE
		CMMNTY_MAP_ID = #{cmmnty_map_id}
		<choose>
			<when test='"Y".equals(recmd_stat_yn)'>
				AND RECMD_STAT_YN = 'Y'
			</when>
			<otherwise>
				AND (RECMD_STAT_YN != 'Y' OR RECMD_STAT_YN is null)
			</otherwise>
		</choose>
		AND 
		CASE
			WHEN LIST='bassBsnes' OR LIST='bassStats' THEN 1
			ELSE (SELECT COUNT(1) FROM SRV_DT_STATSEARCHHIST WHERE SRV_DT_STATSEARCHHIST.HIST_ID = LIST)
		END >0
		ORDER BY CMMNTY_MAP_LIST_ID ASC
	</select>
	<delete id="deleteCmmntyMapList">
		DELETE FROM SRV_DT_CMMNTY_MAP_LIST
		<where>
			<choose>
				<when test="cmmnty_map_id != null and cmmnty_map_id !=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
					<choose>
						<when test='"Y".equals(recmd_stat_yn)'>
							AND RECMD_STAT_YN = 'Y'
						</when>
						<otherwise>
							AND (RECMD_STAT_YN != 'Y' OR RECMD_STAT_YN is null)
						</otherwise>
					</choose>
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</delete>
	
	
	<insert id="insertCmmntyKwrd">
		INSERT INTO SRV_DT_CMMNTY_KWRD(
			CMMNTY_KWRD_ID,
			CMMNTY_MAP_ID,
			KWRD
		)VALUES(
			<!-- mng_s 20170713_주용민, 이중화 관련 sequence 삭제 -->
			<!-- SRV_DT_CMMNTY_KWRD_ID.nextval, -->
			(SELECT MAX(CMMNTY_KWRD_ID)+1 FROM SRV_DT_CMMNTY_KWRD),
			<!-- mng_e 20170713_주용민-->
			#{cmmnty_map_id},
			#{kwrd}
		)
	</insert>
	<select id="selectKwrdList" parameterType="String" resultType="java.util.HashMap">
		SELECT
			CMMNTY_KWRD_ID,
			CMMNTY_MAP_ID,
			KWRD
		FROM SRV_DT_CMMNTY_KWRD
		WHERE
		CMMNTY_MAP_ID = #{value}
		ORDER BY CMMNTY_KWRD_ID ASC
	</select>
	<delete id="deleteCmmntyKwrd">
		DELETE FROM SRV_DT_CMMNTY_KWRD
		<where>
			<choose>
				<when test="cmmnty_map_id != null and cmmnty_map_id !=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</delete>
	
	
	<insert id="insertCmmntyMydataList">
		INSERT INTO SRV_DT_CMMNTY_MYDATA_LIST(
			CMMNTY_MYDATA_LIST_ID,
			CMMNTY_MAP_ID,
			LIST
		)VALUES(
			<!-- mng_s 20170713_주용민, 이중화 관련 sequence 삭제 -->
			<!-- SRV_DT_CMMNTY_MYDATA_LIST_ID.nextval, -->
			(SELECT MAX(CMMNTY_MYDATA_LIST_ID)+1 FROM SRV_DT_CMMNTY_MYDATA_LIST),
			<!-- mng_e 20170713_주용민-->
			#{cmmnty_map_id},
			#{list}
		)
	</insert>
	<delete id="deleteCmmntyMydataList">
		DELETE FROM SRV_DT_CMMNTY_MYDATA_LIST
		<where>
			<choose>
				<when test="cmmnty_map_id != null and cmmnty_map_id !=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</delete>
	
	<insert id="insertCmmntyLbdmsList">
		INSERT INTO SRV_DT_CMMNTY_LBDMS_LIST(
			CMMNTY_LBDMS_LIST_ID,
			CMMNTY_MAP_ID,
			LIST
		)VALUES(
			(SELECT NVL(MAX(CMMNTY_LBDMS_LIST_ID),0)+1 FROM SRV_DT_CMMNTY_LBDMS_LIST),
			#{cmmnty_map_id},
			#{list}
		)
	</insert>
	<delete id="deleteCmmntyLbdmsList">
		DELETE FROM SRV_DT_CMMNTY_LBDMS_LIST
		<where>
			<choose>
				<when test="cmmnty_map_id != null and cmmnty_map_id !=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</delete>
	
	<select id="selectOpenHistList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT seq
			 , open_dt
			 , open_data_nm
			 , open_inst_nm
			 , usr_nm
			 , spacial_data_type
			 , info_link_srv_nm
			 , info_link_srv_realm
			 , open_yn
			 , usr_id
			 , spacial_data_type_cd
			 , info_link_srv_nm_cd
			 , info_link_srv_realm_cd
			 , bord_level
		  FROM srv_dt_inner_open_hist
		 WHERE info_link_srv_nm_cd = '03'
		 <if test='member_grade != "PM"'>
		   AND open_yn = '1'
		 </if>
		 ORDER BY SEQ DESC
	</select>
	
	<select id="selectPointDataList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT serial
			 , div_cd
			 , div_nm
			 , tot_oa_cd
			 , adm_dr_cd
			 , x 
			 , y
			 , seq
		  FROM srv_pt_open_data
		 WHERE seq = #{seq}
	</select>
	
	<update id="updateOpenHist" parameterType="java.util.HashMap">
		UPDATE srv_dt_inner_open_hist
		   SET open_yn = #{open_yn}
		 WHERE seq = #{seq}
	</update>
	
	<insert id="insertCmmntyMapAddRegion">
		INSERT INTO SRV_DT_CMMNTY_MAP_ADD_REGION(
			CMMNTY_MAP_ID,
			SIDO_CD,
			SGG_CD,
			EMDONG_CD,
			ORDER
		)VALUES(
			#{cmmnty_map_id},
			#{sido_cd},
			#{sgg_cd},
			#{emdong_cd},
			#{order}
		)
	</insert>
	<select id="selectCmmntyMapAddRegion" resultType="java.util.HashMap">
		SELECT *,
			CASE 
				<!-- 2017. 03. 23 수정 -->
				WHEN LENGTH(ADM_CD)=2 THEN (SELECT SIDO_NM FROM SRV_PG_SIDOBORD WHERE BASE_YEAR = ${bnd_year} AND SIDO_CD = A.SIDO_CD)
				WHEN LENGTH(ADM_CD)=5 THEN (SELECT ADDR FROM SRV_PG_SGGBORD WHERE BASE_YEAR = ${bnd_year} AND SIDO_CD = A.SIDO_CD AND SGG_CD = A.SGG_CD)
				WHEN LENGTH(ADM_CD)=7 THEN (SELECT ADDR FROM SRV_PG_ADMBORD WHERE BASE_YEAR = ${bnd_year} AND SIDO_CD = A.SIDO_CD AND SGG_CD = A.SGG_CD AND EMDONG_CD = A.EMDONG_CD)
				ELSE '전국'
			END AS ADM_NM
		FROM (
			SELECT
				CASE WHEN SIDO_CD = '00' THEN ''
				ELSE
					CASE WHEN SGG_CD = '999' THEN SIDO_CD
					ELSE 
						CASE WHEN EMDONG_CD = '00' THEN SIDO_CD||SGG_CD
						ELSE SIDO_CD||SGG_CD||EMDONG_CD
					END
				END
				END ADM_CD,
				SIDO_CD,
				SGG_CD,
				EMDONG_CD
			FROM SRV_DT_CMMNTY_MAP_ADD_REGION
			<where>
				<choose>
					<when test="cmmnty_map_id != null and cmmnty_map_id !=''">
						CMMNTY_MAP_ID = #{cmmnty_map_id}
					</when>
					<otherwise>
						1!=1
					</otherwise>
				</choose>
			</where>
			ORDER BY ORDER ASC
		) A
	</select>
	<delete id="deleteCmmntyMapAddRegion">
		DELETE FROM SRV_DT_CMMNTY_MAP_ADD_REGION
		<where>
			<choose>
				<when test="cmmnty_map_id != null and cmmnty_map_id !=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</delete>
	
	
	<select id="selectArea" resultType="java.util.HashMap">
		<choose>
			<when test="adm_cd == null or adm_cd ==''">
			<!-- mng_s leekh 20181110 수정 -->
				SELECT '00' as sido_cd,'전국' as sido_nm,'990480.875' as x_coor,'1815839.375' as y_coor from dual
			</when>
			<when test="adm_cd.length() == 2">
				SELECT 
				top 1	*
				FROM SRV_PG_SIDOBORD WHERE SIDO_CD = #{adm_cd} 
					order by base_year desc
				<!--
				AND BASE_YEAR = #{bnd_year}
				-->
			</when>
			<when test="adm_cd.length() == 5">
				SELECT 
				top 1	*
				FROM SRV_PG_SGGBORD WHERE SIDO_CD||SGG_CD = #{adm_cd}
					order by base_year desc
				<!--
				 AND BASE_YEAR = #{bnd_year}
				 -->
			</when>
			<when test="adm_cd.length() == 7">
				SELECT 
				top 1	*
				FROM SRV_PG_ADMBORD WHERE SIDO_CD||SGG_CD||EMDONG_CD = #{adm_cd}
					order by base_year desc
				<!--
				 AND BASE_YEAR = #{bnd_year}
				 -->
			</when>
		</choose>
					<!-- mng_e leekh 20181110 수정 -->
	</select>
	<select id="selectSidoList" parameterType="String" resultType="java.util.HashMap">
		SELECT
			BASE_YEAR,
			SIDO_CD,
			SIDO_NM,
			TB_NM,
			X_COOR,
			Y_COOR,
			SIDO_CD AS ADM_CD,
			SIDO_NM AS ADM_NM,
			'999' AS SGG_CD,
			'00' AS EMDONG_CD
		FROM SRV_PG_SIDOBORD WHERE BASE_YEAR = 
		<choose>
			<when test="value != null and value != ''">
				#{value}
			</when>
			<otherwise>
				(SELECT MAX(BASE_YEAR) FROM SRV_PG_SIDOBORD)
			</otherwise>
		</choose>
	</select>
	
	<insert id="insertCmmntyImage">
		<selectKey keyProperty="cmmnty_map_atch_file_id" resultType="Integer" order="BEFORE">
			<!-- mng_s 20170713_주용민, 이중화 관련 sequence 삭제 -->
			<!-- SELECT SRV_DT_CMMNTY_MAP_ATCH_IMAGE_ID.nextval FROM DUAL -->       
			SELECT MAX(CMMNTY_MAP_ATCH_FILE_ID)+1 FROM SRV_DT_CMMNTY_MAP_ATCH_IMAGE
			<!-- mng_e 20170713_주용민-->
		</selectKey>
		INSERT INTO SRV_DT_CMMNTY_MAP_ATCH_IMAGE(
			CMMNTY_MAP_ATCH_FILE_ID, 
			PATH_NM, 
			SAVE_FILE_NM, 
			FILE_EXTN, 
			FILE_TYPE, 
			ORI_FILE_NM
		)VALUES(
			#{cmmnty_map_atch_file_id}, 
			#{path_nm}, 
			#{save_file_nm}, 
			#{file_extn}, 
			#{file_type}, 
			#{ori_file_nm}
		)
	</insert>
	
	<select id="selectCmmntyMapRegistMemberList" resultType="String">
		SELECT
			<choose>
				<when test='"M".equals(cmmnty_partcptn_grant_yn.toString())'>
					ID
				</when>
				<otherwise>
					USR_ID
				</otherwise>
			</choose>
		FROM
		<choose>
			<when test='"Y".equals(cmmnty_partcptn_grant_yn.toString())'>
				SRV_DT_CMMNTY_APPROVAL
			</when>
			<when test='"N".equals(cmmnty_partcptn_grant_yn.toString()) or "P".equals(cmmnty_partcptn_grant_yn.toString()) or "A".equals(cmmnty_partcptn_grant_yn.toString())'>
				SRV_DT_CMMNTY_POI
			</when>
			<when test='"M".equals(cmmnty_partcptn_grant_yn.toString())'>
				SRV_DT_CMMNTY_MAP_REG_MBER_LIST
			</when>
		</choose>
		<where>
			<choose>
				<when test="cmmnty_map_id != null and cmmnty_map_id !=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
					<if test='"Y".equals(cmmnty_partcptn_grant_yn.toString())'>
						AND APPROVAL_DISTINCT = 'A' 
					</if>
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where> 
		GROUP BY
		<choose>
			<when test='"M".equals(cmmnty_partcptn_grant_yn.toString())'>
				ID
			</when>
			<otherwise>
				USR_ID
			</otherwise>
		</choose>
	</select>
	
	
	<insert id="insertCmmntyItemList">
		INSERT INTO SRV_DT_CMMNTY_ADD_ITEM_LIST(
			CMMNTY_MAP_ID,
			CD,
			NM
		)VALUES(
			#{cmmnty_map_id},
			#{item_cd},
			(SELECT CD_NM FROM SRV_DT_CMMNTY_ITEM_CD_LIST WHERE cd = #{item_cd})
		)
	</insert>
	<select id="selectCmmntyItemList" resultType="HashMap">
		SELECT
			CD,
			NM
		FROM SRV_DT_CMMNTY_ADD_ITEM_LIST
		<where>
			<choose>
				<when test="cmmnty_map_id!=null and cmmnty_map_id!=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</select>
	<delete id="deleteCmmntyItemList">
		DELETE FROM SRV_DT_CMMNTY_ADD_ITEM_LIST
		<where>
			<choose>
				<when test="cmmnty_map_id!=null and cmmnty_map_id!=''">
					CMMNTY_MAP_ID = #{cmmnty_map_id}
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</delete>
	
	
	<insert id="insertMemberInfo">
		INSERT INTO srv_dt_memberinfo(
			member_id,
			pw,
			member_nm,
			birth_code,
			gender,
			cp_no,
			email,
			member_grade,
			pw_fail_cnt,
			member_key,
			srv_agreement_agree_yn,
			psn_info_agreement_agree_yn,
			other_people_provd_agree_yn,
			fourteen_less_than_yn,
			parent_agree_yn,
			combine_login_yn,
			login_limit_yn
		)values(
			#{member_id},
			#{pw},
			#{member_nm},
			'xr+Jih4vVVWiKktC3rYk2g==',
			'M',
			'vl2l5t9gPs2W5/Pm71nlwA==',
			'935SK4OB+qYLvsayrMI87A==',
			'GM',
			0,
			#{member_id},
			'Y',
			'Y',
			'Y',
			'N',
			'N',
			'N',
			'N'
		)
	</insert>
	<select id="selectOperInstAreaCount" parameterType="String" resultType="int">
		SELECT
			COUNT(1)
		FROM SRV_DT_OPER_INST_AREA
		<where>
			<choose>
				<when test="value!=null and value!=''">
					oper_inst_area_id = #{value}
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
			
		</where>
	</select>
	<!-- 2020년 SGIS고도화 3차(테마코드) 시작 - 기존 쿼리 주석처리 및 대체 쿼리 추가 -->
	<!--
	<select id="selectItemGroupList" resultType="HashMap">
		SELECT 
			GROUP_ID,
			GROUP_NM 
		FROM SRV_DT_CMMNTY_ITEM_GROUP_LIST
		ORDER BY GROUP_ID
	</select>
	<select id="selectItemCdList" resultType="HashMap">
		SELECT 
			GROUP_ID,
			CD,
			CD_NM 
		FROM SRV_DT_CMMNTY_ITEM_CD_LIST
		ORDER BY TO_NUMBER(CD)
	</select>
	-->
	
    <select id="selectItemGroupList" resultType="HashMap">
        SELECT 
            B_THEME_CD as GROUP_ID
            , MIN(B_THEME_CD_NM) AS GROUP_NM
        FROM
            CMM_CD_THEME
        WHERE 
            LENGTH(B_THEME_CD) > 0
            AND THEME_CD NOT LIKE '%000'
            AND B_THEME_CD != '99'
        GROUP 
            BY B_THEME_CD
        ORDER BY
            GROUP_ID
    </select>
    <select id="selectItemCdList" resultType="HashMap">
        SELECT 
            B_THEME_CD AS GROUP_ID
            , THEME_CD		AS CD
            , S_THEME_CD_NM AS CD_NM
            , ORDER_NO
        FROM
            CMM_CD_THEME
        WHERE
            LENGTH(B_THEME_CD) > 0 
            AND THEME_CD NOT LIKE '%000'
            AND B_THEME_CD != '99'
        ORDER BY
            GROUP_ID, ORDER_NO
    </select>
    <!-- 2020년 SGIS고도화 3차(테마코드) 끝 - 기존 쿼리 주석처리 및 대체 쿼리 추가 -->
	<select id="selectRecomendHistList" resultType="hashmap">
		SELECT
			HIST_NM,
			HIST_ID AS LIST
		FROM SRV_DT_STATSEARCHHIST
		<where>
			<choose>
				<when test="member_id!=null and member_id!='' and cmmnty_map_id!=null and cmmnty_map_id!=''">
					MEMBER_ID = #{member_id}
					AND HIST_TYPE = 'BMARK'
					AND HIST_ID NOT IN (SELECT LIST FROM SRV_DT_CMMNTY_MAP_LIST WHERE CMMNTY_MAP_ID = #{cmmnty_map_id})
				</when>
				<otherwise>
					1!=1
				</otherwise>
			</choose>
		</where>
	</select>
</mapper>
