<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stats">

	<select id="admnm" parameterType="hashmap" resultType="hashmap">
		SELECT SIDO_NM
		<if test='adm_length >= "5" '>
		     , SGG_NM 
		</if>
		<if test='adm_length == "7" '>
		 	 , EMDONG_NM
		</if>
		FROM SRV_PG_ADMBORD with (nolock)   
		 WHERE 1=1
		   AND BASE_YEAR = #{bnd_year}
		   AND SIDO_CD = #{sido_cd}
			<if test='adm_length >= "5" '>
		   		AND SGG_CD = #{sgg_cd}
			</if>
			<if test='adm_length == "7" '>
		   		AND EMDONG_CD = #{emdong_cd}
			</if>
		 GROUP BY SIDO_NM
			<if test='adm_length >= "5" '>
		 	    , SGG_NM 
			</if>
			<if test='adm_length == "7" '>
		 	    , EMDONG_NM
			</if>
		 LIMIT 1
	</select>
	

<!-- 인구총괄 -->
	<select id="population" parameterType="hashmap" resultType="hashmap">
		select nvl(sum(tot_ppltn_hhh_cnt),0) tot_ppltn_hhh_cnt 
             , nvl(sum(tot_ppltn_hh_cnt), 0) tot_ppltn_hh_cnt
             , nvl(sum(tot_ppltn_h_cnt), 0) tot_ppltn_h_cnt
             , nvl(sum(tot_ppltn_base_cnt), 0) tot_ppltn_base_cnt
             , nvl(sum(tot_ppltn_male_hhh_cnt),0) tot_ppltn_male_hhh_cnt 
             , nvl(sum(tot_ppltn_male_hh_cnt), 0) tot_ppltn_male_hh_cnt
             , nvl(sum(tot_ppltn_male_h_cnt), 0) tot_ppltn_male_h_cnt
             , nvl(sum(tot_ppltn_male_base_cnt), 0) tot_ppltn_male_base_cnt
             , nvl(sum(tot_ppltn_fem_hhh_cnt),0) tot_ppltn_fem_hhh_cnt 
             , nvl(sum(tot_ppltn_fem_hh_cnt), 0) tot_ppltn_fem_hh_cnt
             , nvl(sum(tot_ppltn_fem_h_cnt), 0) tot_ppltn_fem_h_cnt
             , nvl(sum(tot_ppltn_fem_base_cnt), 0) tot_ppltn_fem_base_cnt
             , nvl(round(avg(avg_age_hhh_cnt)), 0) avg_age_hhh_cnt
             , nvl(round(avg(avg_age_hh_cnt)), 0)  avg_age_hh_cnt
             , nvl(round(avg(avg_age_h_cnt)), 0) avg_age_h_cnt
             , nvl(round(avg(avg_age_base_cnt)), 0) avg_age_base_cnt
             , nvl(round(avg(avg_age_male_hhh_cnt)), 0) avg_age_male_hhh_cnt
             , nvl(round(avg(avg_age_male_hh_cnt)), 0)  avg_age_male_hh_cnt
             , nvl(round(avg(avg_age_male_h_cnt)), 0) avg_age_male_h_cnt
             , nvl(round(avg(avg_age_male_base_cnt)), 0) avg_age_male_base_cnt
             , nvl(round(avg(avg_age_fem_hhh_cnt)), 0) avg_age_fem_hhh_cnt
             , nvl(round(avg(avg_age_fem_hh_cnt)), 0)  avg_age_fem_hh_cnt
             , nvl(round(avg(avg_age_fem_h_cnt)), 0) avg_age_fem_h_cnt
             , nvl(round(avg(avg_age_fem_base_cnt)), 0) avg_age_fem_base_cnt
             , nvl(round(avg(ppltn_dnsty_hhh_cnt)), 0) ppltn_dnsty_hhh_cnt
             , nvl(round(avg(ppltn_dnsty_hh_cnt)), 0)  ppltn_dnsty_hh_cnt
             , nvl(round(avg(ppltn_dnsty_h_cnt)), 0) ppltn_dnsty_h_cnt
             , nvl(round(avg(ppltn_dnsty_base_cnt)), 0) ppltn_dnsty_base_cnt
             , nvl(round(avg(aged_child_idx_hhh_cnt)), 0) aged_child_idx_hhh_cnt
             , nvl(round(avg(aged_child_idx_hh_cnt)), 0)  aged_child_idx_hh_cnt
             , nvl(round(avg(aged_child_idx_h_cnt)), 0) aged_child_idx_h_cnt
             , nvl(round(avg(aged_child_idx_base_cnt)), 0) aged_child_idx_base_cnt
             , nvl(round(avg(oldage_suprt_per_hhh_cnt)), 0) oldage_suprt_per_hhh_cnt
             , nvl(round(avg(oldage_suprt_per_hh_cnt)), 0)  oldage_suprt_per_hh_cnt
             , nvl(round(avg(oldage_suprt_per_h_cnt)), 0) oldage_suprt_per_h_cnt
             , nvl(round(avg(oldage_suprt_per_base_cnt)), 0) oldage_suprt_per_base_cnt
             , nvl(round(avg(juv_suprt_per_hhh_cnt)), 0) juv_suprt_per_hhh_cnt
             , nvl(round(avg(juv_suprt_per_hh_cnt)), 0)  juv_suprt_per_hh_cnt
             , nvl(round(avg(juv_suprt_per_h_cnt)), 0) juv_suprt_per_h_cnt
             , nvl(round(avg(juv_suprt_per_base_cnt)), 0) juv_suprt_per_base_cnt
             , nvl(round(avg(tot_suprt_per_hhh_cnt)), 0) tot_suprt_per_hhh_cnt
             , nvl(round(avg(tot_suprt_per_hh_cnt)), 0)  tot_suprt_per_hh_cnt
             , nvl(round(avg(tot_suprt_per_h_cnt)), 0) tot_suprt_per_h_cnt
             , nvl(round(avg(tot_suprt_per_base_cnt)), 0) tot_suprt_per_base_cnt
		  from (select nvl(sum(tot_ppltn),0) tot_ppltn_hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(tot_ppltn) end) as tot_ppltn_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(tot_ppltn) end) as tot_ppltn_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(tot_ppltn) end) as tot_ppltn_base_cnt
		             , nvl(sum(tot_ppltn_male),0) tot_ppltn_male_hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(tot_ppltn_male) end) as tot_ppltn_male_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(tot_ppltn_male) end) as tot_ppltn_male_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(tot_ppltn_male) end) as tot_ppltn_male_base_cnt
		             , nvl(sum(tot_ppltn_fem),0) tot_ppltn_fem_hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(tot_ppltn_fem) end) as tot_ppltn_fem_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(tot_ppltn_fem) end) as tot_ppltn_fem_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(tot_ppltn_fem) end) as tot_ppltn_fem_base_cnt
		             , round(avg(nvl(pplsum.avg_age,0))) avg_age_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.avg_age,0)) end) as avg_age_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.avg_age,0)) end) as avg_age_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.avg_age,0)) end) as avg_age_base_cnt
		             , round(avg(nvl(pplsum.avg_age_male,0))) avg_age_male_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.avg_age_male,0)) end) as avg_age_male_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.avg_age_male,0)) end) as avg_age_male_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.avg_age_male,0)) end) as avg_age_male_base_cnt
		             , round(avg(nvl(pplsum.avg_age_fem,0))) avg_age_fem_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.avg_age_fem,0)) end) as avg_age_fem_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.avg_age_fem,0)) end) as avg_age_fem_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.avg_age_fem,0)) end) as avg_age_fem_base_cnt
		             , round(avg(nvl(pplsum.ppltn_dnsty,0))) ppltn_dnsty_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.ppltn_dnsty,0)) end) as ppltn_dnsty_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.ppltn_dnsty,0)) end) as ppltn_dnsty_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.ppltn_dnsty,0)) end) as ppltn_dnsty_base_cnt
		             , round(avg(nvl(pplsum.aged_child_idx,0))) aged_child_idx_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.aged_child_idx,0)) end) as aged_child_idx_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.aged_child_idx,0)) end) as aged_child_idx_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.aged_child_idx,0)) end) as aged_child_idx_base_cnt
		             , round(avg(nvl(pplsum.oldage_suprt_per,0))) oldage_suprt_per_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.oldage_suprt_per,0)) end) as oldage_suprt_per_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.oldage_suprt_per,0)) end) as oldage_suprt_per_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.oldage_suprt_per,0)) end) as oldage_suprt_per_base_cnt
		             , round(avg(nvl(pplsum.juv_suprt_per,0))) juv_suprt_per_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.juv_suprt_per,0)) end) as juv_suprt_per_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.juv_suprt_per,0)) end) as juv_suprt_per_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.juv_suprt_per,0)) end) as juv_suprt_per_base_cnt
		             , round(avg(nvl(pplsum.tot_suprt_per,0))) tot_suprt_per_hhh_cnt
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then avg(nvl(pplsum.tot_suprt_per,0)) end) as tot_suprt_per_hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then avg(nvl(pplsum.tot_suprt_per,0)) end) as tot_suprt_per_h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then avg(nvl(pplsum.tot_suprt_per,0)) end) as tot_suprt_per_base_cnt
		  from  srv_dt_ppltnsum_${year} with (nolock) pplsum
		             , (select tot_reg_cd 
		                     , a.sido_cd||a.sgg_cd||a.emdong_cd adm_cd 
		                     , b.emdong_nm adm_nm 
		                     , a.base_year as year
		                  from srv_pg_totregbord with (nolock) a,  srv_pg_admbord with (nolock) b
		                  where  a.base_year = #{bnd_year}
			                 and a.base_year=b.base_year 
							 and a.sido_cd=b.sido_cd
							 and a.sgg_cd=b.sgg_cd
							 and a.emdong_cd=b.emdong_cd
		                )bord 
		         where pplsum.tot_reg_cd = bord.tot_reg_cd 
		         group by  bord.adm_cd ,bord.adm_nm 
		        )
	</select>
	
	
	<!-- 세부인구 정보 조회 -->
	<select id="searchpopulation" parameterType="hashmap" resultType="hashmap">
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(ppltn_cnt),0) hhh_cnt 
		            , nvl((case when substr(ppl.sido_cd||ppl.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(ppltn_cnt) end),0) as hh_cnt
		            , nvl((case when ppl.sido_cd||ppl.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(ppltn_cnt) end),0) as h_cnt
		        from srv_dt_popsgg_${year} with (nolock) ppl
		        where  
		        	ppl.bord_base_year = #{bnd_year}
	        	<if test='gender != "0" '>
					and ppl.gender=#{gender}
			    </if>
			    <if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
			    </if>
			    <if test='edu_level != null '>
					and ppl.rd_edu_level in
					<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
						#{edu}
					</foreach>
				</if>
			    <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
				</if>
		            group by ppl.sido_cd,ppl.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(ppltn_cnt), 0) base_cnt 
		        from srv_dt_popsreg_${year} with (nolock) ppl
		        , srv_pg_totregbord with (nolock) bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='gender != "0" '>
					and ppl.gender=#{gender}
			    </if>
			    <if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
			    </if>
			    <if test='edu_level != null '>
					and ppl.rd_edu_level in
					<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
						#{edu}
					</foreach>
				</if>
			    <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
				</if>
		        and ppl.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
	</select>
	
	
	<!-- 가구 통계 -->
	<select id="household" parameterType="hashmap" resultType="hashmap">
		
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(family_cnt),0) hhh_cnt 
		            , nvl((case when substr(family.sido_cd||family.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(family_cnt) end),0) as hh_cnt
		            , nvl((case when family.sido_cd||family.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(family_cnt) end),0) as h_cnt
		        from srv_dt_familysgg_${year} with (nolock) family
		        where  
		        	family.bord_base_year = #{bnd_year}
					<if test='household_type != null '>
							and family.rd_household_type in
					  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
					 	 	#{household}
					  	</foreach>
					  </if>
					<if test='ocptn_type != null '>
						   and family.rd_ocptn_type in
						<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						  	#{ocptn}
						</foreach>
					</if>
		            group by family.sido_cd,family.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(family.family_cnt), 0) base_cnt 
		        from srv_dt_familyreg_${year} with (nolock) family
		        , srv_pg_totregbord with (nolock) bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='household_type != null '>
						and family.rd_household_type in
				  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
				 	 	#{household}
				  	</foreach>
			    </if>
				<if test='ocptn_type != null '>
					   and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
					  	#{ocptn}
					</foreach>
				</if>
		        and family.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
		
	</select>
	 
	 
	<select id="house" parameterType="hashmap" resultType="hashmap">
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(house.resid_cnt),0) hhh_cnt 
		            , nvl((case when substr(house.sido_cd||house.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(house.resid_cnt) end),0) as hh_cnt
		            , nvl((case when house.sido_cd||house.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(house.resid_cnt) end),0) as h_cnt
		        from srv_dt_housesgg_${year} with (nolock) house
		        where  
		        	house.bord_base_year = #{bnd_year}
		        <if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
				<if test='house_area_param != null '>
			      and ${house_area_param}
			   </if> 
			   <if test='const_year != null '>
				  and house.rd_const_year = #{const_year}
			   </if>
			   <if test='bdspace_from != null '>
				  and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
				  and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
			   </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		            group by house.sido_cd,house.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(house.resid_cnt), 0) base_cnt 
		        from srv_dt_housereg_${year} with (nolock) house
		        , srv_pg_totregbord with (nolock) bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
			   <if test='house_area_param != null '>
			      and ${house_area_param}
			   </if>
			   <if test='const_year != null '>
				  and house.rd_const_year = #{const_year}
			   </if>
			   <if test='bdspace_from != null '>
				  and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
				  and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
			   </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		        and house.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
	</select>
	
	
	<!-- 9월 서비스 -->
	<select id="house_2015" parameterType="hashmap" resultType="hashmap">
		select hhh_cnt
		    , hh_cnt
		    , h_cnt
		    <if test='adm_cd.length() == 7 '>
		    , base_cnt
		    </if>
		    <if test='adm_cd.length() != 7 '>
		    , 0 as base_cnt
		    </if>
		from 
		   (
		    select nvl(sum(hhh_cnt), 0) hhh_cnt
		         , nvl(sum(hh_cnt), 0) hh_cnt
		         , nvl(sum(h_cnt), 0) h_cnt
		    from
		        (
		        select nvl(sum(house.resid_cnt),0) hhh_cnt 
		            , nvl((case when substr(house.sido_cd||house.sgg_cd,1,2) = to_char(#{sido_cd}) then sum(house.resid_cnt) end),0) as hh_cnt
		            , nvl((case when house.sido_cd||house.sgg_cd = to_char(#{sido_cd})||to_char(#{sgg_cd}) then sum(house.resid_cnt) end),0) as h_cnt
		        from srv_dt_housesgg_${year} with (nolock) house
		        where  
		        	house.bord_base_year = #{bnd_year}
				<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
			   <if test='house_area_cd != null '>
					and house.house_area_cd in
					<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
						#{house_area_type}
					</foreach>
				</if>
				<!-- 2016.10.25 수정 -->
			  <if test='house_use_prid_cd != null '>
					and house_use_prid_cd = #{house_use_prid_cd}
			  </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		            group by house.sido_cd,house.sgg_cd
		        )
		    ) sgg
		    <if test='adm_cd.length() == 7 '>
		 ,(
		        select nvl(sum(house.resid_cnt), 0) base_cnt 
		        from srv_dt_housereg_${year} with (nolock) house
		        , srv_pg_totregbord with (nolock) bord
		         <where>
		         	bord.base_year = #{bnd_year}
		        and bord.sido_cd = #{sido_cd}
		        and bord.sgg_cd = #{sgg_cd}
		        and bord.emdong_cd = #{emdong_cd}
	        	<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					  	#{type}
					</foreach>
			   </if>
			   <if test='house_area_cd != null '>
					and house.house_area_cd in
					<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
						#{house_area_type}
					</foreach>
				</if>
				<!-- 2016.10.25 수정 -->
			   <if test='house_use_prid_cd != null '>
			   		and house_use_prid_cd = #{house_use_prid_cd}
			   </if>
			   <if test='search_type != null '>
				   and house.house_yn = #{search_type}
			   </if>
		        and house.tot_reg_cd = bord.tot_reg_cd 
		        </where>
		        group by sido_cd
		    ) emdong
		</if>
	</select>
	
	
	<select id="fisheryhousehold" parameterType="hashmap" resultType="hashmap">
		select (
			select nvl(sum(fmember_cnt),0)  from srv_dt_ogacensus_${year} with (nolock) 
				<where>
				       <if test='oga_div != "0" '>
					   oga_div=#{oga_div}
					</if>
				</where> ) as hhh_cnt, 
		(	
			select nvl(sum(census.fmember_cnt),0) from (select fmember_cnt, sufid  from srv_dt_ogacensus_${year} with (nolock) 
				<where>
				       <if test='oga_div != "0" '>
					   oga_div=#{oga_div}
					</if>
				</where>
			) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${sido}||''||'%' ) bd where census.sufid = bd.sufid
		) as hh_cnt,
		(
			select nvl(sum(census.fmember_cnt),0) from (select fmember_cnt, sufid  from srv_dt_ogacensus_${year} with (nolock) 
			<where>
			       <if test='oga_div != "0" '>
				   oga_div=#{oga_div}
				</if>
			</where>
			) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${sigungu}||''||'%' ) bd where census.sufid = bd.sufid
		) as h_cnt,
		(
			select nvl(sum(census.fmember_cnt),0) from (select fmember_cnt, sufid  from srv_dt_ogacensus_${year} with (nolock)
			<where>
			       <if test='oga_div != "0" '>
				   oga_div=#{oga_div}
				</if>
			</where>	
			) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${emdong}||''||'%' ) bd where census.sufid = bd.sufid
		)  as base_cnt from dual		
	</select>
 
 	
	<select id="forestryhousehold" parameterType="hashmap" resultType="hashmap">
		select (
			select nvl(sum(fmember_cnt),0)  from srv_dt_imgacensus_${year} with (nolock) ) as hhh_cnt, 
		(	
			select nvl(sum(fmember_cnt),0) from srv_dt_imgacensus_${year} with (nolock) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${sido}||''||'%' ) bd where census.sufid = bd.sufid
		) as hh_cnt,
		(
			select nvl(sum(fmember_cnt),0) from srv_dt_imgacensus_${year} with (nolock) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${sigungu}||''||'%' ) bd where census.sufid = bd.sufid
		) as h_cnt,
		(
			select nvl(sum(fmember_cnt),0) from srv_dt_imgacensus_${year} with (nolock) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${emdong}||''||'%' ) bd where census.sufid = bd.sufid
		)  as base_cnt from dual
	</select>
 
	 
	<select id="farmhousehold" parameterType="hashmap" resultType="hashmap">
		select (
			select nvl(sum(fmember_cnt),0)  from srv_dt_nonggacensus_${year} with (nolock) ) as hhh_cnt, 
		(	
			select nvl(sum(fmember_cnt),0) from srv_dt_nonggacensus_${year} with (nolock) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${sido}||''||'%' ) bd where census.sufid = bd.sufid
		) as hh_cnt,
		(
			select nvl(sum(fmember_cnt),0) from srv_dt_nonggacensus_${year} with (nolock) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${sigungu}||''||'%' ) bd where census.sufid = bd.sufid
		) as h_cnt,
		(
			select nvl(sum(fmember_cnt),0) from srv_dt_nonggacensus_${year} with (nolock) census , 
			(select * from srv_pt_bd with (nolock) where tot_reg_cd like ''||${emdong}||''||'%' ) bd where census.sufid = bd.sufid
		)  as base_cnt from dual
	</select>
	
	 
	<select id="householdmember" parameterType="hashmap" resultType="hashmap">
		select nvl(sum(hhh_cnt), 0) hhh_cnt
		     , nvl(sum(hh_cnt), 0) hh_cnt
		     , nvl(sum(h_cnt), 0) h_cnt
		     , nvl(sum(base_cnt), 0) base_cnt
		  from (select nvl(sum(fmember_no),0) hhh_cnt 
		             , (case when substr(bord.adm_cd, 1, 2) = ''||#{sido_cd}||'' then sum(fmember_no) end) as hh_cnt
		             , (case when substr(bord.adm_cd, 1, 5) = ''||#{sido_cd}||''||''||#{sgg_cd}||'' then sum(fmember_no) end) as h_cnt
		             , (case when substr(bord.adm_cd, 1, 7) = ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||'' then sum(fmember_no) end) as base_cnt
			 from (
			 	   select tot_reg_cd
		                , count(fmember_no) fmember_no 
			       from srv_dt_nongimogacensusfamily_${year} with (nolock) nongimogacensusfamily
			       INNER JOIN srv_pt_bd with (nolock) bd
                  		 ON nongimogacensusfamily.sufid = bd.sufid
		           <where>  
		           	  <if test='data_type != null '>
						  and data_type=#{data_type}
					  </if>
					  <if test='gender != "0" '>
						  and gender=#{gender}
					  </if>
					  <if test='age_from != null '>
						  and age <![CDATA[>=]]> #{age_from}
						  and age <![CDATA[<=]]> #{age_to}
					  </if>
		           </where>
		         group by tot_reg_cd) fmember
		             , (select tot_reg_cd 
		                     , a.sido_cd||a.sgg_cd||a.emdong_cd adm_cd 
		                     , b.emdong_nm adm_nm 
		                     , a.base_year as year
		                  from srv_pg_totregbord with (nolock) a, srv_pg_admbord with (nolock) b
		                  where  a.base_year = #{bnd_year}
			                 and a.base_year=b.base_year 
							 and a.sido_cd=b.sido_cd
							 and a.sgg_cd=b.sgg_cd
							 and a.emdong_cd=b.emdong_cd
		                )bord 
		         where fmember.tot_reg_cd = bord.tot_reg_cd 
		         group by  bord.adm_cd ,bord.adm_nm 
		        )
		
	</select>
 
 
 
	<!-- 산업체 코드 조회 -->
	<select id="industrycode" parameterType="hashmap" resultType="hashmap">
		select 
			distinct
		<if test='code_length == null '>
			ksic_1_cd class_code
		  , ksic_1_nm class_nm
		</if>
		<if test='code_length == "1" '>
			ksic_1_cd||ksic_2_cd class_code
		  , ksic_2_nm class_nm
		</if>
		<if test='code_length == "3" '>
			ksic_1_cd||ksic_3_cd class_code
		  , ksic_3_nm class_nm
		</if>
		<if test='code_length == "4" '>
			ksic_1_cd||ksic_4_cd class_code
		  , ksic_4_nm class_nm
		</if>
		<if test='code_length == "5" or code_length == "6" '>	
			ksic_1_cd||ksic_5_cd class_code
		  , ksic_5_nm class_nm
		</if>
		from cmm_cd_corpclass with (nolock) 
		where 
			class_deg = #{class_deg}
			and ksic_1_cd != '0'
		<if test='code_length != null '>
			and ksic_1_cd=#{ksic1}
		</if>
		<if test='class_code != null and code_length != "1" '>
			and ksic_5_cd like #{ksic5}||'%'
		</if> 
		group by 
		<if test='code_length == null '>
			ksic_1_cd
		  , ksic_1_nm
		</if>
		<if test='code_length == "1" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		</if>
		<if test='code_length == "3" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_nm
		  , ksic_3_nm
		</if>
		<if test='code_length == "4" '>
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_cd
		  , ksic_3_nm
		  , ksic_4_cd
		  , ksic_4_nm
		</if>
		<if test='code_length == "5" or code_length == "6" '>	
			ksic_1_cd
		  , ksic_1_nm
		  , ksic_2_cd
		  , ksic_2_nm
		  , ksic_3_cd
		  , ksic_3_nm
		  , ksic_4_cd
		  , ksic_4_nm
		  , ksic_5_cd
		  , ksic_5_nm
		</if>
	</select>
	
	<!-- 2016. 10. 06 수정  --> 
	<select id="company" parameterType="hashmap" resultType="hashmap">
		select 
			(select nvl(sum(corp_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemesgg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclasssgg	 with (nolock)
				</if>
				where base_year = ''||#{year}||''	
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) corp_hhh_cnt ,
			(select nvl(sum(corp_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemesgg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclasssgg	 with (nolock)
				</if>
				where base_year = #{year} and sido_cd = #{sido_cd} 
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) corp_hh_cnt ,
			(select nvl(sum(corp_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemesgg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclasssgg	 with (nolock)
				</if>
				where base_year = #{year} and sido_cd = #{sido_cd} and sgg_cd = #{sgg_cd}
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) corp_h_cnt ,
			(select nvl(sum(corp_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemereg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclassreg	 with (nolock)
				</if>
				where base_year = #{year} and tot_reg_cd like  #{sido_cd}||#{sgg_cd}||nvl(#{emdong_cd},'NULL')||'%' 
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) corp_base_cnt ,
			(select nvl(sum(employee_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemesgg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclasssgg	 with (nolock)
				</if>
				where base_year = ''||#{year}||''	
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) worker_hhh_cnt ,
			(select nvl(sum(employee_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemesgg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclasssgg	 with (nolock)
				</if>
				where base_year = #{year} and sido_cd = #{sido_cd} 
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) worker_hh_cnt ,
			(select nvl(sum(employee_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemesgg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclasssgg	 with (nolock)
				</if>
				where base_year = #{year} and sido_cd = #{sido_cd} and sgg_cd = #{sgg_cd}
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) worker_h_cnt ,
			(select nvl(sum(employee_cnt),0) from 
				<if test='theme_cd != null'>
					srv_dt_corpthemereg with (nolock)
				</if>
				<if test='theme_cd == null'>
					srv_dt_corpclassreg	 with (nolock)
				</if>
				where base_year = #{year} and tot_reg_cd like  #{sido_cd}||#{sgg_cd}||nvl(#{emdong_cd},'NULL')||'%' 
				<if test='code_length != null'>
		         	<if test='code_length == 1'>
						and ksic_1_cd = #{ksic1} 
					</if>	
					<if test='code_length != 1'>
						and ksic_5_cd like #{ksic5}||'%' 
					</if>
				</if>
		        <if test='theme_cd != null'>
					and theme_cd like #{theme_cd}||'%'
				</if>
			) worker_base_cnt 
		from dual
	</select>
	
	<!-- 9월 서비스 -->
	<!-- 결합조건 (인구, 가구 또는 인구, 주택 또는 가구, 주택 또는 인구,가구,주택 결합일 경우) -->
	<select id="fusionstats" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(fmember_no) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(fmember_no) <![CDATA[>]]> 4 THEN COUNT(fmember_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	ppl.sufid,
		                					ppl.fmember_no,
		                					family.adm_cd,
											family.resid_ed_no,
											family.resid_no,
											family.family_no,
		                					family.rd_tot_fmember_cnt,
		                					bd.tot_reg_cd
		            				from
		            						srv_dt_ppltncensus_${year} with (nolock)  ppl ,
											srv_dt_familycensus_${year} with (nolock)  family,
											srv_pt_bd with (nolock)  bd
									where
		 									ppl.ppltn_family_join_key = family.ppltn_family_join_key
											and ppl.sufid = bd.sufid 
											
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
	                							and family.house_yn = 'Y' 
	 										</if>
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
	                							and family.family_yn = 'Y'
	                						</if>
	                						<if test='(gender != "0") and (gender != null)'>
												and gender=#{gender}
											</if>
											<if test='age_from != null '>
												and age <![CDATA[>=]]> #{age_from}
												and age <![CDATA[<=]]> #{age_to}
											</if>
											<if test='edu_level != null '>
												and rd_edu_level in
												<foreach  collection="edu_level" item="edu" open="(" separator="," close=")">
												  	#{edu}
												</foreach>
											</if>
											<if test='mrg_state != null '>
												and rd_mrg_state in
												<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
												  	#{mrg}
												</foreach>
											</if>
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='ocptn_type != null '>
												   and rd_ocptn_type in
												<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
												  	#{ocptn}
												</foreach>
											</if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='const_year != null '>
											    and rd_const_year = #{const_year}
										    </if>
										    <if test='house_area_param != null '>
										      and ${house_area_param}
										   </if>
<!-- 										    <if test='bdspace_from != null '> -->
<!-- 											    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 											    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 										    </if> -->
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	A.tot_reg_cd as adm_cd,
			        		<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(A.fmember_no) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(A.fmember_no) <![CDATA[>]]> 4 THEN COUNT(A.fmember_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no||B.family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no||B.family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no||B.family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.adm_cd||B.resid_ed_no||B.resid_no) END as data_cnt
							</if>
				    	from
				        		(
	                				select 	ppl.*
	                				, 			bd.sufid,
                						<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
              								<!-- 2020년수정변경 시작 (ggm) -->
                							<if test='is_zoom_lvl4 == "Y"'>
                								to_char(decode(substr(bd.tot_reg_cd, 5, 1), '0', substr(bd.tot_reg_cd, 1, 5), substr(bd.tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
                							</if>
                							<if test='is_zoom_lvl4 != "Y"'>
                								substr(bd.tot_reg_cd, 1, 5) as tot_reg_cd
                							</if>
                					       	<!-- 2020년수정변경 끝 -->                						
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							bd.tot_reg_cd
                						</if>													
									from		srv_dt_ppltncensus_${year} with (nolock) ppl,								
												(															
													select  	sufid,											
																tot_reg_cd										
													from    	srv_pt_bd with (nolock)
													<!-- 20200417 수정 시작 (ggm) -->
													where
													<if test='is_non_self == "Y"'>
														tot_reg_cd like ${adm_cd_nonSelf} || '%'						
													</if>
													<if test='is_non_self != "Y"'>
														tot_reg_cd like ${adm_cd} || '%'									
													</if>
													<!-- 20200417 수정 끝 -->													
												) bd							
									where ppl.sufid = bd.sufid							 
	                					<if test='(gender != "0") and (gender != null)'>
											and gender=#{gender}
										</if>
										<if test='age_from != null '>
											and age <![CDATA[>=]]> #{age_from}
											and age <![CDATA[<=]]> #{age_to}
										</if>
										<if test='edu_level != null '>
											and rd_edu_level in
											<foreach  collection="edu_level" item="edu" open="(" separator="," close=")">
											  	#{edu}
											</foreach>
										</if>
										<if test='mrg_state != null '>
											and rd_mrg_state in
											<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
											  	#{mrg}
											</foreach>
										</if>
				        		) A,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_familycensus_${year} with (nolock)  
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
		                							and house_yn = 'Y'
		 										</if>
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
		                							and family_yn = 'Y' 
		                						</if>
		                						<if test='household_type != null '>
													and rd_household_type in
												  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
												 	 	#{household}
												  	</foreach>
											    </if>
												<if test='ocptn_type != null '>
													   and rd_ocptn_type in
													<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
													  	#{ocptn}
													</foreach>
												</if>
												<if test='house_type != null '>
													and rd_resid_1_type in
													<foreach  collection="house_type" item="type" open="(" separator="," close=")">
													  	#{type}
													</foreach>
											    </if>
											    <if test='const_year != null '>
												    and rd_const_year = #{const_year}
											    </if>
											    <if test='house_area_param != null '>
											      and ${house_area_param}
											   </if>
<!-- 											    <if test='bdspace_from != null '> -->
<!-- 												    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 												    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 											    </if> -->
				                			) family,
				                			(
				                				select	sufid
				                				from	srv_pt_bd with (nolock)
												<!-- 20200417 수정 시작 (ggm) -->
												where
												<if test='is_non_self == "Y"'>
													tot_reg_cd like ${adm_cd_nonSelf} || '%'								
												</if>
												<if test='is_non_self != "Y"'>
													tot_reg_cd like ${adm_cd} || '%'									
												</if>
												<!-- 20200417 수정 끝 -->				                				
				                			) bd
				           	 		where	family.sufid = bd.sufid
				        		) B
				    	where	A.ppltn_family_join_key = B.ppltn_family_join_key
				    	group by	A.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										<!-- 2020년수정변경 시작 (ggm) -->	
										<if test='is_zoom_lvl4 == "Y"'>
									    	sido_cd||sgg_cd as adm_cd,
											sgg_nm as adm_nm
										</if>
										<if test='is_zoom_lvl4 != "Y"'>
											sido_cd||sgg_cd||emdong_cd as adm_cd,
											emdong_nm as adm_nm
										</if>							    
									    <!-- 2020년수정변경 끝 -->									
									</if>
								<!-- 2020년수정변경 시작 (ggm) -->	
							    from							    
								<if test='is_zoom_lvl4 == "Y"'>
									SRV_PG_ATDRCBORD with (nolock)
								</if>
								<if test='is_zoom_lvl4 != "Y"'>
									srv_pg_admbord with (nolock)
								</if>							    
							    <!-- 2020년수정변경 끝 -->									
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>

	<!-- 결합조건 (가구, 주택 결합일 경우) -->
	<select id="fusionstatsHouse" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	family.sufid,
		                					family.adm_cd,
											family.resid_ed_no,
											family.resid_no,
											family.family_no,
		                					family.rd_tot_fmember_cnt,
		                					bd.tot_reg_cd
		            				from
											srv_dt_familycensus_${year} with (nolock)  family,
											srv_pt_bd with (nolock)  bd
									where
		 									1=1
											and family.sufid = bd.sufid 
	                						and family.house_yn = 'Y' 
	                						and family.family_yn = 'Y'
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='ocptn_type != null '>
												   and rd_ocptn_type in
												<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
												  	#{ocptn}
												</foreach>
											</if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='const_year != null '>
											    and rd_const_year = #{const_year}
										    </if>
										    <if test='house_area_param != null '>
										      	and ${house_area_param}
										   	</if>
<!-- 										    <if test='bdspace_from != null '> -->
<!-- 											    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 											    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 										    </if> -->
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	tot_reg_cd as adm_cd,
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no||family_no) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct adm_cd||resid_ed_no||resid_no) <![CDATA[>]]> 4 THEN 
												COUNT(distinct adm_cd||resid_ed_no||resid_no) END as data_cnt
							</if>
				    	from
	                			(
	                				select * 
               						from 	srv_dt_familycensus_${year} with (nolock) 
               						where	1=1
              						and house_yn = 'Y'
              						and family_yn = 'Y' 
               						<if test='household_type != null '>
										and rd_household_type in
									  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
									 	 	#{household}
									  	</foreach>
								    </if>
									<if test='ocptn_type != null '>
										   and rd_ocptn_type in
										<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
										  	#{ocptn}
										</foreach>
									</if>
									<if test='house_type != null '>
										and rd_resid_1_type in
										<foreach  collection="house_type" item="type" open="(" separator="," close=")">
										  	#{type}
										</foreach>
								    </if>
								    <if test='const_year != null '>
									    and rd_const_year = #{const_year}
								    </if>
								    <if test='house_area_param != null '>
								      	and ${house_area_param}
								   	</if>
<!-- 								    <if test='bdspace_from != null '> -->
<!-- 									    and rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from} -->
<!-- 									    and rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to} -->
<!-- 								    </if> -->
	                			) family,
	                			(
	                				select	sufid,
	                				<if test='(adm_length  == "2" and low_search  == "1")'>
		       							substr(tot_reg_cd, 1, 2) as tot_reg_cd
		       						</if>
		       						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
              							<!-- 2020년수정변경 시작 (ggm) -->
               							<if test='is_zoom_lvl4 == "Y"'>
               								to_char(decode(substr(tot_reg_cd, 5, 1), '0', substr(tot_reg_cd, 1, 5), substr(tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
               							</if>
               							<if test='is_zoom_lvl4 != "Y"'>
               								substr(tot_reg_cd, 1, 5) as tot_reg_cd
               							</if>
               					       	<!-- 2020년수정변경 끝 -->		       						
		       						</if>
		       						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
		       							substr(tot_reg_cd, 1, 7) as tot_reg_cd
		       						</if>
		       						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
		       							tot_reg_cd
		       						</if>
	                				from	srv_pt_bd with (nolock)
									<!-- 20200417 수정 시작 (ggm) -->
									where
									<if test='is_non_self == "Y"'>
										tot_reg_cd like ${adm_cd_nonSelf} || '%'						
									</if>
									<if test='is_non_self != "Y"'>
										tot_reg_cd like ${adm_cd} || '%'									
									</if>
									<!-- 20200417 수정 끝 -->	                				 
	                			) bd
	           	 		where	family.sufid = bd.sufid
				    	group by	 tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										<!-- 2020년수정변경 시작 (ggm) -->	
										<if test='is_zoom_lvl4 == "Y"'>
									    	sido_cd||sgg_cd as adm_cd,
											sgg_nm as adm_nm
										</if>
										<if test='is_zoom_lvl4 != "Y"'>
											sido_cd||sgg_cd||emdong_cd as adm_cd,
											emdong_nm as adm_nm
										</if>							    
									    <!-- 2020년수정변경 끝 -->									
									</if>
								<!-- 2020년수정변경 시작 (ggm) -->	
							    from							    
								<if test='is_zoom_lvl4 == "Y"'>
									SRV_PG_ATDRCBORD with (nolock)
								</if>
								<if test='is_zoom_lvl4 != "Y"'>
									srv_pg_admbord with (nolock)
								</if>							    
							    <!-- 2020년수정변경 끝 -->
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>
	
	<!-- 9월 서비스 -->
	<!-- 결합조건 (인구, 가구 또는 인구, 주택 또는 인구,가구,주택 결합일 경우) -->
	<select id="fusionstats_2015" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "population" '>
	        					<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	ppl.sufid,
		            						<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
		                					<!-- ppl.person_key||ppl.family_key as psn_key,-->
		                					<!-- ppl.person_key as psn_key,-->
		                					family.adm_cd,
											family.family_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_key,
		                					bd.tot_reg_cd
		            				from
		            						srv_dt_ppltncensus_${year} with (nolock)  ppl ,
											srv_dt_familycensus_${year}with (nolock)  family,
											srv_dt_housecensus_${year} with (nolock)  house,
											srv_pt_bd with (nolock)  bd
									where
		 									ppl.family_key = family.family_key
											and family.resid_key = house.resid_key
											and ppl.sufid = bd.sufid 
											
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
	                							and house.house_yn = 'Y' 
	 										</if>
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
	                							and family.family_yn = 'Y'
	                						</if>
	                						<if test='(gender != "0") and (gender != null)'>
												and gender = #{gender}
											</if>
											<if test='age_from != null '>
												and age <![CDATA[>=]]> #{age_from}
												and age <![CDATA[<=]]> #{age_to}
											</if>
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
										    <!-- mng_s 20201110 const_year 추가 -->
		 										<if test='const_year != null '>
													and rd_const_year=#{const_year}
											    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	A.tot_reg_cd as adm_cd,
			        		<if test='combine_base  == "population" '>
			        			<!-- 2017. 06. 27 j.h.Seok DB 표준화 작업 -->
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct B.family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct C.resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct C.resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct C.resid_key) END as data_cnt
							</if>
				    	from
				        		(
	                				select 	ppl.*
	                				, 			bd.sufid,
                						<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
	              							<!-- 2020년수정변경 시작 (ggm) -->
	               							<if test='is_zoom_lvl4 == "Y"'>
	               								to_char(decode(substr(bd.tot_reg_cd, 5, 1), '0', substr(bd.tot_reg_cd, 1, 5), substr(bd.tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
	               							</if>
	               							<if test='is_zoom_lvl4 != "Y"'>
	               								substr(bd.tot_reg_cd, 1, 5) as tot_reg_cd
	               							</if>
	               					       	<!-- 2020년수정변경 끝 -->                						
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							bd.tot_reg_cd
                						</if>													
									from		srv_dt_ppltncensus_${year} with (nolock) ppl,								
												(															
													select  	sufid,											
																tot_reg_cd										
													from    	srv_pt_bd with (nolock)
													<!-- 20200417 수정 시작 (ggm) -->
													where
													<if test='is_non_self == "Y"'>
														tot_reg_cd like ${adm_cd_nonSelf} || '%'						
													</if>
													<if test='is_non_self != "Y"'>
														tot_reg_cd like ${adm_cd} || '%'									
													</if>
													<!-- 20200417 수정 끝 -->													 										
												) bd							
									where ppl.sufid = bd.sufid							 
	                					<if test='(gender != "0") and (gender != null)'>
											and gender = #{gender}
										</if>
										<if test='age_from != null '>
											and age <![CDATA[>=]]> #{age_from}
											and age <![CDATA[<=]]> #{age_to}
										</if>
				        		) A,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_familycensus_${year} with (nolock) 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
		                							and family_yn = 'Y' 
		                						</if>
		                						<if test='household_type != null '>
													and rd_household_type in
												  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
												 	 	#{household}
												  	</foreach>
											    </if>
				                			) family,
				                			(
				                				select	sufid
				                				from	srv_pt_bd with (nolock)
												<!-- 20200417 수정 시작 (ggm) -->
												where
												<if test='is_non_self == "Y"'>
													tot_reg_cd like ${adm_cd_nonSelf} || '%'								
												</if>
												<if test='is_non_self != "Y"'>
													tot_reg_cd like ${adm_cd} || '%'									
												</if>
												<!-- 20200417 수정 끝 -->
				                			) bd
				           	 		where	family.sufid = bd.sufid
				        		) B,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_housecensus_${year} with (nolock) 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
		                							and house_yn = 'Y'
		 										</if>
												<if test='house_type != null '>
													and rd_resid_1_type in
													<foreach  collection="house_type" item="type" open="(" separator="," close=")">
													  	#{type}
													</foreach>
											    </if>
											    <if test='house_area_cd != null '>
													and house_area_cd in
													<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
														#{house_area_type}
													</foreach>
												</if>
											    <if test='house_use_prid_cd != null '>
												    and house_use_prid_cd = #{house_use_prid_cd}
											    </if>
											    <!-- mng_s 20201110 const_year 추가 -->
		 										<if test='const_year != null '>
													and rd_const_year=#{const_year}
											    </if>
				                			) house,
				                			(
				                				select	sufid
				                				from	srv_pt_bd with (nolock)
												<!-- 20200417 수정 시작 (ggm) -->
												where
												<if test='is_non_self == "Y"'>
													tot_reg_cd like ${adm_cd_nonSelf} || '%'								
												</if>
												<if test='is_non_self != "Y"'>
													tot_reg_cd like ${adm_cd} || '%'									
												</if>
												<!-- 20200417 수정 끝 -->				                				
				                			) bd
				           	 		where	house.sufid = bd.sufid
				        		) C
				    	where	A.family_key = B.family_key
								and B.resid_key = C.resid_key 
				    	group by	A.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										<!-- 2020년수정변경 시작 (ggm) -->	
										<if test='is_zoom_lvl4 == "Y"'>
									    	sido_cd||sgg_cd as adm_cd,
											sgg_nm as adm_nm
										</if>
										<if test='is_zoom_lvl4 != "Y"'>
											sido_cd||sgg_cd||emdong_cd as adm_cd,
											emdong_nm as adm_nm
										</if>							    
									    <!-- 2020년수정변경 끝 -->									
									</if>
								<!-- 2020년수정변경 시작 (ggm) -->	
							    from							    
								<if test='is_zoom_lvl4 == "Y"'>
									SRV_PG_ATDRCBORD with (nolock)
								</if>
								<if test='is_zoom_lvl4 != "Y"'>
									srv_pg_admbord with (nolock)
								</if>							    
							    <!-- 2020년수정변경 끝 -->									
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>

	<!-- 9월 서비스 -->
	<!-- 결합조건 (가구, 주택 결합일 경우) -->
	<select id="fusionstatsHouse_2015" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	family.sufid,
		                					family.adm_cd,
											family.family_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_key,
		                					bd.tot_reg_cd
		            				from
											srv_dt_familycensus_${year} with (nolock)  family,
											srv_dt_housecensus_${year} with (nolock)  house,
											srv_pt_bd with (nolock)  bd
									where
		 									1=1
											and family.sufid = bd.sufid
											and family.resid_key = house.resid_key											
	                						and house.house_yn = 'Y' 
	                						and family.family_yn = 'Y'
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	family_pt.tot_reg_cd as adm_cd,
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct family_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct family.resid_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family.resid_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family.resid_key) END as data_cnt
							</if>
				    	from
	                			(
	                				select * from
	                				(
               							select * from 	srv_dt_familycensus_${year1} with (nolock) 
               							where	1=1
               							and family_yn = 'Y'
               							<if test='household_type != null '>
											and rd_household_type in
									  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
									 	 	#{household}
									  	</foreach>
								    </if>
	                				) family,
	                				(
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
              								<!-- 2020년수정변경 시작 (ggm) -->
                							<if test='is_zoom_lvl4 == "Y"'>
                								to_char(decode(substr(tot_reg_cd, 5, 1), '0', substr(tot_reg_cd, 1, 5), substr(tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
                							</if>
                							<if test='is_zoom_lvl4 != "Y"'>
                								substr(tot_reg_cd, 1, 5) as tot_reg_cd
                							</if>
                					       	<!-- 2020년수정변경 끝 -->                						
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd with (nolock)
										<!-- 20200417 수정 시작 (ggm) -->
										where
										<if test='is_non_self == "Y"'>
											tot_reg_cd like ${adm_cd_nonSelf} || '%'						
										</if>
										<if test='is_non_self != "Y"'>
											tot_reg_cd like ${adm_cd} || '%'									
										</if>
										<!-- 20200417 수정 끝 -->	                					 
	                				) bd
	                				where family.sufid = bd.sufid
	                			) family_pt,	
								(
	                				select * from
	                				( 
               							select * from srv_dt_housecensus_${year2} with (nolock) 
               							where	1=1
               							and house_yn = 'Y'
										<if test='house_type != null '>
											and rd_resid_1_type in
											<foreach  collection="house_type" item="type" open="(" separator="," close=")">
										  		#{type}
											</foreach>
								    	</if>
								    	<if test='house_area_cd != null '>
											and house_area_cd in
											<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
												#{house_area_type}
											</foreach>
										</if>
								    	<if test='house_use_prid_cd != null '>
									    	and house_use_prid_cd = #{house_use_prid_cd}
								    	</if>
								    	<!-- mng_s 20201110 const_year 추가 -->
		 										<if test='const_year != null '>
													and rd_const_year=#{const_year}
											    </if>
	                				) house,
	                				( 
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
              								<!-- 2020년수정변경 시작 (ggm) -->
                							<if test='is_zoom_lvl4 == "Y"'>
                								to_char(decode(substr(tot_reg_cd, 5, 1), '0', substr(tot_reg_cd, 1, 5), substr(tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
                							</if>
                							<if test='is_zoom_lvl4 != "Y"'>
                								substr(tot_reg_cd, 1, 5) as tot_reg_cd
                							</if>
                					       	<!-- 2020년수정변경 끝 -->                						
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd with (nolock)
										<!-- 20200417 수정 시작 (ggm) -->
										where
										<if test='is_non_self == "Y"'>
											tot_reg_cd like ${adm_cd_nonSelf} || '%'						
										</if>
										<if test='is_non_self != "Y"'>
											tot_reg_cd like ${adm_cd} || '%'									
										</if>
										<!-- 20200417 수정 끝 -->	                					 
	                				) bd
	                				where house.sufid = bd.sufid
	                			) house_pt 
	           	 		where family_pt.resid_key = house_pt.resid_key
				    	group by family_pt.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										<!-- 2020년수정변경 시작 (ggm) -->	
										<if test='is_zoom_lvl4 == "Y"'>
									    	sido_cd||sgg_cd as adm_cd,
											sgg_nm as adm_nm
										</if>
										<if test='is_zoom_lvl4 != "Y"'>
											sido_cd||sgg_cd||emdong_cd as adm_cd,
											emdong_nm as adm_nm
										</if>							    
									    <!-- 2020년수정변경 끝 -->									
									</if>
								<!-- 2020년수정변경 시작 (ggm) -->	
							    from							    
								<if test='is_zoom_lvl4 == "Y"'>
									SRV_PG_ATDRCBORD with (nolock)
								</if>
								<if test='is_zoom_lvl4 != "Y"'>
									srv_pg_admbord with (nolock)
								</if>							    
							    <!-- 2020년수정변경 끝 -->									
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>
	
	<!-- mng_s 2017. 10. 24 j.h.Seok 2015년 이후 등록센서스 결합조건 쿼리 추가 -->
	<select id="fusionstats_2015_mt" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_join_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	ppl.sufid,
		                					family.adm_cd,
											family.ppltn_family_join_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_join_key,
		                					bd.tot_reg_cd
		            				from
		            						srv_dt_ppltncensus_${year} with (nolock)  ppl ,
											srv_dt_familycensus_${year} with (nolock)  family,
											srv_dt_housecensus_${year} with (nolock)  house,
											srv_pt_bd with (nolock)  bd
									where
		 									ppl.ppltn_family_join_key = family.ppltn_family_join_key
											and family.resid_join_key = house.resid_join_key
											and ppl.sufid = bd.sufid 
											
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
	                							and house.house_yn = 'Y' 
	 										</if>
	                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
	                							and family.family_yn = 'Y'
	                						</if>
	                						<if test='(gender != "0") and (gender != null)'>
												and gender = #{gender}
											</if>
											<if test='age_from != null '>
												and age <![CDATA[>=]]> #{age_from}
												and age <![CDATA[<=]]> #{age_to}
											</if>
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	A.tot_reg_cd as adm_cd,
			        		<if test='combine_base  == "population" '>
	        					CASE WHEN COUNT(*) <![CDATA[<=]]> 4 THEN 'N/A' 
	        							WHEN COUNT(*) <![CDATA[>]]> 4 THEN 
												COUNT(*) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct B.ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct B.ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct B.ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct C.resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct C.resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct C.resid_join_key) END as data_cnt
							</if>
				    	from
				        		(
	                				select 	ppl.*
	                				, 			bd.sufid,
                						<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
                							<!-- 2020년수정변경 시작 (ggm) -->
                							<if test='is_zoom_lvl4 == "Y"'>
                								to_char(decode(substr(bd.tot_reg_cd, 5, 1), '0', substr(bd.tot_reg_cd, 1, 5), substr(bd.tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
                							</if>
                							<if test='is_zoom_lvl4 != "Y"'>
                								substr(bd.tot_reg_cd, 1, 5) as tot_reg_cd
                							</if>
                					       	<!-- 2020년수정변경 끝 -->                						
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(bd.tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							bd.tot_reg_cd
                						</if>													
									from		srv_dt_ppltncensus_${year} with (nolock) ppl,								
												(															
													select  	sufid,											
																tot_reg_cd										
													from    	srv_pt_bd with (nolock)
													<!-- 20200417 수정 시작 (ggm) -->
													where
													<if test='is_non_self == "Y"'>
														tot_reg_cd like ${adm_cd_nonSelf} || '%'						
													</if>
													<if test='is_non_self != "Y"'>
														tot_reg_cd like ${adm_cd} || '%'									
													</if>
													<!-- 20200417 수정 끝 -->							
												) bd							
									where ppl.sufid = bd.sufid							 
	                					<if test='(gender != "0") and (gender != null)'>
											and gender = #{gender}
										</if>
										<if test='age_from != null '>
											and age <![CDATA[>=]]> #{age_from}
											and age <![CDATA[<=]]> #{age_to}
										</if>
				        		) A,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_familycensus_${year} with (nolock) 
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_household") or (fusion_query_type == "household_house")'>
		                							and family_yn = 'Y' 
		                						</if>
		                						<if test='household_type != null '>
													and rd_household_type in
												  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
												 	 	#{household}
												  	</foreach>
											    </if>
				                			) family,
				                			(
				                				select	sufid
				                				from	srv_pt_bd with (nolock)
												<!-- 20200417 수정 시작 (ggm) -->
												where
												<if test='is_non_self == "Y"'>
													tot_reg_cd like ${adm_cd_nonSelf} || '%'								
												</if>
												<if test='is_non_self != "Y"'>
													tot_reg_cd like ${adm_cd} || '%'									
												</if>
												<!-- 20200417 수정 끝 -->				                				 
				                			) bd
				           	 		where	family.sufid = bd.sufid
				        		) B,
				        		(
				            		select * 
				            		from
				                			(
				                				select * 
		                						from 	srv_dt_housecensus_${year} with (nolock)  
		                						where	1=1
		                						<if test='(fusion_query_type == "population_household_house") or (fusion_query_type == "population_house") or (fusion_query_type == "household_house")'>
		                							and house_yn = 'Y'
		 										</if>
		 										
		 										<!-- mng_s 20201110 const_year 추가 -->
		 										<if test='const_year != null '>
													and rd_const_year=#{const_year}
											    </if>
											    
												<if test='house_type != null '>
													and rd_resid_1_type in
													<foreach  collection="house_type" item="type" open="(" separator="," close=")">
													  	#{type}
													</foreach>
											    </if>
											    <if test='house_area_cd != null '>
													and house_area_cd in
													<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
														#{house_area_type}
													</foreach>
												</if>
											    <if test='house_use_prid_cd != null '>
												    and house_use_prid_cd = #{house_use_prid_cd}
											    </if>
				                			) house,
				                			(
				                				select	sufid
				                				from	srv_pt_bd with (nolock)
												<!-- 20200417 수정 시작 (ggm) -->
												where
												<if test='is_non_self == "Y"'>
													tot_reg_cd like ${adm_cd_nonSelf} || '%'								
												</if>
												<if test='is_non_self != "Y"'>
													tot_reg_cd like ${adm_cd} || '%'									
												</if>
												<!-- 20200417 수정 끝 -->				                				 
				                			) bd
				           	 		where	house.sufid = bd.sufid
				        		) C
				    	where	A.ppltn_family_join_key = B.ppltn_family_join_key
								and B.resid_join_key = C.resid_join_key 
				    	group by	A.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										<!-- 2020년수정변경 시작 (ggm) -->	
										<if test='is_zoom_lvl4 == "Y"'>
									    	sido_cd||sgg_cd as adm_cd,
											sgg_nm as adm_nm
										</if>
										<if test='is_zoom_lvl4 != "Y"'>
											sido_cd||sgg_cd||emdong_cd as adm_cd,
											emdong_nm as adm_nm
										</if>							    
									    <!-- 2020년수정변경 끝 -->									
									</if>
								<!-- 2020년수정변경 시작 (ggm) -->	
							    from							    
								<if test='is_zoom_lvl4 == "Y"'>
									SRV_PG_ATDRCBORD with (nolock)
								</if>
								<if test='is_zoom_lvl4 != "Y"'>
									srv_pg_admbord with (nolock)
								</if>							    
							    <!-- 2020년수정변경 끝 -->									
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>

	
	<!-- 결합조건 (가구, 주택 결합일 경우) -->
	<select id="fusionstatsHouse_2015_mt" parameterType="hashmap" resultType="hashmap">
		<!-- 전국일 경우 -->
		<if test='adm_cd == null'>
			select bord.sido_cd as adm_cd,    
					bord.sido_nm adm_nm,        
					A.data_cnt  
			from 
					(
		    			select	substr(tot_reg_cd, 1, 2) sido_cd, 
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct resid_join_key) END as data_cnt
							</if>
		    			from 
		       		 			(
		            				select	family.sufid,
		                					family.adm_cd,
											family.ppltn_family_join_key,
		                					family.rd_tot_fmember_cnt,
											house.resid_join_key,
		                					bd.tot_reg_cd
		            				from
											srv_dt_familycensus_${year} with (nolock)  family,
											srv_dt_housecensus_${year} with (nolock)  house,
											srv_pt_bd with (nolock)  bd
									where
		 									1=1
											and family.sufid = bd.sufid
											and family.resid_join_key = house.resid_join_key											
	                						and house.house_yn = 'Y' 
	                						and family.family_yn = 'Y'
											<if test='household_type != null '>
												and rd_household_type in
											  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
											 	 	#{household}
											  	</foreach>
										    </if>
											<if test='house_type != null '>
												and rd_resid_1_type in
												<foreach  collection="house_type" item="type" open="(" separator="," close=")">
												  	#{type}
												</foreach>
										    </if>
										    <if test='house_area_cd != null '>
												and house_area_cd in
												<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
													#{house_area_type}
												</foreach>
											</if>
										    <if test='house_use_prid_cd != null '>
											    and house_use_prid_cd = #{house_use_prid_cd}
										    </if>
										    <!-- mng_s 20201110 const_year 추가 -->
		 										<if test='const_year != null '>
													and rd_const_year=#{const_year}
											    </if>
								)
						group by substr(tot_reg_cd, 1, 2)
					) A,
					(
						select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
					) bord
			where A.sido_cd = bord.sido_cd
		</if>
		
		<!-- 나머지 시도, 시군구, 읍면동일 경우 -->
		<if test='adm_cd != null'>
			select	AA.adm_cd,
					AA.data_cnt
				<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
					,bord.adm_nm
				</if>
			from
					(
				    	select	family_pt.tot_reg_cd as adm_cd,
	        				<if test='combine_base  == "household" '>
	        					CASE WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct ppltn_family_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct ppltn_family_join_key) END as data_cnt
	        				</if>
	        				<if test='combine_base  == "house" '>
								CASE WHEN COUNT(distinct family_pt.resid_join_key) <![CDATA[<=]]> 4 THEN 'N/A'
										WHEN COUNT(distinct family_pt.resid_join_key) <![CDATA[>]]> 4 THEN 
												COUNT(distinct family_pt.resid_join_key) END as data_cnt
							</if>
				    	from
	                			(
	                				select * from
	                				(
               							select * from 	srv_dt_familycensus_${year1} with (nolock) 
               							where	1=1
               							and family_yn = 'Y'
               							<if test='household_type != null '>
											and rd_household_type in
									  	<foreach collection="household_type" item="household" open="(" separator="," close=")">
									 	 	#{household}
									  	</foreach>
								    </if>
	                				) family,
	                				(
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
              								<!-- 2020년수정변경 시작 (ggm) -->
                							<if test='is_zoom_lvl4 == "Y"'>
                								to_char(decode(substr(tot_reg_cd, 5, 1), '0', substr(tot_reg_cd, 1, 5), substr(tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
                							</if>
                							<if test='is_zoom_lvl4 != "Y"'>
                								substr(tot_reg_cd, 1, 5) as tot_reg_cd
                							</if>
                					       	<!-- 2020년수정변경 끝 -->                						
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd with (nolock)
										<!-- 20200417 수정 시작 (ggm) -->
										where
										<if test='is_non_self == "Y"'>
											tot_reg_cd like ${adm_cd_nonSelf} || '%'						
										</if>
										<if test='is_non_self != "Y"'>
											tot_reg_cd like ${adm_cd} || '%'									
										</if>
										<!-- 20200417 수정 끝 -->	                					
	                				) bd
	                				where family.sufid = bd.sufid
	                			) family_pt,	
								(
	                				select * from
	                				( 
               							select * from srv_dt_housecensus_${year2} with (nolock) 
               							where	1=1
               							and house_yn = 'Y'
										<if test='house_type != null '>
											and rd_resid_1_type in
											<foreach  collection="house_type" item="type" open="(" separator="," close=")">
										  		#{type}
											</foreach>
								    	</if>
								    	<if test='house_area_cd != null '>
											and house_area_cd in
											<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
												#{house_area_type}
											</foreach>
										</if>
								    	<if test='house_use_prid_cd != null '>
									    	and house_use_prid_cd = #{house_use_prid_cd}
								    	</if>
								    	<!-- mng_s 20201110 const_year 추가 -->
 										<if test='const_year != null '>
											and rd_const_year=#{const_year}
									    </if>
	                				) house,
	                				( 
	                					select	sufid,
	                					<if test='(adm_length  == "2" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 2) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
              								<!-- 2020년수정변경 시작 (ggm) -->
                							<if test='is_zoom_lvl4 == "Y"'>
                								to_char(decode(substr(tot_reg_cd, 5, 1), '0', substr(tot_reg_cd, 1, 5), substr(tot_reg_cd, 1, 4) || '0')) as tot_reg_cd
                							</if>
                							<if test='is_zoom_lvl4 != "Y"'>
                								substr(tot_reg_cd, 1, 5) as tot_reg_cd
                							</if>
                					       	<!-- 2020년수정변경 끝 -->                						
                						</if>
                						<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
                							substr(tot_reg_cd, 1, 7) as tot_reg_cd
                						</if>
                						<if test='(adm_length  == "7" and low_search  == "0") or adm_length == "13" '>
                							tot_reg_cd
                						</if>						
	                					from	srv_pt_bd with (nolock)
										<!-- 20200417 수정 시작 (ggm) -->
										where
										<if test='is_non_self == "Y"'>
											tot_reg_cd like ${adm_cd_nonSelf} || '%'						
										</if>
										<if test='is_non_self != "Y"'>
											tot_reg_cd like ${adm_cd} || '%'
										</if>
										<!-- 20200417 수정 끝 -->	                					
	                				) bd
	                				where house.sufid = bd.sufid
	                			) house_pt 
	           	 		where family_pt.resid_join_key = house_pt.resid_join_key
				    	group by family_pt.tot_reg_cd
					) AA
					<!-- 시도, 시군구일 경우 (전국, 집계구는 실행X) -->
					<if test='(adm_length  != "7" or low_search  == "1") and (adm_length  != "13") '>
							, (
							    select distinct
								    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
								    	sido_cd||sgg_cd as adm_cd,
										sgg_nm as adm_nm
									</if>
									<if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
										<!-- 2020년수정변경 시작 (ggm) -->	
										<if test='is_zoom_lvl4 == "Y"'>
									    	sido_cd||sgg_cd as adm_cd,
											sgg_nm as adm_nm
										</if>
										<if test='is_zoom_lvl4 != "Y"'>
											sido_cd||sgg_cd||emdong_cd as adm_cd,
											emdong_nm as adm_nm
										</if>							    
									    <!-- 2020년수정변경 끝 -->									
									</if>
								<!-- 2020년수정변경 시작 (ggm) -->	
							    from							    
								<if test='is_zoom_lvl4 == "Y"'>
									SRV_PG_ATDRCBORD with (nolock)
								</if>
								<if test='is_zoom_lvl4 != "Y"'>
									srv_pg_admbord with (nolock)
								</if>							    
							    <!-- 2020년수정변경 끝 -->									
							    where base_year = #{bnd_year}
							    <if test='(adm_length  == "2" and low_search  == "0")or(adm_length  == "5" and low_search  == "1")'>
							    	and sido_cd = #{sido_cd}
							    </if>
							    <if test='(adm_length  == "5" and low_search  == "0")or(adm_length  == "7" and low_search  == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
								</if>
							) bord
						where	AA.adm_cd = bord.adm_cd
					</if>
		</if>
	</select>
	<!-- mng_e 2017. 10. 24 j.h.Seok 2015년 이후 등록센서스 결합조건 쿼리 추가 -->
	
	<!-- 2020년수정변경 시작 (ggm) -->
	<sql id="cmmColumResultCensusIndexForBorough">
		ADM_CD             AS ADM_CD
		, ADM_NM           AS ADM_NM
		, CASE WHEN TOT_PPLTN <![CDATA[<=]]> 4 then 'N/A'
			 WHEN TOT_PPLTN <![CDATA[>]]> 4 then TOT_PPLTN end TOT_PPLTN
		, AVG_AGE          AS AVG_AGE
		, PPLTN_DNSTY      AS PPLTN_DNSTY
		, AGED_CHILD_IDX   AS AGED_CHILD_IDX
		, OLDAGE_SUPRT_PER AS OLDAGE_SUPRT_PER
		, JUV_SUPRT_PER    AS JUV_SUPRT_PER
		, CASE WHEN TOT_FAMILY <![CDATA[<=]]> 4 then 'N/A'
				WHEN TOT_FAMILY <![CDATA[>]]> 4 then TOT_FAMILY end TOT_FAMILY
		, AVG_FMEMBER_CNT  AS AVG_FMEMBER_CNT
		, CASE WHEN TOT_HOUSE <![CDATA[<=]]> 4 then 'N/A'
				WHEN TOT_HOUSE <![CDATA[>]]> 4 then TOT_HOUSE end TOT_HOUSE
	<!-- 2016.08.26 2015일 경우 데이터 표출 안함 .-->
		<!-- <if test='year != "2015"'> -->
		, CASE WHEN NONGGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN NONGGA_CNT <![CDATA[>]]> 4 then NONGGA_CNT end NONGGA_CNT
		, CASE WHEN NONGGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN NONGGA_PPLTN <![CDATA[>]]> 4 then NONGGA_PPLTN end NONGGA_PPLTN
		, CASE WHEN IMGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN IMGA_CNT <![CDATA[>]]> 4 then IMGA_CNT end IMGA_CNT
		, CASE WHEN IMGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN IMGA_PPLTN <![CDATA[>]]> 4 then IMGA_PPLTN end IMGA_PPLTN
		, CASE WHEN NAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN NAESUOGA_CNT <![CDATA[>]]> 4 then NAESUOGA_CNT end NAESUOGA_CNT
		, CASE WHEN NAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN NAESUOGA_PPLTN <![CDATA[>]]> 4 then NAESUOGA_PPLTN end NAESUOGA_PPLTN
		, CASE WHEN HAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN HAESUOGA_CNT <![CDATA[>]]> 4 then HAESUOGA_CNT end HAESUOGA_CNT
		, CASE WHEN HAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN HAESUOGA_PPLTN <![CDATA[>]]> 4 then HAESUOGA_PPLTN end HAESUOGA_PPLTN
		<!-- </if> -->
		<!-- 2016. 03. 24 j.h.Seok modify -->
		<!-- 2016. 03. 31 j.h.Seok modify -->
		<!-- , CORP_CNT AS CORP_CNT -->
		, CASE WHEN CORP_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN CORP_CNT <![CDATA[>]]> 4 then CORP_CNT end CORP_CNT
		, CASE WHEN EMPLOYEE_CNT <![CDATA[<=]]> 4 then 'N/A'
				ELSE EMPLOYEE_CNT end EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumSumCensusIndexForBorough">
		ADDR.ADM_CD             AS ADM_CD
		, ADDR.ADM_NM           AS ADM_NM
		, sum(TOT_PPLTN)        AS TOT_PPLTN
		, sum(AVG_AGE)          AS AVG_AGE
		, sum(PPLTN_DNSTY)      AS PPLTN_DNSTY
		, sum(AGED_CHILD_IDX)   AS AGED_CHILD_IDX
		, sum(OLDAGE_SUPRT_PER) AS OLDAGE_SUPRT_PER
		, sum(JUV_SUPRT_PER)    AS JUV_SUPRT_PER
		, sum(TOT_FAMILY)       AS TOT_FAMILY
		, sum(AVG_FMEMBER_CNT)  AS AVG_FMEMBER_CNT
		, sum(TOT_HOUSE)        AS TOT_HOUSE
		, sum(NONGGA_CNT)       AS NONGGA_CNT
		, sum(NONGGA_PPLTN)     AS NONGGA_PPLTN
		, sum(IMGA_CNT)         AS IMGA_CNT
		, sum(IMGA_PPLTN)       AS IMGA_PPLTN
		, sum(NAESUOGA_CNT)     AS NAESUOGA_CNT
		, sum(NAESUOGA_PPLTN)   AS NAESUOGA_PPLTN
		, sum(HAESUOGA_CNT)     AS HAESUOGA_CNT
		, sum(HAESUOGA_PPLTN)   AS HAESUOGA_PPLTN
		, sum(CORP_CNT)         AS CORP_CNT
		, sum(EMPLOYEE_CNT)     AS EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumCensusIndexForBorough">
		BASE_YEAR                  AS BASE_YEAR
		, nvl(TOT_PPLTN, 0)        AS TOT_PPLTN
		, nvl(AVG_AGE, 0)          AS AVG_AGE
		, nvl(PPLTN_DNSTY, 0)      AS PPLTN_DNSTY
		, nvl(AGED_CHILD_IDX, 0)   AS AGED_CHILD_IDX
		, nvl(OLDAGE_SUPRT_PER, 0) AS OLDAGE_SUPRT_PER
		, nvl(JUV_SUPRT_PER, 0)    AS JUV_SUPRT_PER
		, nvl(TOT_FAMILY, 0)       AS TOT_FAMILY
		, nvl(AVG_FMEMBER_CNT, 0)  AS AVG_FMEMBER_CNT
		, nvl(TOT_HOUSE, 0)        AS TOT_HOUSE
		, nvl(NONGGA_CNT, 0)       AS NONGGA_CNT
		, nvl(NONGGA_PPLTN, 0)     AS NONGGA_PPLTN
		, nvl(IMGA_CNT, 0)         AS IMGA_CNT
		, nvl(IMGA_PPLTN, 0)       AS IMGA_PPLTN
		, nvl(NAESUOGA_CNT, 0)     AS NAESUOGA_CNT
		, nvl(NAESUOGA_PPLTN, 0)   AS NAESUOGA_PPLTN
		, nvl(HAESUOGA_CNT, 0)     AS HAESUOGA_CNT
		, nvl(HAESUOGA_PPLTN, 0)   AS HAESUOGA_PPLTN
		, to_int('0')              AS CORP_CNT
		, to_int('0')              AS EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumCorpCensusIndexForBorough">
		BASE_YEAR        AS BASE_YEAR
		, to_int('0')    AS TOT_PPLTN
		, to_number('0') AS AVG_AGE
		, to_number('0') AS PPLTN_DNSTY
		, to_number('0') AS AGED_CHILD_IDX
		, to_number('0') AS OLDAGE_SUPRT_PER
		, to_number('0') AS JUV_SUPRT_PER
		, to_int('0')    AS TOT_FAMILY
		, to_number('0') AS AVG_FMEMBER_CNT
		, to_int('0')    AS TOT_HOUSE
		, to_int('0')    AS NONGGA_CNT
		, to_int('0')    AS NONGGA_PPLTN
		, to_int('0')    AS IMGA_CNT
		, to_int('0')    AS IMGA_PPLTN
		, to_int('0')    AS NAESUOGA_CNT
		, to_int('0')    AS NAESUOGA_PPLTN
		, to_int('0')    AS HAESUOGA_CNT
		, to_int('0')    AS HAESUOGA_PPLTN
		, CORP_CNT       AS CORP_CNT
		, EMPLOYEE_CNT   AS EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumCorpCensusIndexGrpForBorough">
		max(BASE_YEAR)        	AS BASE_YEAR
		, max(INFO_DIV)			AS INFO_DIV	
		, REGION_GRP_CD 		AS REGION_CD		
		, max(BORD_BASE_YEAR)	AS BORD_BASE_YEAR		
		, sum(CORP_CNT)       	AS CORP_CNT
		, sum(EMPLOYEE_CNT)   	AS EMPLOYEE_CNT
	</sql>				
	<sql id="cmmColumCensusIndexAdmCdForBorough">
		, INFO_DIV                 AS INFO_DIV
		, REGION_CD                AS REGION_CD		
		, BORD_BASE_YEAR           AS BORD_BASE_YEAR
	</sql>
	<sql id="cmmColumCensusIndexTotForBorough">
		, TOT_REG_CD     AS TOT_REG_CD
	</sql>
	<select id="censusIndexForBorough" parameterType="hashmap" resultType="hashmap">
		SELECT
			<include refid="cmmColumResultCensusIndexForBorough" />
		FROM (
			SELECT
				<include refid="cmmColumSumCensusIndexForBorough" />
			FROM (
				SELECT 
					<include refid="cmmColumCensusIndexForBorough" />
					<include refid="cmmColumCensusIndexAdmCdForBorough" />
				FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
				WHERE
						BASE_YEAR          = #{year}
						AND BORD_BASE_YEAR = #{bnd_year}
						AND REGION_CD = #{adm_cd}
						AND INFO_DIV       = #{info_div}
				UNION ALL
				SELECT
					<include refid="cmmColumCorpCensusIndexForBorough" />
					<include refid="cmmColumCensusIndexAdmCdForBorough" />
				FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
				where
					BASE_YEAR          = #{year}
					AND BORD_BASE_YEAR = #{bnd_year}
					AND REGION_CD = #{adm_cd}
					AND INFO_DIV       = #{info_div}
				<if test='info_div == "2"'>
				<!-- 사업체 주요지표, 비자치구 합계용 -->			
				UNION ALL					
				SELECT
					<include refid="cmmColumCorpCensusIndexForBorough" />
					<include refid="cmmColumCensusIndexAdmCdForBorough" />
				FROM (
						select
							max(BASE_YEAR)        AS BASE_YEAR
							, max(INFO_DIV)       AS INFO_DIV	
							, REGION_GRP_CD       AS REGION_CD		
							, max(BORD_BASE_YEAR) AS BORD_BASE_YEAR		
							, sum(CORP_CNT)       AS CORP_CNT
							, sum(EMPLOYEE_CNT)   AS EMPLOYEE_CNT
						from (
							select corp.*
								, case when length(corp.REGION_CD) = 5 then substring(corp.REGION_CD, 1, 4) || '0' else corp.REGION_CD end AS REGION_GRP_CD 
							from SRV_DT_CORPCENSUS_INDEX with (nolock) corp
							where base_year = #{year} and BORD_BASE_YEAR = #{bnd_year} 
								and info_div = '2'
								and substring(region_cd, 5, 1) != '0'
								<if test='is_non_self == "Y"'>
									AND REGION_CD like #{adm_cd_nonSelf} || '%'
								</if>
								<if test='is_non_self != "Y"'>
									AND REGION_CD = #{adm_cd}
								</if>
						)
						group by REGION_GRP_CD					
				)
				</if>					
			) CENSUSINDEX
			INNER JOIN (
				SELECT DISTINCT
					<if test='info_div == "1"'>
						SIDO_CD AS ADM_CD
						, SIDO_NM AS ADM_NM
					</if>
					<if test='info_div == "2"'>
						SIDO_CD
						, SGG_CD
						, SIDO_CD || SGG_CD AS ADM_CD
						, SIDO_NM || SGG_NM AS ADM_NM
					</if>
					<if test='info_div == "3"'>
						SIDO_CD || SGG_CD || EMDONG_CD AS ADM_CD
						, SIDO_NM || SGG_NM || EMDONG_NM AS ADM_NM
					</if>
				FROM
					<if test='is_zoom_lvl4 == "Y"'>
						SRV_PG_ATDRCBORD with (nolock) ADMBORD
					</if>
					<if test='is_zoom_lvl4 != "Y"'>
						SRV_PG_ADMBORD with (nolock) ADMBORD
					</if>				 
				WHERE
					ADMBORD.BASE_YEAR = #{bnd_year}
			) ADDR 
					ON CENSUSINDEX.REGION_CD = ADDR.ADM_CD
			GROUP BY ADM_CD, ADM_NM
		)
	</select>	
	<select id="censusIndexLowSearchForBorough" parameterType="hashmap" resultType="hashmap">
		SELECT
			<include refid="cmmColumResultCensusIndexForBorough" />
		FROM (
			SELECT
				<include refid="cmmColumSumCensusIndexForBorough" />
			FROM (
				SELECT 
					<include refid="cmmColumCensusIndexForBorough" />
					<include refid="cmmColumCensusIndexAdmCdForBorough" />
				FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
				WHERE
						BASE_YEAR          = #{year}
						AND BORD_BASE_YEAR = #{bnd_year}
						<if test='is_non_self == "Y"'>
							AND REGION_CD like #{adm_cd_nonSelf} || '%'
						</if>
						<if test='is_non_self != "Y"'>
							AND REGION_CD like #{adm_cd} || '%'
						</if>						
						AND INFO_DIV       = #{info_div}
				UNION ALL
				SELECT
					<include refid="cmmColumCorpCensusIndexForBorough" />
					<include refid="cmmColumCensusIndexAdmCdForBorough" />
				FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
				where
						BASE_YEAR          = #{year}
						AND BORD_BASE_YEAR = #{bnd_year}
						<if test='is_non_self == "Y"'>
							AND REGION_CD like #{adm_cd_nonSelf} || '%'
						</if>
						<if test='is_non_self != "Y"'>
							AND REGION_CD like #{adm_cd} || '%'
						</if>					
						AND INFO_DIV       = #{info_div}
				<if test='info_div == "2"'>
				<!-- 사업체 주요지표, 비자치구 합계용 -->			
					UNION ALL					
					SELECT
						<include refid="cmmColumCorpCensusIndexForBorough" />
						<include refid="cmmColumCensusIndexAdmCdForBorough" />
					FROM (
							select
								max(BASE_YEAR)        AS BASE_YEAR
								, max(INFO_DIV)       AS INFO_DIV	
								, REGION_GRP_CD       AS REGION_CD		
								, max(BORD_BASE_YEAR) AS BORD_BASE_YEAR		
								, sum(CORP_CNT)       AS CORP_CNT
								, sum(EMPLOYEE_CNT)   AS EMPLOYEE_CNT
							from (
								select corp.*
									, case when length(corp.REGION_CD) = 5 then substring(corp.REGION_CD, 1, 4) || '0' else corp.REGION_CD end AS REGION_GRP_CD 
								from SRV_DT_CORPCENSUS_INDEX with (nolock) corp
								where base_year = #{year} and BORD_BASE_YEAR = #{bnd_year} 
									and info_div = '2'
									and substring(region_cd, 5, 1) != '0'
									<if test='is_non_self == "Y"'>
										AND REGION_CD like #{adm_cd_nonSelf} || '%'
									</if>
									<if test='is_non_self != "Y"'>
										AND REGION_CD like #{adm_cd} || '%'
									</if>
							)
							group by REGION_GRP_CD					
					)
				</if>				
			) CENSUSINDEX
			INNER JOIN (
				SELECT DISTINCT
					<if test='info_div == "2"'>
						SIDO_CD || SGG_CD AS ADM_CD
						, SGG_NM AS ADM_NM
					</if>
					<if test='info_div == "3"'>
						SIDO_CD || SGG_CD || EMDONG_CD AS ADM_CD
						, EMDONG_NM AS ADM_NM
					</if>
				FROM
					<if test='is_zoom_lvl4 == "Y"'>
						SRV_PG_ATDRCBORD with (nolock) ADMBORD
					</if>
					<if test='is_zoom_lvl4 != "Y"'>
						SRV_PG_ADMBORD with (nolock) ADMBORD
					</if>				
				WHERE
					ADMBORD.BASE_YEAR = #{bnd_year}
			) ADDR 
					ON CENSUSINDEX.REGION_CD = ADDR.ADM_CD
			GROUP BY ADM_CD, ADM_NM
		)
	</select>
	<select id="totCensusIndexForBorough" parameterType="hashmap" resultType="hashmap">
		SELECT
			<include refid="cmmColumResultCensusIndexForBorough" />
		FROM (
			SELECT
				<include refid="cmmColumSumCensusIndexForBorough" />
			FROM (
				SELECT 
					<include refid="cmmColumCensusIndexForBorough" />
					<include refid="cmmColumCensusIndexTotForBorough" />
				FROM SRV_DT_TOTCENSUS_INDEX with (nolock) 
				WHERE
						BASE_YEAR = #{year} 
						<if test='is_non_self == "Y"'>
							AND TOT_REG_CD LIKE #{adm_cd_nonSelf} || '%'
						</if>
						<if test='is_non_self != "Y"'>
							AND TOT_REG_CD LIKE #{adm_cd} || '%'
						</if>						
				UNION ALL
				SELECT
					<include refid="cmmColumCorpCensusIndexForBorough" />
					<include refid="cmmColumCensusIndexTotForBorough" />
				FROM SRV_DT_TOTCORPCENSUS_INDEX with (nolock) 
				where
						BASE_YEAR = #{year} 
						<if test='is_non_self == "Y"'>
							AND TOT_REG_CD LIKE #{adm_cd_nonSelf} || '%'
						</if>
						<if test='is_non_self != "Y"'>
							AND TOT_REG_CD LIKE #{adm_cd} || '%'
						</if>			
			) TOTCENSUSINDEX
			INNER JOIN (
				SELECT DISTINCT
						TOTBORD.TOT_REG_CD AS ADM_CD
						, ADMBORD.EMDONG_NM AS ADM_NM
						, TOTBORD.TOT_REG_CD AS TOT_REG_CD
				FROM 
						SRV_PG_ADMBORD with (nolock) ADMBORD
				INNER JOIN SRV_PG_TOTREGBORD with (nolock) TOTBORD
						ON ADMBORD.BASE_YEAR = TOTBORD.BASE_YEAR 
						AND ADMBORD.SIDO_CD = TOTBORD.SIDO_CD 
						AND ADMBORD.SGG_CD = TOTBORD.SGG_CD 
						AND ADMBORD.EMDONG_CD = TOTBORD.EMDONG_CD
				WHERE
						ADMBORD.BASE_YEAR = #{bnd_year}
						<if test='is_non_self == "Y"'>
							AND TOT_REG_CD LIKE #{adm_cd_nonSelf} || '%'
						</if>
						<if test='is_non_self != "Y"'>
							AND TOT_REG_CD LIKE #{adm_cd} || '%'
						</if>						
			) ADDR 
			ON TOTCENSUSINDEX.TOT_REG_CD = ADDR.TOT_REG_CD
			GROUP BY ADM_CD, ADM_NM
		)
	</select>
	<!-- 내부용 세부인구 정보 조회 -->
	<select id="innersearchpopulationForBorough" parameterType="hashmap" resultType="hashmap">		
		<if test='area_type == "0"'>
		<!-- 행정동 -->
			<if test='adm_length == "7" or adm_length == "13" '>
				select  case when sum(ppl.ppltn_cnt) <![CDATA[<=]]>  4 then 'N/A' 
				       	     when sum(ppl.ppltn_cnt) <![CDATA[>]]> 4 then sum(ppl.ppltn_cnt) end  population
					  , round(avg(age),1) avg_age 
				<if test='adm_length == "7" '>
					  , bord.sido_cd||bord.sgg_cd||bord.emdong_cd adm_cd
					  , bord.emdong_nm adm_nm
			    </if>
				<if test='adm_length == "13" '>
					  , ppl.tot_reg_cd adm_cd
				</if>
				from (
					SELECT         
						PPLTN_CNT
						, AGE
						, GENDER
						<!-- 20160929 사이트 오픈 테스트시 년도에따라 mrg_state, edu_level 값을 가져올 수 있도록 처리 -->
						<!-- <if test='false'> -->
						<!--, RD_MRG_STATE -->
						<!--, RD_EDU_LEVEL -->
						<!-- </if> -->
						<!-- mng_s 2017. 10. 30. j.h.Seok -->
						<if test='year lt "2015"'>
						<!-- mng_e 2017. 10. 30. j.h.Seok -->
						, RD_MRG_STATE
						, RD_EDU_LEVEL
						</if>
						, TOT_REG_CD
						, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
						, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
						, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
					FROM 
						SRV_DT_POPSREG_${year} with (nolock) ppl
					WHERE
						<if test='"1" == "0"'>
							TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
						</if>
						<!-- 수정 시작 (ggm) -->
						TOT_REG_CD LIKE 
						<if test='adm_cd.length() == 5'>
							''|| lpad(#{adm_cd} , 4) || '%'
						</if>
						<if test='adm_cd.length() != 5'>
							'${sido_cd}${sgg_cd}${emdong_cd}%'
						</if>
						<!-- 수정 끝 (ggm) -->						
						<if test='0 and edu_level != null '>
							and ppl.rd_edu_level like #{edu_level}||'%'
							<!-- 2017. 03. 21 오류 수정 -->
							and ppl.age <![CDATA[>]]> 5
					   </if>
					   <if test='edu_level != null '>
						<!-- 2017. 03. 21 오류 수정 -->
							and ppl.age <![CDATA[>]]> 5
							and ppl.rd_edu_level in
							<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
								#{edu}
							</foreach>
					   </if>
				) ppl
				INNER JOIN SRV_PG_ADMBORD with (nolock) BORD
				ON ppl.SIDO_CD = BORD.SIDO_CD 
				AND ppl.SGG_CD = BORD.SGG_CD
				AND ppl.EMDONG_CD = BORD.EMDONG_CD
				AND BORD.BASE_YEAR = #{bnd_year}
				<where>
 					and bord.sido_cd = #{sido_cd}
 			   <if test='low_search == "2" and adm_length == "13"'>
					<!-- 20200417 수정 시작 (ggm) -->
					<if test='is_non_self == "Y"'>
						and bord.sgg_cd like lpad(#{sgg_cd} , 2) || '%'						
					</if>
					<if test='is_non_self != "Y"'>
						and bord.sgg_cd = #{sgg_cd}									
					</if>
					<!-- 20200417 수정 끝 --> 			   
 			   </if>
 			   <if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
 					and bord.sgg_cd = #{sgg_cd}
 					and bord.emdong_cd = #{emdong_cd}
 			   </if>
			   <if test='gender != "0" '>
					and ppl.gender=#{gender}
			   </if>
			   <if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
			   </if>
			   
			   <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
			   </if>
				</where> 
			  <if test='adm_length == 7'>
				group by bord.sido_cd||bord.sgg_cd||bord.emdong_cd, bord.emdong_nm
			  </if>
			  <if test='adm_length == "13"'>
				group by tot_reg_cd
			  </if>
			</if>

			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				select 
				       case when nvl(sum(ppl.ppltn_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
				       	    when nvl(sum(ppl.ppltn_cnt),0) <![CDATA[>]]> 4 then nvl(sum(ppl.ppltn_cnt),0) end  population
			    	 , nvl(round(avg(ppl.age),1),0) avg_age
			    <if test='adm_length == "5"'>
			    	 , ppl.sido_cd||ppl.sgg_cd adm_cd
					 , bord.sgg_nm adm_nm 
			    </if>
			    <if test='adm_length == "0" or adm_length == "2"'>
			    	 , bord.sido_cd adm_cd
					 , bord.sido_nm adm_nm 
			    </if>
			   	from (
					<!-- 수정 시작 (ggm) -->
					select bord_base_year, sido_cd, age , gender , ppltn_cnt
						<if test='is_zoom_lvl4 == "Y"'>
							, to_char(DECODE(SUBSTR(sgg_cd, LEN(sgg_cd)), 0, sgg_cd, SUBSTR(sgg_cd, 0, LEN(sgg_cd) - 1) || '0')) as sgg_cd
						</if>
						<if test='is_zoom_lvl4 != "Y"'>
							, sgg_cd
						</if>								 
					from srv_dt_popsgg_${year} with (nolock) 
					<!-- 수정 끝 (ggm) -->
					where 
						bord_base_year = #{bnd_year} 
					<if test='0 and edu_level != null '>
						and rd_edu_level like #{edu_level}||'%'
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
					</if>
					<if test='edu_level != null '>
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
						and rd_edu_level in
						<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
							#{edu}
						</foreach>
					</if>
					) ppl
			   	<if test='adm_length == "5"'>			   	
					<!-- 수정 시작 (ggm) -->
					<if test='is_zoom_lvl4 == "Y"'>
						, SRV_PG_ATDRCBORD with (nolock) bord
					</if>
					<if test='is_zoom_lvl4 != "Y"'>
						, srv_pg_sggbord with (nolock) bord
					</if>					
					<!-- 수정 끝 (ggm) -->			   	
			   	</if>
			   	<if test='adm_length == "0" or adm_length == "2"'>
			   	    , srv_pg_sidobord with (nolock) bord
			   	</if>
				<where>
				 	bord.base_year = ppl.bord_base_year
				<if test='adm_length == "2" or (adm_length == "5" )'>
					and ppl.sido_cd = #{sido_cd}
				</if>
				<if test='adm_length == "5" and low_search == "0"' >
					and ppl.sgg_cd = #{sgg_cd}
				</if>
				<if test='gender != "0" '>
					and ppl.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and ppl.age <![CDATA[>=]]> #{age_from}
					and ppl.age <![CDATA[<=]]> #{age_to}
				</if>				
			    <if test='mrg_state != null '>
					and ppl.rd_mrg_state in
					<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
					  	#{mrg}
					</foreach>
				</if>
					and ppl.sido_cd=bord.sido_cd 
				<if test='adm_length == "5"' >
					and ppl.sgg_cd=bord.sgg_cd
				</if>
			    </where>
			    <if test='adm_length == "5"'>
			    	group by ppl.sido_cd||ppl.sgg_cd, bord.sgg_nm
			    </if>
			    <if test='adm_length == "0" or adm_length == "2"'>
			    	group by bord.sido_cd, bord.sido_nm  
			    </if>
			 </if>
		</if>

		<if test='area_type == "1"'> 
		<!-- 사용자 영역 -->  
				select 
				   case when nvl(count(ppl.femember_no),0) <![CDATA[<=]]> 4  then 'N/A' 
				        when nvl(count(ppl.femember_no),0) <![CDATA[>]]> 4  then nvl(count(ppl.femember_no),0) end  population
				 , nvl(round(avg(ppl.age),1),0) avg_age
			from (
					select * 
					from srv_dt_ppltncensus_${year} with (nolock) 
					where 1=1 
					<if test='0 and edu_level != null '>
						and rd_edu_level like #{edu_level}||'%'
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
					</if>
					<if test='edu_level != null '>
						<!-- 2017. 03. 21 오류 수정 -->
						and age <![CDATA[>]]> 5
						and rd_edu_level in
						<foreach collection="edu_level" item="edu" open = "(" separator = "," close = ")">
							#{edu}
						</foreach>
					</if>
					) ppl
			<where>
			<if test='area_type == "1" '>
				<if test='area_kind == "POLYGON" '>
					and st_within(ppl.pt,st_polyfromtext(#{area},0))=1 
				</if>
				<if test='area_kind == "POINT" '>
					and st_within(ppl.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
				</if>
				<if test='area_kind == "RECTANGLE" '>
					and st_within(ppl.pt,st_rectfromtext(#{area},0)) = 1
				</if>
			</if>
			<if test='gender != "0" '>
				and ppl.gender=#{gender}
			</if>
			<if test='age_from != null '>
				and ppl.age <![CDATA[>=]]> #{age_from}
				and ppl.age <![CDATA[<=]]> #{age_to}
			</if>
			
			<if test='study_level != null '>
				and ppl.study_level = #{study_level}
			</if>
			<if test='mrg_state != null '>
				and ppl.rd_mrg_state in
				<foreach  collection="mrg_state" item="mrg" open="(" separator="," close=")">
				  	#{mrg}
				</foreach>
			</if>
			</where>
		</if>
	</select>
	<!--  [2015 업데이트] 가구 통계 -->
	<select id="householdForBorough" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			<if test='adm_length == "7" or adm_length == "13" '>
				select  
						case when sum(family.family_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							 when sum(family.family_cnt) <![CDATA[>]]> 4 then sum(family.family_cnt) end  household_cnt
					  , case when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[<=]]> 0 then 0
					         when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[>]]> 0 then round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) end avg_family_member_cnt
					  , sum(family.rd_fmember_cnt) family_member_cnt 
				<if test='adm_length == "7" '>
					  , bord.sido_cd||bord.sgg_cd||bord.emdong_cd adm_cd
					  , bord.emdong_nm adm_nm
				</if>
				<if test='adm_length == "13" '>
					  , family.tot_reg_cd adm_cd
				</if>
				from (
					select         
						family_cnt
						, rd_fmember_cnt
						, rd_household_type
						<!-- 20160929 사이트 오픈 테스트시 년도에따라 rd_ocptn_type 값을 가져올 수 있도록 처리 -->
						<!-- <if test='false'> -->
						<!--, rd_ocptn_type -->
						<!-- </if> -->
						<!-- mng_s 2017. 10. 30. j.h.Seok -->
						<if test='year lt "2015"'>
						<!-- mng_e 2017. 10. 30. j.h.Seok -->
						, rd_ocptn_type
						</if>
						, tot_reg_cd
						, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
						, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
						, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
					from 
							srv_dt_familyreg_${year} with (nolock) family
					WHERE
						<if test='"1" == "0"'>
							TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
						</if>						
						<!-- 수정 시작 (ggm) -->
						TOT_REG_CD LIKE 
						<if test='adm_cd.length() == 5'>
							''|| lpad(#{adm_cd} , 4) || '%'
						</if>
						<if test='adm_cd.length() != 5'>
							'${sido_cd}${sgg_cd}${emdong_cd}%'
						</if>
						<!-- 수정 끝 (ggm) -->						
				) family
				INNER JOIN srv_pg_admbord with (nolock) bord
				ON family.sido_cd = bord.sido_cd and family.SGG_CD = bord.SGG_CD
				and family.EMDONG_CD = bord.EMDONG_CD
				<where>
					and bord.base_year = #{bnd_year}
					and bord.sido_cd = #{sido_cd}
 			   <if test='low_search == "2" and adm_length == "13"'>
					<!-- 20200417 수정 시작 (ggm) -->
					<if test='is_non_self == "Y"'>
						and bord.sgg_cd like lpad(#{sgg_cd} , 2) || '%'						
					</if>
					<if test='is_non_self != "Y"'>
						and bord.sgg_cd = #{sgg_cd}									
					</if>
					<!-- 20200417 수정 끝 --> 
 			   </if>
 			   <if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
					and bord.sgg_cd = #{sgg_cd}
					and bord.emdong_cd = #{emdong_cd}
			   </if>
			   
			   <if test='household_type != null '>
						and family.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
			   </if>
			   <if test='ocptn_type != null '>
					   and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						#{ocptn}
					</foreach>
			   </if>
			   </where> 
			   
			  <if test='adm_length == 7'>
				group by bord.sido_cd||bord.sgg_cd||bord.emdong_cd, bord.emdong_nm
			  </if>
			  <if test='adm_length == "13"'>
				group by tot_reg_cd
			  </if>
			</if>

			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				select  
						case when sum(family.family_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							 when sum(family.family_cnt) <![CDATA[>]]> 4 then sum(family.family_cnt) end  household_cnt
					  , case when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[<=]]> 0 then 0
					         when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[>]]> 0 then round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) end avg_family_member_cnt
					  , sum(family.rd_fmember_cnt) family_member_cnt 
				<if test='adm_length == "5"'>
					 , family.sido_cd||family.sgg_cd adm_cd
					 , bord.sgg_nm adm_nm 
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					 , bord.sido_cd adm_cd
					 , bord.sido_nm adm_nm 
				</if>
				<!-- 수정 시작 (ggm) -->
				from (
						select 	family_cnt,
								rd_household_type, 
								sido_cd,								
								<if test='is_zoom_lvl4 == "Y"'>
									to_char(decode(substr(sgg_cd, len(sgg_cd)), 0, sgg_cd, substr(sgg_cd, 0, len(sgg_cd)-1) || '0' )) as sgg_cd,
								</if>
								<if test='is_zoom_lvl4 != "Y"'>
									sgg_cd,
								</if>								 
								rd_fmember_cnt,
								bord_base_year							 
						from srv_dt_familysgg_${year} with (nolock)
				) family  
				<!-- 수정 끝 (ggm) -->
				<if test='adm_length == "5"'>
					<!-- 수정 시작 (ggm) -->
					<if test='is_zoom_lvl4 == "Y"'>
						, SRV_PG_ATDRCBORD with (nolock) bord
					</if>
					<if test='is_zoom_lvl4 != "Y"'>
						, srv_pg_sggbord with (nolock) bord
					</if>					
					<!-- 수정 끝 (ggm) -->					
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					, srv_pg_sidobord with (nolock) bord
				</if>
				<where>
					family.bord_base_year = #{bnd_year}
				<if test='adm_length == "2" or (adm_length == "5" )'>
					and family.sido_cd = #{sido_cd}
				</if>
				<if test='adm_length == "5" and low_search == "0"' >
					and family.sgg_cd = #{sgg_cd}
				</if>
				
				<if test='household_type != null '>
						and family.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
				<if test='ocptn_type != null '>
					   and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						#{ocptn}
					</foreach>
				</if>
					and bord.base_year = #{bnd_year}
					and family.sido_cd=bord.sido_cd 
				<if test='adm_length == "5"' >
					and family.sgg_cd=bord.sgg_cd
				</if>
				</where>
				<if test='adm_length == "5"'>
					group by family.sido_cd||family.sgg_cd, bord.sgg_nm
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					group by bord.sido_cd, bord.sido_nm  
				</if>
			 </if>
		</if>
		
		<if test='area_type == "1"'>
			select 
				   case when nvl(count(family.family_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
						when nvl(count(family.family_cnt),0) <![CDATA[>]]> 4  then nvl(count(family.family_cnt),0) end  household_cnt
				 , case when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[<=]]> 0 then 0
					    when round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) <![CDATA[>]]> 0 then round(sum(family.rd_fmember_cnt)/sum(family.family_cnt),1) end avg_family_member_cnt
				 , nvl(sum(family.rd_fmember_cnt),0) family_member_cnt 
			from srv_dt_familycensus_${year} with (nolock) family 
			<where>
				<if test='area_type == "1" '>
					<if test='area_kind == "POLYGON" '>
						and st_within(family.pt,st_polyfromtext(#{area},0))=1 
					</if>
					<if test='area_kind == "POINT" '>
						and st_within(family.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
					</if>
					<if test='area_kind == "RECTANGLE" '>
						and st_within(family.pt,st_rectfromtext(#{area},0)) = 1
					</if>
				</if>
				<if test='household_type != null '>
					and family.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
				<if test='ocptn_type != null '>
					and family.rd_ocptn_type in
					<foreach collection="ocptn_type" item="ocptn" open="(" separator="," close=")">
						#{ocptn}
					</foreach>
				</if>
				<if test='search_type != null '>
				   and family.family_yn = #{search_type}
			   </if>
			</where> 
		</if>
	</select>
	<!-- 주택통계 2010년 이전 -->
	<select id="houseForBorough" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			<if test='adm_length == "7" or adm_length == "13" '>
				select case when sum(house.resid_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							when sum(house.resid_cnt) <![CDATA[>]]> 4 then sum(house.resid_cnt) end  house_cnt
				<if test='adm_length == "7" '>
					  , bord.sido_cd||bord.sgg_cd||bord.emdong_cd adm_cd
					  , bord.emdong_nm adm_nm
				</if>
				<if test='adm_length == "13" '>
					  , HOUSE.tot_reg_cd adm_cd
				</if>
				from (
						SELECT
							RESID_CNT
							, TOT_REG_CD
							, RD_RESID_1_TYPE
							, RD_CONST_YEAR
							, RD_BDSPACE_MM
							, HOUSE_YN
							, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
							, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
							, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
						FROM
							SRV_DT_HOUSEREG_${year} with (nolock) 
						WHERE
						<if test='"1" == "0"'>
							TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
						</if>						
						<!-- 수정 시작 (ggm) -->
						TOT_REG_CD LIKE 
						<if test='adm_cd.length() == 5'>
							''|| lpad(#{adm_cd} , 4) || '%'
						</if>
						<if test='adm_cd.length() != 5'>
							'${sido_cd}${sgg_cd}${emdong_cd}%'
						</if>
						<!-- 수정 끝 (ggm) -->						
				) HOUSE
				INNER JOIN SRV_PG_ADMBORD with (nolock) bord
				ON HOUSE.SIDO_CD = bord.SIDO_CD AND HOUSE.SGG_CD = bord.SGG_CD AND HOUSE.EMDONG_CD = bord.EMDONG_CD
				<where>
					and bord.base_year = #{bnd_year}
					and bord.sido_cd = #{sido_cd}
 			   <if test='low_search == "2" and adm_length == "13"'>
					<!-- 20200417 수정 시작 (ggm) -->
					<if test='is_non_self == "Y"'>
						and bord.sgg_cd like lpad(#{sgg_cd} , 2) || '%'						
					</if>
					<if test='is_non_self != "Y"'>
						and bord.sgg_cd = #{sgg_cd}									
					</if>
					<!-- 20200417 수정 끝 --> 			   
 			   </if>
 			   <if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
					and bord.sgg_cd = #{sgg_cd}
					and bord.emdong_cd = #{emdong_cd}
			   </if>
			   
			   <if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
						#{type}
					</foreach>
			   </if>
			   <if test='const_year != null '>
				  and house.rd_const_year = #{const_year}
			   </if>
			   <if test='house_area_param != null '>
			      and ${house_area_param}
			   </if> 
			   <!-- 
				   <if test='bdspace_from != null '>
					  and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
					  and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
				   </if> 
			   -->
			   <!-- 2016.10.25 수정 -->
				<if test='search_type != null '>
					and house.house_yn = #{search_type}
				</if>
			   </where> 
			   
			  <if test='adm_length == 7'>
				group by bord.sido_cd||bord.sgg_cd||bord.emdong_cd, bord.emdong_nm
			  </if>
			  <if test='adm_length == "13"'>
				group by tot_reg_cd
			  </if>
			</if>

			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				select case when sum(house.resid_cnt) <![CDATA[<=]]> 4 then 'N/A' 
							when sum(house.resid_cnt) <![CDATA[>]]> 4 then sum(house.resid_cnt) end  house_cnt
				<if test='adm_length == "5"'>
					 , house.sido_cd||house.sgg_cd adm_cd
					 , bord.sgg_nm adm_nm 
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					 , bord.sido_cd adm_cd
					 , bord.sido_nm adm_nm 
				</if>
				<!-- 수정 시작 (ggm) -->
				from (
						select						
							bord_base_year, sido_cd, rd_resid_1_type, house_yn, rd_const_year, rd_bdspace_mm, resid_cnt						
							<if test='is_zoom_lvl4 == "Y"'>
								, to_char(decode(substr(sgg_cd, len(sgg_cd)), 0, sgg_cd, substr(sgg_cd, 0, len(sgg_cd)-1) || '0' )) as sgg_cd
							</if>
							<if test='is_zoom_lvl4 != "Y"'>
								, sgg_cd
							</if>
						from srv_dt_housesgg_${year} with (nolock)
				) house  
				<!-- 수정 끝 (ggm) -->				
				<if test='adm_length == "5"'>
					<!-- 수정 시작 (ggm) -->
					<if test='is_zoom_lvl4 == "Y"'>
						, SRV_PG_ATDRCBORD with (nolock) bord
					</if>
					<if test='is_zoom_lvl4 != "Y"'>
						, srv_pg_sggbord with (nolock) bord
					</if>					
					<!-- 수정 끝 (ggm) -->					
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					, srv_pg_sidobord with (nolock) bord
				</if>
				<where>
					house.bord_base_year = #{bnd_year}
				<if test='adm_length == "2" or (adm_length == "5" )'>
					and house.sido_cd = #{sido_cd}
				</if>
				<if test='adm_length == "5" and low_search == "0"' >
					and house.sgg_cd = #{sgg_cd}
				</if>
				
				<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
						#{type}
					</foreach>
				</if>
				<if test='const_year != null '>
					and house.rd_const_year = #{const_year}
				</if>
			    <if test='house_area_param != null '>
			       and ${house_area_param}
			    </if> 
				<!-- 
				    <if test='bdspace_from != null '>
					   and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
					   and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
				    </if> 
 				-->
 				<!-- 2016.10.25 수정 -->
				<if test='search_type != null '>
					and house.house_yn = #{search_type}
				</if>
					and bord.base_year = #{bnd_year}
					and house.sido_cd=bord.sido_cd 
				<if test='adm_length == "5"' >
					and house.sgg_cd=bord.sgg_cd
				</if>
				</where>
				<if test='adm_length == "5"'>
					group by house.sido_cd||house.sgg_cd, bord.sgg_nm
				</if>
				<if test='adm_length == "0" or adm_length == "2"'>
					group by bord.sido_cd, bord.sido_nm  
				</if>
			 </if>
		</if>
		
		<if test='area_type == "1"'>
			select case
						when nvl(count(distinct house.house_reg_no),0) <![CDATA[<=]]> 4  then 'N/A' 
						when nvl(count(distinct house.house_reg_no),0) <![CDATA[>]]> 4 then nvl(count(distinct house.house_reg_no),0) end  house_cnt  
			from srv_dt_familycensus_${year} with (nolock) house 
			<where>
				<if test='area_type == "1" '>
					<if test='area_kind == "POLYGON" '>
						and st_within(house.pt,st_polyfromtext(#{area},0))=1 
					</if>
					<if test='area_kind == "POINT" '>
						and st_within(house.pt,ST_BUFFER(st_pointfromtext(#{area},0),#{round})) = 1
					</if>
					<if test='area_kind == "RECTANGLE" '>
						and st_within(house.pt,st_rectfromtext(#{area},0)) = 1
					</if>
				</if>
				<if test='house_type != null '>
					and house.rd_resid_1_type in
					<foreach  collection="house_type" item="type" open="(" separator="," close=")">
						#{type}
					</foreach>
				</if>
				<if test='const_year != null '>
					and house.rd_const_year = #{const_year}
				</if>
			    <if test='house_area_param != null '>
			       and ${house_area_param}
			    </if> 
			    <!-- 
				    <if test='bdspace_from != null '>
				 	   and house.rd_bdspace_mm <![CDATA[>=]]> #{bdspace_from}
				 	   and house.rd_bdspace_mm <![CDATA[<=]]> #{bdspace_to}
				    </if> 
			    -->
				<if test='search_type != null '>
					and house.house_yn = #{search_type}
				</if>
			</where> 
		</if>
	</select>
	<!-- 주택통계 2011년 이후 -->
	<!-- 주택-시군구집계, 주택-집계구집계 테이블 주택사용기간코드, 주택면적코드 컬럼 변경에 따른 쿼리 수정. -->
	<sql id="houseHead2015ForBorough">
		select case when sum(house.resid_cnt) <![CDATA[<=]]> 4 then 'N/A' 
					when sum(house.resid_cnt) <![CDATA[>]]> 4 then sum(house.resid_cnt) end  house_cnt
		<if test='adm_length == "0" or adm_length == "2"'>
			 , bord.sido_cd adm_cd
			 , bord.sido_nm adm_nm 
		</if>
		<if test='adm_length == "5"'>
			 , bord.sido_cd || bord.sgg_cd adm_cd
			 , bord.sgg_nm adm_nm 
		</if>
		<if test='adm_length == "7" '>
			  , bord.sido_cd || bord.sgg_cd || bord.emdong_cd adm_cd
			  , bord.emdong_nm adm_nm
		</if>
		<if test='adm_length == "13" '>
			  , house.tot_reg_cd adm_cd
		</if>
	</sql>
	<sql id="houseBodySgg2015ForBorough">	
		<!-- 수정 시작 (ggm) -->
		from (
				select				
					bord_base_year, sido_cd, rd_resid_1_type, house_yn, house_area_cd, house_use_prid_cd, rd_const_year, resid_cnt				
					<if test='is_zoom_lvl4 == "Y"'>
						, to_char(decode(substr(sgg_cd, len(sgg_cd)), 0, sgg_cd, substr(sgg_cd, 0, len(sgg_cd)-1) || '0' )) as sgg_cd
					</if>
					<if test='is_zoom_lvl4 != "Y"'>
						, sgg_cd
					</if>
				from srv_dt_housesgg_${year} with (nolock)
		) house  
		<!-- 수정 끝 (ggm) -->	
		<if test='adm_length == "0" or adm_length == "2"'>
			INNER JOIN srv_pg_sidobord with (nolock) bord ON house.sido_cd = bord.sido_cd
		</if>
		<if test='adm_length == "5"'>
			<!-- 수정 시작 (ggm) -->
			<if test='is_zoom_lvl4 == "Y"'>
				INNER JOIN SRV_PG_ATDRCBORD with (nolock) bord
				ON house.sido_cd = bord.sido_cd AND house.sgg_cd = bord.sgg_cd				
			</if>
			<if test='is_zoom_lvl4 != "Y"'>
				INNER JOIN srv_pg_sggbord with (nolock) bord
				ON house.sido_cd = bord.sido_cd AND house.sgg_cd = bord.sgg_cd
			</if>					
			<!-- 수정 끝 (ggm) -->			
		</if>
		<where>
			house.bord_base_year = #{bnd_year}
			and bord.base_year = #{bnd_year}
			<if test='adm_length == "2" or (adm_length == "5" )'>
				and house.sido_cd = #{sido_cd}
			</if>
			<if test='adm_length == "5" and low_search == "0"' >
				and house.sgg_cd = #{sgg_cd}
			</if>
			<if test='house_type != null '>
				and house.rd_resid_1_type in
				<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test='house_use_prid_cd != null '>
				and house.house_use_prid_cd = #{house_use_prid_cd}
			</if>
			<if test='const_year != null '>
				and house.rd_const_year = #{const_year}
			</if>
			<if test='house_area_cd != null '>
				and house.house_area_cd in
				<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
					#{house_area_type}
				</foreach>
			</if>
			<if test='search_type != null '>
				and house.house_yn = #{search_type}
			</if>
		</where>
		<if test='adm_length == "5"'>
			GROUP BY bord.sido_cd || bord.sgg_cd, bord.sgg_nm
		</if>
		<if test='adm_length == "0" or adm_length == "2"'>
			GROUP BY bord.sido_cd, bord.sido_nm  
		</if>
	</sql>
	<sql id="houseBodyReg2015ForBorough">
		FROM (
				SELECT
					RESID_CNT
					, TOT_REG_CD
					, RD_RESID_1_TYPE
					, HOUSE_YN
					, HOUSE_AREA_CD
					, HOUSE_USE_PRID_CD
					<if test='const_year != null '>
					, RD_CONST_YEAR
					</if>
					, SUBSTR(TOT_REG_CD,1, 2) AS SIDO_CD
					, SUBSTR(TOT_REG_CD,3, 3) AS SGG_CD
					, SUBSTR(TOT_REG_CD,6, 2) AS EMDONG_CD
				FROM
					SRV_DT_HOUSEREG_${year} with (nolock) 
				WHERE
				<if test='"1" == "0"'>
					TOT_REG_CD LIKE ''||#{sido_cd}||''||''||#{sgg_cd}||''||''||#{emdong_cd}||''||'%'
				</if>
				<!-- 수정 시작 (ggm) -->
				TOT_REG_CD LIKE 
				<if test='adm_cd.length() == 5'>
					''|| lpad(#{adm_cd} , 4) || '%'
				</if>
				<if test='adm_cd.length() != 5'>
					'${sido_cd}${sgg_cd}${emdong_cd}%'
				</if>
				<!-- 수정 끝 -->				
		) HOUSE
		INNER JOIN SRV_PG_ADMBORD with (nolock) bord
		ON HOUSE.SIDO_CD = bord.SIDO_CD AND HOUSE.SGG_CD = bord.SGG_CD AND HOUSE.EMDONG_CD = bord.EMDONG_CD
		<where>
			and bord.base_year = #{bnd_year}
			and bord.sido_cd = #{sido_cd}
			<if test='low_search == "2" and adm_length == "13"'>
				<!-- 20200417 수정 시작 (ggm) -->
				<if test='is_non_self == "Y"'>
					and bord.sgg_cd like lpad(#{sgg_cd} , 2) || '%'						
				</if>
				<if test='is_non_self != "Y"'>
					and bord.sgg_cd = #{sgg_cd}									
				</if>
				<!-- 20200417 수정 끝 -->   			
			</if>
			<if test='(low_search != "2") and (adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
				and bord.sgg_cd = #{sgg_cd}
				and bord.emdong_cd = #{emdong_cd}
			</if>
			<if test='house_type != null '>
				and house.rd_resid_1_type in
				<foreach  collection="house_type" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test='house_use_prid_cd != null '>
				and house.house_use_prid_cd = #{house_use_prid_cd}
			</if>
			<if test='const_year != null '>
				and house.rd_const_year = #{const_year}
			</if>
			<if test='house_area_cd != null '>
				and house.house_area_cd in
				<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
					#{house_area_type}
				</foreach>
			</if>
			<!-- 2016.10.25 수정 -->
			<if test='search_type != null '>
				and house.house_yn = #{search_type}
			</if>
		</where> 
		<if test='adm_length == 7'>
			GROUP BY bord.sido_cd || bord.sgg_cd || bord.emdong_cd, bord.emdong_nm
		</if>
		<if test='adm_length == "13"'>
			GROUP BY tot_reg_cd
		</if>
	</sql>			
    <select id="house2015ForBorough" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			<if test='adm_length == "0" or adm_length == "2" or adm_length == "5"' >
				<include refid="houseHead2015ForBorough" />
				<include refid="houseBodySgg2015ForBorough" />
			</if>
			<if test='adm_length == "7" or adm_length == "13" '>
				<include refid="houseHead2015ForBorough" />
				<include refid="houseBodyReg2015ForBorough" />
			</if>
		</if>
    </select>
	<!-- 농가통계 -->
	<select id="farmhouseholdForBorough" parameterType="hashmap" resultType="hashmap">
		
		<if test='area_type == "0"'>
			<if test='is_zoom_lvl4 == "Y"'>
				<!-- 4레벨 조회일 때 -->
				select
				       case when nvl(sum(nongga.fmember_cnt_num),0) <![CDATA[<=]]> 4 then 'N/A' 
					        when nvl(sum(nongga.fmember_cnt_num),0) <![CDATA[>]]> 4 then nvl(sum(nongga.fmember_cnt_num),0) end  farm_cnt
				     , nvl(round(sum(nongga.fmember_cnt)/sum(nongga.fmember_cnt_num)),0) avg_population 
				     , case when nvl(sum(nongga.fmember_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
					        when nvl(sum(nongga.fmember_cnt),0) <![CDATA[>]]> 4 then nvl(sum(nongga.fmember_cnt),0) end  population
				     , bord.adm_cd 
				     , bord.adm_nm 
				 from (
				 	   select adm_cd
			                , sum(fmember_cnt) fmember_cnt 
			                , count(fmember_cnt) fmember_cnt_num
			           from (
			           		   select
			           		   		substr(nonggacensus.adm_cd, 1, 4) || '0' as adm_cd
			           		   		, fmember_cnt      
						       from srv_dt_nonggacensus_${year} with (nolock) nonggacensus
			                   INNER JOIN SRV_PT_BD with (nolock) BD
			                   ON nonggacensus.sufid = bd.sufid
						       <where>
						        and tot_reg_cd in 
					              (
					              	select tot_reg_cd
							        from SRV_PG_TOTREGBORD with (nolock) 
							        <where> 
							        	and base_year = #{bnd_year}
							        	<if test='(adm_length == "5" and low_search == "1")'>
											and sido_cd = #{sido_cd}
										</if>
										<if test='(adm_length == "5" and low_search == "0")'>
											and sido_cd = #{sido_cd}
											<if test='is_non_self == "Y"'>
												and sgg_cd like #{sgg_cd_nonSelf} || '%'						
											</if>
											<if test='is_non_self != "Y"'>
												and sgg_cd = #{sgg_cd}									
											</if>					
										</if>
							        </where> 
					              )
						       </where>
					 )      
			         group by adm_cd) nongga
				     , (select
								admbord.sido_cd||admbord.sgg_cd adm_cd
								, admbord.sgg_nm adm_nm
	                    from SRV_PG_ATDRCBORD with (nolock) admbord
				        <where> 
				        	and admbord.base_year = #{bnd_year}
				        	<if test='(adm_length == "5" and low_search == "1")'>
								and admbord.sido_cd = #{sido_cd}
							</if>
							<if test='(adm_length == "5" and low_search == "0")'>
								and admbord.sido_cd = #{sido_cd}
								<if test='is_non_self == "Y"'>
									and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
								</if>
								<if test='is_non_self != "Y"'>
									and admbord.sgg_cd = #{sgg_cd}									
								</if>
							</if>
				        </where> 
				       )bord
				<where>
				 	nongga.adm_cd = bord.adm_cd 
			    </where>
			 	group by bord.adm_cd ,bord.adm_nm		
			</if>
			<if test='is_zoom_lvl4 != "Y"'>
				<!-- 기존 쿼리 -->
				select
				       case when nvl(sum(nongga.fmember_cnt_num),0) <![CDATA[<=]]> 4 then 'N/A' 
					        when nvl(sum(nongga.fmember_cnt_num),0) <![CDATA[>]]> 4 then nvl(sum(nongga.fmember_cnt_num),0) end  farm_cnt
				     , nvl(round(sum(nongga.fmember_cnt)/sum(nongga.fmember_cnt_num)),0) avg_population 
				     , case when nvl(sum(nongga.fmember_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
					        when nvl(sum(nongga.fmember_cnt),0) <![CDATA[>]]> 4 then nvl(sum(nongga.fmember_cnt),0) end  population
				 <if test='adm_length != "13" '>
				     , bord.adm_cd 
				     , bord.adm_nm 
				 </if>
				 <if test='adm_length == "13" '>
				     , bord.tot_reg_cd adm_cd 
				 </if>
				 from (
				 	   select tot_reg_cd
			                , sum(fmember_cnt) fmember_cnt 
			                , count(fmember_cnt) fmember_cnt_num 
				       from srv_dt_nonggacensus_${year} with (nolock) nonggacensus
	                   INNER JOIN SRV_PT_BD with (nolock) BD
	                   ON nonggacensus.sufid = bd.sufid
				       <where>
				        and tot_reg_cd in 
			              (
			              	select tot_reg_cd
					        from SRV_PG_TOTREGBORD with (nolock) 
					        <where> 
					        	and base_year = #{bnd_year}
					        	<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
									and sido_cd = #{sido_cd}
								</if>
								<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
									and sido_cd = #{sido_cd}
									<!-- 2020년수정변경 시작 (ggm) -->
									<if test='is_non_self == "Y"'>
										and sgg_cd like #{sgg_cd_nonSelf} || '%'						
									</if>
									<if test='is_non_self != "Y"'>
										and sgg_cd = #{sgg_cd}									
									</if>
									<!-- 2020년수정변경 끝 -->								
								</if>
								<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
									and sido_cd = #{sido_cd}
									and sgg_cd = #{sgg_cd}
									and emdong_cd = #{emdong_cd}
								</if>
					        </where> 
			              )
				       </where>
			         group by tot_reg_cd) nongga
				     , (select totbord.tot_reg_cd
				     		 <if test='adm_length == "0" or adm_length == "2"'>
								, admbord.sido_cd adm_cd
								, admbord.sido_nm adm_nm
							</if>
							<if test='adm_length == "5"'>
								, admbord.sido_cd||admbord.sgg_cd adm_cd
								, admbord.sgg_nm adm_nm
							</if>
							<if test='adm_length == "7"'>
								, admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
								, admbord.emdong_nm adm_nm
							</if>
	                    from SRV_PG_ADMBORD with (nolock) admbord
	                    INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
	                    ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
				        <where> 
				        	and admbord.base_year = #{bnd_year}
				        	<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
								and admbord.sido_cd = #{sido_cd}
							</if>
							<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
								and admbord.sido_cd = #{sido_cd}
								<!-- 2020년수정변경 시작 (ggm) -->
								<if test='is_non_self == "Y"'>
									and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
								</if>
								<if test='is_non_self != "Y"'>
									and admbord.sgg_cd = #{sgg_cd}									
								</if>
								<!-- 2020년수정변경 끝 -->
							</if>
							<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
								and admbord.sido_cd = #{sido_cd}
								and admbord.sgg_cd = #{sgg_cd}
								and admbord.emdong_cd = #{emdong_cd}
							</if>
				        </where> 
				       )bord
				<where>
				 	nongga.tot_reg_cd = bord.tot_reg_cd 
			    </where>
			    <if test='adm_length != "13" '>
				 	group by bord.adm_cd ,bord.adm_nm 
				</if>
				<if test='adm_length == "13" '>
					group by bord.tot_reg_cd
				</if>
			</if>
		</if>
		
		<if test='area_type == "1"'>
			select 
			       case when nvl(sum(nongga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
				        when nvl(sum(nongga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(sum(nongga.fmember_cnt),0) end  population
			     , nvl(round(avg(nongga.fmember_cnt)),0) avg_population
				 , case when nvl(count(nongga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
				        when nvl(count(nongga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(count(nongga.fmember_cnt),0) end  farm_cnt
			from srv_dt_nonggacensus_${year} with (nolock) nongga
			<where>
			<if test='area_type == "1" '>
				<if test='area_kind == "POLYGON" '>
					and st_within(nongga.pt,st_polyfromtext(#{area},0))=1 
				</if>
				<if test='area_kind == "POINT" '>
					and st_within(nongga.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
				</if>
				<if test='area_kind == "RECTANGLE" '>
					and st_within(nongga.pt,st_rectfromtext(#{area},0)) = 1
				</if>
			</if>
			</where>
		</if>
	</select>
    <!-- 임가통계 -->
    <select id="forestryhouseholdForBorough" parameterType="hashmap" resultType="hashmap">
    
        <if test='area_type == "0"'>
			<if test='is_zoom_lvl4 == "Y"'>
				<!-- 4레벨 조회일 때 -->
	            select
	                   case when nvl(sum(imga.fmember_cnt_num),0) <![CDATA[<=]]> 4  then 'N/A' 
	                        when nvl(sum(imga.fmember_cnt_num),0) <![CDATA[>]]> 4  then nvl(sum(imga.fmember_cnt_num),0) end  forestry_cnt
	                 , nvl(round(sum(imga.fmember_cnt)/sum(imga.fmember_cnt_num)),0) avg_population 
	                 , case when nvl(sum(imga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
	                        when nvl(sum(imga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(sum(imga.fmember_cnt),0) end  population
	                 , bord.adm_cd 
	                 , bord.adm_nm
	             from (
	                   select adm_cd
	                        , sum(fmember_cnt) fmember_cnt 
	                        , count(fmember_cnt) fmember_cnt_num 
	                   from (
	                   		select
			           		   		substr(imga.adm_cd, 1, 4) || '0' as adm_cd
			           		   		, fmember_cnt	                   		
	                       	from srv_dt_imgacensus_${year} with (nolock) imga
	                       		, srv_pt_bd with (nolock) bd
				            <where>
				                and imga.sufid = bd.sufid
				                and tot_reg_cd in 
				                      (
				                        select tot_reg_cd
				                        from SRV_PG_TOTREGBORD with (nolock) 
				                        <where> 
				                            and base_year = #{bnd_year}
				                            <if test='(adm_length == "5" and low_search == "1")'>
				                                and sido_cd = #{sido_cd}
				                            </if>
				                            <if test='(adm_length == "5" and low_search == "0")'>
				                                and sido_cd = #{sido_cd}
												<if test='is_non_self == "Y"'>
													and sgg_cd like #{sgg_cd_nonSelf} || '%'						
												</if>
												<if test='is_non_self != "Y"'>
													and sgg_cd = #{sgg_cd}									
												</if>                               
				                            </if>
				                  		</where> 
			                      )
			                   </where>
	                 )
	                 group by adm_cd) imga
	                 , (
	                     select
	                            admbord.sido_cd||admbord.sgg_cd adm_cd
	                            , admbord.sgg_nm adm_nm
	                    from SRV_PG_ATDRCBORD with (nolock) admbord
	                    <where> 
	                        and admbord.base_year = #{bnd_year}
	                        <if test='(adm_length == "5" and low_search == "1")'>
	                            and admbord.sido_cd = #{sido_cd}
	                        </if>
	                        <if test='(adm_length == "5" and low_search == "0")'>
	                            and admbord.sido_cd = #{sido_cd}
								<if test='is_non_self == "Y"'>
									and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
								</if>
								<if test='is_non_self != "Y"'>
									and admbord.sgg_cd = #{sgg_cd}									
								</if>                          
	                        </if>
	                    </where> 
	                   )bord
	            <where>
	                imga.adm_cd = bord.adm_cd 
	            </where>
                group by bord.adm_cd ,bord.adm_nm	
			</if>	        
			<if test='is_zoom_lvl4 != "Y"'>
				<!-- 기존 쿼리 -->        
	            select
	                   case when nvl(sum(imga.fmember_cnt_num),0) <![CDATA[<=]]> 4  then 'N/A' 
	                        when nvl(sum(imga.fmember_cnt_num),0) <![CDATA[>]]> 4  then nvl(sum(imga.fmember_cnt_num),0) end  forestry_cnt
	                 , nvl(round(sum(imga.fmember_cnt)/sum(imga.fmember_cnt_num)),0) avg_population 
	                 , case when nvl(sum(imga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
	                        when nvl(sum(imga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(sum(imga.fmember_cnt),0) end  population
	             <if test='adm_length != "13" '>
	                 , bord.adm_cd 
	                 , bord.adm_nm 
	             </if>
	             <if test='adm_length == "13" '>
	                 , bord.tot_reg_cd adm_cd 
	             </if>
	             from (
	                   select tot_reg_cd
	                        , sum(fmember_cnt) fmember_cnt 
	                        , count(fmember_cnt) fmember_cnt_num 
	                   from
	                       srv_dt_imgacensus_${year} with (nolock) imga
	                       , srv_pt_bd with (nolock) bd
	                   <where>
	                and imga.sufid = bd.sufid
	                and tot_reg_cd in 
	                      (
	                        select tot_reg_cd
	                        from SRV_PG_TOTREGBORD with (nolock) 
	                        <where> 
	                            and base_year = #{bnd_year}
	                            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
	                                and sido_cd = #{sido_cd}
	                            </if>
	                            <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
	                                and sido_cd = #{sido_cd}
									<!-- 2020년수정변경 시작 (ggm) -->
									<if test='is_non_self == "Y"'>
										and sgg_cd like #{sgg_cd_nonSelf} || '%'						
									</if>
									<if test='is_non_self != "Y"'>
										and sgg_cd = #{sgg_cd}									
									</if>
									<!-- 2020년수정변경 끝 -->                                
	                            </if>
	                            <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
	                                and sido_cd = #{sido_cd}
	                                and sgg_cd = #{sgg_cd}
	                                and emdong_cd = #{emdong_cd}
	                            </if>
	                        </where> 
	                      )
	                   </where>
	                 group by tot_reg_cd) imga
	                 , (
	                     select totbord.tot_reg_cd
	                         <if test='adm_length == "0" or adm_length == "2"'>
	                            , admbord.sido_cd adm_cd
	                            , admbord.sido_nm adm_nm
	                        </if>
	                        <if test='adm_length == "5"'>
	                            , admbord.sido_cd||admbord.sgg_cd adm_cd
	                            , admbord.sgg_nm adm_nm
	                        </if>
	                        <if test='adm_length == "7"'>
	                            , admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
	                            , admbord.emdong_nm adm_nm
	                        </if>
	                    from SRV_PG_ADMBORD with (nolock) admbord
	                    INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
	                    ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
	                    <where> 
	                        and admbord.base_year = #{bnd_year}
	                        <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
	                            and admbord.sido_cd = #{sido_cd}
	                        </if>
	                        <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
	                            and admbord.sido_cd = #{sido_cd}
								<!-- 2020년수정변경 시작 (ggm) -->
								<if test='is_non_self == "Y"'>
									and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
								</if>
								<if test='is_non_self != "Y"'>
									and admbord.sgg_cd = #{sgg_cd}									
								</if>
								<!-- 2020년수정변경 끝 -->                            
	                        </if>
	                        <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
	                            and admbord.sido_cd = #{sido_cd}
	                            and admbord.sgg_cd = #{sgg_cd}
	                            and admbord.emdong_cd = #{emdong_cd}
	                        </if>
	                    </where> 
	                   )bord
	            <where>
	                imga.tot_reg_cd = bord.tot_reg_cd 
	            </where>
	            <if test='adm_length != "13" '>
	                group by bord.adm_cd ,bord.adm_nm 
	            </if>
	            <if test='adm_length == "13" '>
	                group by bord.tot_reg_cd
	            </if>
            </if>
        </if>
        <if test='area_type == "1"'>
            select 
                   case when nvl(sum(imga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(sum(imga.fmember_cnt),0) <![CDATA[>]]> 4   then nvl(sum(imga.fmember_cnt),0) end  population
                 , nvl(round(avg(imga.fmember_cnt)),0) avg_population
                 , case when nvl(count(imga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(count(imga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(count(imga.fmember_cnt),0) end  forestry_cnt 
            from srv_dt_imgacensus_${year} with (nolock) imga
            <where>
            <if test='area_type == "1" '>
                <if test='area_kind == "POLYGON" '>
                    and st_within(imga.pt,st_polyfromtext(#{area},0))=1 
                </if>
                <if test='area_kind == "POINT" '>
                    and st_within(imga.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
                </if>
                <if test='area_kind == "RECTANGLE" '>
                    and st_within(imga.pt,st_rectfromtext(#{area},0)) = 1
                </if>
            </if>
            </where>
        </if>
    </select>
	<!-- 어가통계 -->
    <select id="fisheryhouseholdForBorough" parameterType="hashmap" resultType="hashmap">
        
        <if test='area_type == "0"'>
			<if test='is_zoom_lvl4 == "Y"'>
				<!-- 4레벨 조회일 때 -->
	            select
	                   case when nvl(sum(oga.fmember_cnt_num),0) <![CDATA[<=]]> 4 then 'N/A' 
	                        when nvl(sum(oga.fmember_cnt_num),0) <![CDATA[>]]> 4 then nvl(sum(oga.fmember_cnt_num),0) end  fishery_cnt   
	                 , nvl(round(sum(oga.fmember_cnt)/sum(oga.fmember_cnt_num)),0) avg_population 
	                 , case when nvl(sum(oga.fmember_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
	                        when nvl(sum(oga.fmember_cnt),0) <![CDATA[>]]> 4 then nvl(sum(oga.fmember_cnt),0) end  population 
	                 , bord.adm_cd 
	                 , bord.adm_nm
	             from (
	                   select
	                        adm_cd
	                        , sum(fmember_cnt) fmember_cnt 
	                        , count(fmember_cnt) fmember_cnt_num 
	                   from (
	                   		select
	                   			substr(oga.adm_cd, 1, 4) || '0' as adm_cd
	                   			, fmember_cnt
	                        from srv_dt_ogacensus_${year} with (nolock) oga
	                        , srv_pt_bd with (nolock) bd  
		                    <where>
		                    and bd.sufid = oga.sufid
		                    and tot_reg_cd in 
		                      (
		                        select tot_reg_cd
		                        from SRV_PG_TOTREGBORD with (nolock) 
		                        <where> 
		                            and base_year = #{bnd_year}
		                            <if test='(adm_length == "5" and low_search == "1")'>
		                                and sido_cd = #{sido_cd}
		                            </if>
		                            <if test='(adm_length == "5" and low_search == "0")'>
		                                and sido_cd = #{sido_cd}
										<if test='is_non_self == "Y"'>
											and sgg_cd like #{sgg_cd_nonSelf} || '%'						
										</if>
										<if test='is_non_self != "Y"'>
											and sgg_cd = #{sgg_cd}									
										</if>    
		                            </if>
		                        </where> 
		                      )
		                   <if test='oga_div != "0" '>
		                       and oga_div=#{oga_div}
		                   </if>
		                   </where>
	                 )
	                 group by adm_cd
	                 ) oga
	                 , (
	                    select
	                            admbord.sido_cd||admbord.sgg_cd adm_cd
	                            , admbord.sgg_nm adm_nm
	                    from SRV_PG_ATDRCBORD with (nolock) admbord
	                    <where> 
	                        and admbord.base_year = #{bnd_year}
	                        <if test='(adm_length == "5" and low_search == "1")'>
	                            and admbord.sido_cd = #{sido_cd}
	                        </if>
	                        <if test='(adm_length == "5" and low_search == "0")'>
	                            and admbord.sido_cd = #{sido_cd}
								<if test='is_non_self == "Y"'>
									and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
								</if>
								<if test='is_non_self != "Y"'>
									and admbord.sgg_cd = #{sgg_cd}									
								</if>
	                        </if>
	                    </where> 
	                   )bord
	            <where>
	                oga.adm_cd = bord.adm_cd 
	            </where>
                group by bord.adm_cd ,bord.adm_nm 
			</if>	        
			<if test='is_zoom_lvl4 != "Y"'>
				<!-- 기존 쿼리 -->        
	            select
	                   case when nvl(sum(oga.fmember_cnt_num),0) <![CDATA[<=]]> 4 then 'N/A' 
	                        when nvl(sum(oga.fmember_cnt_num),0) <![CDATA[>]]> 4 then nvl(sum(oga.fmember_cnt_num),0) end  fishery_cnt   
	                 , nvl(round(sum(oga.fmember_cnt)/sum(oga.fmember_cnt_num)),0) avg_population 
	                 , case when nvl(sum(oga.fmember_cnt),0) <![CDATA[<=]]> 4 then 'N/A' 
	                        when nvl(sum(oga.fmember_cnt),0) <![CDATA[>]]> 4 then nvl(sum(oga.fmember_cnt),0) end  population 
	             <if test='adm_length != "13" '>
	                 , bord.adm_cd 
	                 , bord.adm_nm 
	             </if>
	             <if test='adm_length == "13" '>
	                 , bord.tot_reg_cd adm_cd 
	             </if>
	             from (
	                   select
	                        tot_reg_cd
	                        , sum(fmember_cnt) fmember_cnt 
	                        , count(fmember_cnt) fmember_cnt_num 
	                   from
	                        srv_dt_ogacensus_${year} with (nolock) oga
	                        , srv_pt_bd with (nolock) bd  
	                   <where>
	                    and bd.sufid = oga.sufid
	                    and tot_reg_cd in 
	                      (
	                        select tot_reg_cd
	                        from SRV_PG_TOTREGBORD with (nolock) 
	                        <where> 
	                            and base_year = #{bnd_year}
	                            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
	                                and sido_cd = #{sido_cd}
	                            </if>
	                            <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
	                                and sido_cd = #{sido_cd}
									<!-- 2020년수정변경 시작 (ggm) -->
									<if test='is_non_self == "Y"'>
										and sgg_cd like #{sgg_cd_nonSelf} || '%'						
									</if>
									<if test='is_non_self != "Y"'>
										and sgg_cd = #{sgg_cd}									
									</if>
									<!-- 2020년수정변경 끝 -->     
	                            </if>
	                            <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
	                                and sido_cd = #{sido_cd}
	                                and sgg_cd = #{sgg_cd}
	                                and emdong_cd = #{emdong_cd}
	                            </if>
	                        </where> 
	                      )
	                   <if test='oga_div != "0" '>
	                       and oga_div=#{oga_div}
	                   </if>
	                   </where>
	                 group by tot_reg_cd
	                 ) oga
	                 , (
	                    select totbord.tot_reg_cd
	                         <if test='adm_length == "0" or adm_length == "2"'>
	                            , admbord.sido_cd adm_cd
	                            , admbord.sido_nm adm_nm
	                        </if>
	                        <if test='adm_length == "5"'>
	                            , admbord.sido_cd||admbord.sgg_cd adm_cd
	                            , admbord.sgg_nm adm_nm
	                        </if>
	                        <if test='adm_length == "7"'>
	                            , admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
	                            , admbord.emdong_nm adm_nm
	                        </if>
	                    from SRV_PG_ADMBORD with (nolock) admbord
	                    INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
	                    ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
	                    <where> 
	                        and admbord.base_year = #{bnd_year}
	                        <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
	                            and admbord.sido_cd = #{sido_cd}
	                        </if>
	                        <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
	                            and admbord.sido_cd = #{sido_cd}
								<!-- 2020년수정변경 시작 (ggm) -->
								<if test='is_non_self == "Y"'>
									and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
								</if>
								<if test='is_non_self != "Y"'>
									and admbord.sgg_cd = #{sgg_cd}									
								</if>
								<!-- 2020년수정변경 끝 -->
	                        </if>
	                        <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
	                            and admbord.sido_cd = #{sido_cd}
	                            and admbord.sgg_cd = #{sgg_cd}
	                            and admbord.emdong_cd = #{emdong_cd}
	                        </if>
	                    </where> 
	                   )bord
	            <where>
	                oga.tot_reg_cd = bord.tot_reg_cd 
	            </where>
	            <if test='adm_length != "13" '>
	                group by bord.adm_cd ,bord.adm_nm 
	            </if>
	            <if test='adm_length == "13" '>
	                group by bord.tot_reg_cd  
	            </if>
            </if>
        </if>
        <if test='area_type == "1"'>
            select 
                   case when nvl(count(oga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(count(oga.fmember_cnt),0) <![CDATA[>]]> 4  then nvl(count(oga.fmember_cnt),0) end  fishery_cnt   
                 , nvl(round(avg(oga.fmember_cnt)),0) avg_population 
                 , case when nvl(sum(oga.fmember_cnt),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(sum(oga.fmember_cnt),0) <![CDATA[>]]> 4   then nvl(sum(oga.fmember_cnt),0) end  population 
            from srv_dt_ogacensus_${year} with (nolock) oga
            <where>
                <if test='area_kind == "POLYGON" '>
                    and st_within(oga.pt,st_polyfromtext(#{area},0))=1 
                </if>
                <if test='area_kind == "POINT" '>
                    and st_within(oga.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
                </if>
                <if test='area_kind == "RECTANGLE" '>
                    and st_within(oga.pt,st_rectfromtext(#{area},0)) = 1
                </if>
            </where>
        </if>
    </select>
    <sql id="companyTotalHeadForBorough">
		SELECT
			<if test='(adm_length == "0") or (adm_length == "2")'>
				bord.sido_cd as adm_cd
				, bord.sido_nm as adm_nm
			</if>
			<if test='adm_length == "5"'>
				bord.sido_cd || bord.sgg_cd as adm_cd
				, bord.sgg_nm as adm_nm
			</if>
			<if test='adm_length == "7"'>
				bord.adm_cd as adm_cd
				, bord.emdong_nm as adm_nm
			</if>
			<if test='adm_length == "13"'>
				corp.adm_cd as adm_cd
			</if>
			, case when nvl(corp_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				when nvl(corp_cnt, 0) <![CDATA[>]]> 4 then nvl(corp_cnt, 0) end  corp_cnt
			, case when nvl(corp.worker_sum_cnt, 0) <![CDATA[<=]]> 4 then 'N/A' 
				else corp.worker_sum_cnt END tot_worker
		FROM
	</sql> 
	<sql id="sggWithClassCdThemeCdForBorough">
		(
		SELECT
			sido_cd
			<if test='adm_length == "5"'>
				, sgg_cd
			</if>
			, sum(corp_cnt) as corp_cnt <!-- 2016. 10. 06 수정 -->
			, sum(employee_cnt) as worker_sum_cnt
		FROM
		<choose>
			<when test='theme_cd != null and class_code == null'>
				<!-- 20200417 수정 시작 (ggm) -->			
				<if test='is_zoom_lvl4 == "Y"'>
					(select base_year, sido_cd, theme_cd, corp_cnt, employee_cnt
						, to_char(decode(substr(sgg_cd, 3, 1), '0', sgg_cd, substr(sgg_cd, 1, 2) || '0')) as sgg_cd
					from srv_dt_corpthemesgg with (nolock)) 		
				</if>
				<if test='is_zoom_lvl4 != "Y"'>
					srv_dt_corpthemesgg with (nolock)
				</if>
				<!-- 20200417 수정 끝 --> 
			</when>
			<otherwise>
				<!-- 20200417 수정 시작 (ggm) -->
				<if test='is_zoom_lvl4 == "Y"'>
					(select base_year, sido_cd, ksic_1_cd, ksic_5_cd, corp_cnt, employee_cnt
						, to_char(decode(substr(sgg_cd, 3, 1), '0', sgg_cd, substr(sgg_cd, 1, 2) || '0')) as sgg_cd
					from srv_dt_corpclasssgg with (nolock)) 		
				</if>
				<if test='is_zoom_lvl4 != "Y"'>
					srv_dt_corpclasssgg with (nolock)
				</if>
				<!-- 20200417 수정 끝 -->				 
			</otherwise>
		</choose>
		WHERE
			base_year = #{year}
			<choose>
				<when test='theme_cd != null and class_code == null'>
					and theme_cd like #{theme_cd} || '%'
					<if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
						and sido_cd = #{sido_cd}
					</if>
					<if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
						and sido_cd = #{sido_cd}						
						<!-- 20200417 수정 시작 (ggm) -->
						<if test='is_non_self == "Y"'>
							and sgg_cd like #{sgg_cd_nonSelf} || '%'						
						</if>
						<if test='is_non_self != "Y"'>
							and sgg_cd = #{sgg_cd}									
						</if>
						<!-- 20200417 수정 끝 -->						
					</if>
					<if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
						and sido_cd = #{sido_cd}
						and sgg_cd = #{sgg_cd}
						and emdong_cd = #{emdong_cd}
					</if>
				</when>
				<otherwise>
					<if test='class_code != null and class_code.length() ==  1'>
						and ksic_1_cd = #{ksic1}
					</if>
					<if test = 'class_code != null and class_code.length() > 1'>
						and ksic_5_cd like #{ksic5} || '%'
					</if>
					<if test = 'adm_cd != null and adm_cd.length() >= 2'>
						and sido_cd = #{sido_cd}
					</if>
					<if test = 'amd_cd != null and adm_cd.length() == 5'>
						<!-- 20200417 수정 시작 (ggm) -->
						<if test='is_non_self == "Y"'>
							and sgg_cd like #{sgg_cd_nonSelf} || '%'						
						</if>
						<if test='is_non_self != "Y"'>
							and sgg_cd = #{sgg_cd}									
						</if>
						<!-- 20200417 수정 끝 -->						
					</if>
				</otherwise>
			</choose>
		GROUP BY sido_cd
		<if test='adm_length == "5"'>
			, sgg_cd
		</if>
		) corp
	</sql>
	<sql id="totWithClassCdThemeCdForBorough">
		(
		SELECT
			<if test='adm_length == "7"'>
				substr(tot_reg_cd, 1, 7) as adm_cd
			</if>
			<if test='adm_length == "13"'>
				tot_reg_cd as adm_cd
			</if>
			, sum(corp_cnt) as corp_cnt  <!-- 2016. 10. 06 수정 -->
			, sum(employee_cnt) as worker_sum_cnt
		FROM
		<choose>
			<when test='theme_cd != null and class_code == null'>
				srv_dt_corpthemereg with (nolock) 
			</when>
			<otherwise>
				srv_dt_corpclassreg with (nolock) 
			</otherwise>
		</choose>
		WHERE
			base_year = #{year}
			<choose>
				<when test='theme_cd != null and class_code == null'>
					and theme_cd like #{theme_cd} || '%'
					<!-- 20200417 수정 시작 (ggm) -->
					<if test='is_non_self == "Y"'>
						and tot_reg_cd like #{adm_cd_nonSelf} || '%'						
					</if>
					<if test='is_non_self != "Y"'>
						and tot_reg_cd like #{adm_cd} || '%'									
					</if>
					<!-- 20200417 수정 끝 -->						
				</when>
				<otherwise>
					<if test='class_code != null and class_code.length() ==  1'>
						and ksic_1_cd = #{ksic1}
					</if>
					<if test = 'class_code != null and class_code.length() > 1'>
						and ksic_5_cd like #{ksic5} || '%'
					</if>
					<!-- 20200417 수정 시작 (ggm) -->
					<if test='is_non_self == "Y"'>
						and tot_reg_cd like #{adm_cd_nonSelf} || '%'						
					</if>
					<if test='is_non_self != "Y"'>
						and tot_reg_cd like #{adm_cd} || '%'									
					</if>
					<!-- 20200417 수정 끝 -->					
				</otherwise>
			</choose>
		<if test='adm_length == "7"'>
			GROUP BY substr(tot_reg_cd, 1, 7)
		</if>
		<if test='adm_length == "13"'>
			GROUP BY tot_reg_cd
		</if>
		) corp
	</sql>		
	<!-- 사업체 통계 2016 (집계테이블 이용) -->
	<select id="companyTotalForBorough" parameterType="hashmap" resultType="hashmap">
		<if test='area_type == "0"'>
			/* 전국 */
			<if test = '(adm_length == "0") or (adm_length == "2")'>
				<include refid="companyTotalHeadForBorough" />
				<include refid="sggWithClassCdThemeCdForBorough" />
				INNER JOIN (
					<!-- 2017. 03. 21 오류수정 -->
					select sido_cd, sido_nm from srv_pg_sidobord with (nolock) where base_year = #{bnd_year}
				) bord
				ON corp.sido_cd = bord.sido_cd
			</if>
			/* 시군구 */
			<if test = '(adm_length == "5")'>
				<include refid="companyTotalHeadForBorough" />
				<include refid="sggWithClassCdThemeCdForBorough" />
				INNER JOIN (
					select sido_cd, sgg_cd, sido_nm, sgg_nm
					<!-- 2020년수정변경 시작 (ggm) -->	
				    from							    
					<if test='is_zoom_lvl4 == "Y"'>
						SRV_PG_ATDRCBORD with (nolock)
					</if>
					<if test='is_zoom_lvl4 != "Y"'>
						srv_pg_sggbord with (nolock)
					</if>							    
				    <!-- 2020년수정변경 끝 -->
					<!-- 2017. 03. 21 오류수정 -->
					where base_year = #{bnd_year} and sido_cd = #{sido_cd}
				) bord
				ON corp.sido_cd = bord.sido_cd
					and corp.sgg_cd = bord.sgg_cd
			</if>
			/* 읍면동 */
			<if test = '(adm_length == "7")'>
				<include refid="companyTotalHeadForBorough" />
				<include refid="totWithClassCdThemeCdForBorough" />
				INNER JOIN (
					SELECT
						sido_cd || sgg_cd || emdong_cd as adm_cd
						, sido_nm
						, sgg_cd, sgg_nm
						, emdong_cd, emdong_nm
					  FROM srv_pg_admbord with (nolock) 
					  <!-- 2017. 03. 21 오류수정 -->
					 WHERE base_year =  #{bnd_year}
				) bord
				ON corp.adm_cd =  bord.adm_cd
			</if>
			/* 집계구 */
			<if test = 'adm_length == "13"'>
				<include refid="companyTotalHeadForBorough" />
				<include refid="totWithClassCdThemeCdForBorough" />
			</if>
		</if>
	</select>
	<!-- 20200417 수정 시작 (ggm) -->
    <!-- 가구원 통계 -->
    <select id="householdmemberForBorough" parameterType="hashmap" resultType="hashmap">
        <if test='area_type == "0"'>
			<if test='is_zoom_lvl4 == "Y"'>
				<!-- 4레벨 조회일 때 -->
	            select 
	                   case when nvl(sum(fmember.fmember_no),0) <![CDATA[<=]]> 4 then 'N/A' 
	                        when nvl(sum(fmember.fmember_no),0) <![CDATA[>]]> 4 then nvl(sum(fmember.fmember_no),0) end  population
	                 , bord.adm_cd 
	                 , bord.adm_nm 
	             from (
	                   select adm_cd
	                        , count(fmember_no) fmember_no 
	                   from (
	                   		select
	                   			substr(family.adm_cd, 1, 4) || '0' as adm_cd
	                   			, fmember_no	                    
	                       from srv_dt_nongimogacensusfamily_${year} with (nolock) family
	                       		, srv_pt_bd with (nolock) bd
		                   <where>  
		                    and family.sufid = bd.sufid 
		                    and tot_reg_cd in 
		                      (
		                        select tot_reg_cd
		                        from SRV_PG_TOTREGBORD with (nolock) 
		                        <where> 
		                            and base_year = #{bnd_year}
		                            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
		                                and sido_cd = #{sido_cd}
		                            </if>
		                            <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
		                                and sido_cd = #{sido_cd}
										<!-- 2020년수정변경2 시작 (ggm) -->
										<if test='is_non_self == "Y"'>
											and sgg_cd like #{sgg_cd_nonSelf} || '%'						
										</if>
										<if test='is_non_self != "Y"'>
											and sgg_cd = #{sgg_cd}									
										</if>
										<!-- 2020년수정변경2 끝 -->                                 
		                            </if>
		                            <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
		                                and sido_cd = #{sido_cd}
		                                and sgg_cd = #{sgg_cd}
		                                and emdong_cd = #{emdong_cd}
		                            </if>
		                        </where> 
		                      )
		                      <if test='data_type != null '>
		                          and data_type=#{data_type}
		                      </if>
		                      <if test='gender != "0" '>
		                          and gender=#{gender}
		                      </if>
		                      <if test='age_from != null '>
		                          and age <![CDATA[>=]]> #{age_from}
		                          and age <![CDATA[<=]]> #{age_to}
		                      </if>
		                   </where>
		             )      
	                 group by adm_cd
	             ) fmember
	             , (
	                select
	                        admbord.sido_cd||admbord.sgg_cd adm_cd
	                        , admbord.sgg_nm adm_nm
	                from SRV_PG_ATDRCBORD with (nolock) admbord
	                <where> 
	                    and admbord.base_year = #{bnd_year}
	                    <if test='(adm_length == "5" and low_search == "1")'>
	                        and admbord.sido_cd = #{sido_cd}
	                    </if>
	                    <if test='(adm_length == "5" and low_search == "0")'>
	                        and admbord.sido_cd = #{sido_cd}
							<if test='is_non_self == "Y"'>
								and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
							</if>
							<if test='is_non_self != "Y"'>
								and admbord.sgg_cd = #{sgg_cd}									
							</if>                      
	                    </if>
	                </where> 
	               )bord
	            <where>
	                fmember.adm_cd =  bord.adm_cd 
	            </where>
                group by bord.adm_cd ,bord.adm_nm        
			</if>	        
			<if test='is_zoom_lvl4 != "Y"'>
				<!-- 기존 쿼리 -->        
	            select 
	                   case when nvl(sum(fmember.fmember_no),0) <![CDATA[<=]]> 4 then 'N/A' 
	                        when nvl(sum(fmember.fmember_no),0) <![CDATA[>]]> 4 then nvl(sum(fmember.fmember_no),0) end  population
	             <if test='adm_length != "13" '>
	                 , bord.adm_cd 
	                 , bord.adm_nm 
	             </if>
	             <if test='adm_length == "13" '>
	                 , bord.tot_reg_cd adm_cd 
	             </if>
	             from (
	                   select tot_reg_cd
	                        , count(fmember_no) fmember_no 
	                   from 
	                       srv_dt_nongimogacensusfamily_${year} with (nolock) family
	                       , srv_pt_bd with (nolock) bd
	                   <where>  
	                    and family.sufid = bd.sufid 
	                    and tot_reg_cd in 
	                      (
	                        select tot_reg_cd
	                        from SRV_PG_TOTREGBORD with (nolock) 
	                        <where> 
	                            and base_year = #{bnd_year}
	                            <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
	                                and sido_cd = #{sido_cd}
	                            </if>
	                            <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
	                                and sido_cd = #{sido_cd}
									<!-- 2020년수정변경2 시작 (ggm) -->
									<if test='is_non_self == "Y"'>
										and sgg_cd like #{sgg_cd_nonSelf} || '%'						
									</if>
									<if test='is_non_self != "Y"'>
										and sgg_cd = #{sgg_cd}									
									</if>
									<!-- 2020년수정변경2 끝 -->                                 
	                            </if>
	                            <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
	                                and sido_cd = #{sido_cd}
	                                and sgg_cd = #{sgg_cd}
	                                and emdong_cd = #{emdong_cd}
	                            </if>
	                        </where> 
	                      )
	                      <if test='data_type != null '>
	                          and data_type=#{data_type}
	                      </if>
	                      <if test='gender != "0" '>
	                          and gender=#{gender}
	                      </if>
	                      <if test='age_from != null '>
	                          and age <![CDATA[>=]]> #{age_from}
	                          and age <![CDATA[<=]]> #{age_to}
	                      </if>
	                   </where>
	                 group by tot_reg_cd
	             ) fmember
	             , (
	                select totbord.tot_reg_cd
	                     <if test='adm_length == "0" or adm_length == "2"'>
	                        , admbord.sido_cd adm_cd
	                        , admbord.sido_nm adm_nm
	                    </if>
	                    <if test='adm_length == "5"'>
	                        , admbord.sido_cd||admbord.sgg_cd adm_cd
	                        , admbord.sgg_nm adm_nm
	                    </if>
	                    <if test='adm_length == "7"'>
	                        , admbord.sido_cd||admbord.sgg_cd||admbord.emdong_cd adm_cd
	                        , admbord.emdong_nm adm_nm
	                    </if>
	                from SRV_PG_ADMBORD with (nolock) admbord
	                INNER JOIN SRV_PG_TOTREGBORD with (nolock) totbord
	                ON admbord.base_year = totbord.base_year and admbord.sido_cd = totbord.sido_cd and admbord.sgg_cd = totbord.sgg_cd and admbord.emdong_cd = totbord.emdong_cd
	                <where> 
	                    and admbord.base_year = #{bnd_year}
	                    <if test='(adm_length == "2" and low_search == "0")or(adm_length == "5" and low_search == "1")or(adm_length == "7" and low_search == "2")'>
	                        and admbord.sido_cd = #{sido_cd}
	                    </if>
	                    <if test='(adm_length == "5" and low_search == "0")or(adm_length == "7" and low_search == "1")or(adm_length == "13" and low_search == "2")'>
	                        and admbord.sido_cd = #{sido_cd}
							<!-- 2020년수정변경2 시작 (ggm) -->
							<if test='is_non_self == "Y"'>
								and admbord.sgg_cd like #{sgg_cd_nonSelf} || '%'						
							</if>
							<if test='is_non_self != "Y"'>
								and admbord.sgg_cd = #{sgg_cd}									
							</if>
							<!-- 2020년수정변경2 끝 -->                        
	                    </if>
	                    <if test='(adm_length == "7" and low_search == "0") or (adm_length == "13" and low_search == "0") or (adm_length == "13" and low_search == "1")'>
	                        and admbord.sido_cd = #{sido_cd}
	                        and admbord.sgg_cd = #{sgg_cd}
	                        and admbord.emdong_cd = #{emdong_cd}
	                    </if>
	                </where> 
	               )bord
	            <where>
	                fmember.tot_reg_cd =  bord.tot_reg_cd 
	            </where>
	            <if test='adm_length != "13" '>
	                group by bord.adm_cd ,bord.adm_nm 
	            </if>
	            <if test='adm_length == "13" '>
	                group by bord.tot_reg_cd
	            </if>
			</if>	            
        </if>
        <if test='area_type == "1"'>
            select 
                   case when nvl(count(fmember.fmember_no),0) <![CDATA[<=]]> 4  then 'N/A' 
                        when nvl(count(fmember.fmember_no),0) <![CDATA[>]]> 4  then nvl(count(fmember.fmember_no),0) end  population
            from srv_dt_nongimogacensusfamily_${year} with (nolock) fmember 
            <where>
                <if test='area_kind == "POLYGON" '>
                    and ST_WITHIN(fmember.pt,st_polyfromtext(#{area},0))=1 
                </if>
                <if test='area_kind == "POINT" '>
                    and ST_WITHIN(fmember.pt,st_buffer(st_pointfromtext(#{area},0),#{round})) = 1
                </if>
                <if test='area_kind == "RECTANGLE" '>
                    and ST_WITHIN(fmember.pt,st_rectfromtext(#{area},0)) = 1
                </if>
                <if test='data_type != null '>
                    and fmember.data_type=#{data_type}
                </if>
                <if test='gender != "0" '>
                    and fmember.gender=#{gender}
                </if>
                <if test='age_from != null '>
                    and fmember.age <![CDATA[>=]]> #{age_from}
                    and fmember.age <![CDATA[<=]]> #{age_to}
                </if>
            </where> 
        </if>
    </select>
    <!-- 20200417 수정 끝 -->	      	   						
	<!-- 2020년수정변경 끝 -->
	
	<!-- ======================================= SGIS_4 행정구역 그리드(500m 격자 및 BSCA 적용) 시작 bnd_grid start ======================================== -->
	<!-- SGIS4_0107 수정 시작-->
	<!-- 행정구역 그리드 총조사주요지표(총인구, 가구, 평균 가구원, 주택, 사업체수 -->
	<select id="censusIndexBndGrid" parameterType="hashmap" resultType="hashmap">
		<if test=' filter=="tot_ppltn" '>
			<if test='zoom == "0"  '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.LK) AS POP_LE_ORG_CNT
						, SUM(a.SK) AS POP_EQ_SCA_CNT
						, SUM(a.D1) AS POP_LE_ORG_SUM
						, SUM(a.D2) AS POP_LE_SCA_SUM
						, SUM(a.DD1Z) AS POP_GT_ORG_SUM
					from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
					 (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid )
					    and a.GRID_LEVEL_DIV='100k'
						and a.base_year=#{year}
						<if test='gender != "0" and gender !=null'>
						and a.gender=#{gender}
						</if>
						<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
						</if>
					group by a.grid_cd
			</if>
			<if test='  zoom=="1" or zoom=="2" or zoom=="3" '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.LK) AS POP_LE_ORG_CNT
						, SUM(a.SK) AS POP_EQ_SCA_CNT
						, SUM(a.D1) AS POP_LE_ORG_SUM
						, SUM(a.D2) AS POP_LE_SCA_SUM
						, SUM(a.DD1Z) AS POP_GT_ORG_SUM
					from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
					(select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
						and a.GRID_LEVEL_DIV='10k'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test=' zoom == "4" or zoom=="5" '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.LK) AS POP_LE_ORG_CNT
						, SUM(a.SK) AS POP_EQ_SCA_CNT
						, SUM(a.D1) AS POP_LE_ORG_SUM
						, SUM(a.D2) AS POP_LE_SCA_SUM
						, SUM(a.DD1Z) AS POP_GT_ORG_SUM
					from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
					(select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} ) 
					and  a.GRID_LEVEL_DIV='10k'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test=' zoom=="6" or zoom=="7"'>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.LK) AS POP_LE_ORG_CNT
						, SUM(a.SK) AS POP_EQ_SCA_CNT
						, SUM(a.D1) AS POP_LE_ORG_SUM
						, SUM(a.D2) AS POP_LE_SCA_SUM
						, SUM(a.DD1Z) AS POP_GT_ORG_SUM
					from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
						(select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd = 
							(
								select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
								from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}  
						) 
						and a.GRID_LEVEL_DIV='1k'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test='zoom=="8"'>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.LK) AS POP_LE_ORG_CNT
						, SUM(a.SK) AS POP_EQ_SCA_CNT
						, SUM(a.D1) AS POP_LE_ORG_SUM
						, SUM(a.D2) AS POP_LE_SCA_SUM
						, SUM(a.DD1Z) AS POP_GT_ORG_SUM
					from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
						(select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd = 
							(
								select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
								from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}  
						) 
						and a.GRID_LEVEL_DIV='500m'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test='zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) AS POP_LE_ORG_CNT
						, SUM(CASE WHEN a.BSCA = 5 THEN 1 ELSE 0 END) AS POP_EQ_SCA_CNT
						, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[<=]]> 5 THEN a.PPLTN_CNT ELSE 0 END) AS POP_LE_ORG_SUM
						, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[<=]]> 5 THEN a.BSCA ELSE 0 END) AS POP_LE_SCA_SUM
						, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[>]]> 5 THEN a.PPLTN_CNT ELSE 0 END) AS POP_GT_ORG_SUM
					from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
						(select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
							(
								select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
								from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}  
						) 
						and a.GRID_LEVEL_DIV='100m'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
		</if>
		<if test='filter=="tot_family"'>
			<if test='zoom == "0" '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
						, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
						, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
						, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
						, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
					from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
					 		(select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) 
						and a.GRID_LEVEL_DIV='100k'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test='  zoom=="1" or zoom=="2" or  zoom=="3" '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
						, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
						, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
						, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
						, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
					from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
					 (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
						and a.GRID_LEVEL_DIV='10k'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test='  zoom == "4" or zoom=="5"  '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
						, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
						, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
						, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
						, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
					from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
					 (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  ) 
					and  a.GRID_LEVEL_DIV='10k'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test=' zoom=="6" or zoom=="7"'>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
						, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
						, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
						, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
						, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
					from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
						( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd = 
							(
								select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
								from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}
						) 
					and  a.GRID_LEVEL_DIV='1k'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test=' zoom=="8"   '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
						, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
						, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
						, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
						, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
					from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
						( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd = 
							(
								select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
								from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}
						) 
					and a.GRID_LEVEL_DIV='500m'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
			<if test='zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
					select 
						a.grid_cd adm_cd
						, a.grid_cd adm_nm
						, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) AS FAM_LE_ORG_CNT
						, SUM(CASE WHEN a.FAMILY_BSCA = 5 THEN 1 ELSE 0 END) AS FAM_EQ_SCA_CNT
						, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[<=]]> 5 THEN a.FAMILY_CNT ELSE 0 END) AS FAM_LE_ORG_SUM
						, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[<=]]> 5 THEN a.FAMILY_BSCA ELSE 0 END) AS FAM_LE_SCA_SUM
						, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[>]]> 5 THEN a.FAMILY_CNT ELSE 0 END) AS FAM_GT_ORG_SUM
					from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
					where  grid_cd in 
						( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
							(
								select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
								from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}
						) 
					and a.GRID_LEVEL_DIV='100m'
						
						and a.base_year=#{year}
					group by a.grid_cd
			</if>
		</if>
		<if test='filter=="tot_house"'>
			<if test='zoom == "0"  '>
					select 
						house.grid_cd adm_cd
						, house.grid_cd adm_nm
						, SUM(house.LK) AS HOU_LE_ORG_CNT
						, SUM(house.SK) AS HOU_EQ_SCA_CNT
						, SUM(house.D1) AS HOU_LE_ORG_SUM
						, SUM(house.D2) AS HOU_LE_SCA_SUM
						, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
					from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
					where  grid_cd in 
					(select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) 
					and  house.GRID_LEVEL_DIV='100k'
						
						and house.base_year=#{year}
						and ''||house.house_type = 'resid_type'
					group by house.grid_cd
			</if>
			<if test=' zoom=="1" or zoom=="2" or  zoom=="3"  '>
					select 
						house.grid_cd adm_cd
						, house.grid_cd adm_nm
						, SUM(house.LK) AS HOU_LE_ORG_CNT
						, SUM(house.SK) AS HOU_EQ_SCA_CNT
						, SUM(house.D1) AS HOU_LE_ORG_SUM
						, SUM(house.D2) AS HOU_LE_SCA_SUM
						, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
					from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
					where  grid_cd in 
					 (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
					and  house.GRID_LEVEL_DIV='10k'
						
						and house.base_year=#{year}
						and ''||house.house_type = 'resid_type'
					group by house.grid_cd
			</if>
			<if test=' zoom == "4" or zoom=="5"  '>
					select 
						house.grid_cd adm_cd
						, house.grid_cd adm_nm
						, SUM(house.LK) AS HOU_LE_ORG_CNT
						, SUM(house.SK) AS HOU_EQ_SCA_CNT
						, SUM(house.D1) AS HOU_LE_ORG_SUM
						, SUM(house.D2) AS HOU_LE_SCA_SUM
						, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
					from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
					where  grid_cd in 
					 (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  ) 
					and  house.GRID_LEVEL_DIV='10k'
						
						and house.base_year=#{year}
						and ''||house.house_type = 'resid_type'
					group by house.grid_cd
			</if>
			<if test=' zoom=="6" or zoom=="7" '>
					select 
						house.grid_cd adm_cd
						, house.grid_cd adm_nm
						, SUM(house.LK) AS HOU_LE_ORG_CNT
						, SUM(house.SK) AS HOU_EQ_SCA_CNT
						, SUM(house.D1) AS HOU_LE_ORG_SUM
						, SUM(house.D2) AS HOU_LE_SCA_SUM
						, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
					from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
					where  grid_cd in 
						( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd = 
							(
								select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
								from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_1k_cd = #{adm_cd} 
									and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}
						) 
					and house.GRID_LEVEL_DIV='1k'
						
						and house.base_year=#{year}
						and ''||house.house_type = 'resid_type'
					group by house.grid_cd
			</if>
			<if test=' zoom=="8"  '>
					select 
						house.grid_cd adm_cd
						, house.grid_cd adm_nm
						, SUM(house.LK) AS HOU_LE_ORG_CNT
						, SUM(house.SK) AS HOU_EQ_SCA_CNT
						, SUM(house.D1) AS HOU_LE_ORG_SUM
						, SUM(house.D2) AS HOU_LE_SCA_SUM
						, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
					from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
					where  grid_cd in 
						( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd = 
							(
								select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
								from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}
						) 
					and house.GRID_LEVEL_DIV='500m'
						
						and house.base_year=#{year}
						and ''||house.house_type = 'resid_type'
					group by house.grid_cd
			</if>
			<if test='zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
					select 
						house.grid_cd adm_cd
						, house.grid_cd adm_nm
						, SUM(CASE WHEN house.RESID_CNT <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) AS HOU_LE_ORG_CNT
						, SUM(CASE WHEN house.BSCA = 5 THEN 1 ELSE 0 END) AS HOU_EQ_SCA_CNT
						, SUM(CASE WHEN house.RESID_CNT <![CDATA[<=]]> 5 THEN house.RESID_CNT ELSE 0 END) AS HOU_LE_ORG_SUM
						, SUM(CASE WHEN house.RESID_CNT <![CDATA[<=]]> 5 THEN house.BSCA ELSE 0 END) AS HOU_LE_SCA_SUM
						, SUM(CASE WHEN house.RESID_CNT <![CDATA[>]]> 5 THEN house.RESID_CNT ELSE 0 END) AS HOU_GT_ORG_SUM
					from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
					where  grid_cd in 
						( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
							(
								select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
								from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
								where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
							)
							and bord.base_year = #{bnd_year}
						) 
					and house.GRID_LEVEL_DIV='100m'
						
						and house.base_year=#{year}
						and ''||house.house_type = 'resid_type'
					group by house.grid_cd
			</if>
		</if>
		<if test='filter=="corp_cnt" or filter=="employee_cnt"'>
			<if test='zoom == "0"'>
				select 
					dat.grid_cd adm_cd
					, dat.grid_cd adm_nm
					, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
					, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
					, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
					, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
					, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
					, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
					, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
					, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
					, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
					, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
				from (
					select 
						a.grid_cd
						,a.corp_lk
						,a.corp_sk
						,a.corp_d1
						,a.corp_d2
						,a.corp_dd1z
						,a.employee_lk
						,a.employee_sk
						,a.employee_d1
						,a.employee_d2
						,a.employee_dd1z
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from srv_dt_grid_totidx_theme_bsca with (nolock) a
					where  grid_cd in 
					 (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid) 
					and a.GRID_LEVEL_DIV='100k'
						
						and a.base_year= #{year}
					) as dat
				inner join CMM_CD_CORPCLASS cls
					on dat.ksic_1_cd = cls.ksic_1_cd
						and dat.ksic_3_cd = cls.ksic_3_cd
						and dat.ksic_5_cd = cls.ksic_5_cd
				where
					dat.ksic_5_cd != '00000'
						and cls.class_deg = #{class_deg}
				group by dat.grid_cd
			</if>
			<if test='zoom=="1" or zoom=="2" or  zoom=="3"'>
				select 
					dat.grid_cd adm_cd
					, dat.grid_cd adm_nm
					, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
					, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
					, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
					, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
					, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
					, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
					, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
					, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
					, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
					, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
				from (
					select 
						a.grid_cd
						,a.corp_lk
						,a.corp_sk
						,a.corp_d1
						,a.corp_d2
						,a.corp_dd1z
						,a.employee_lk
						,a.employee_sk
						,a.employee_d1
						,a.employee_d2
						,a.employee_dd1z
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from srv_dt_grid_totidx_theme_bsca with (nolock) a
					where  grid_cd in 						
						(select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
						and a.GRID_LEVEL_DIV='10k'
						
						and a.base_year=#{year}
					) as dat
				inner join CMM_CD_CORPCLASS cls
					on dat.ksic_1_cd = cls.ksic_1_cd
						and dat.ksic_3_cd = cls.ksic_3_cd
						and dat.ksic_5_cd = cls.ksic_5_cd
				where dat.ksic_5_cd != '00000'
					and cls.class_deg = #{class_deg}
				group by dat.grid_cd
			</if>
			<if test='zoom == "4" or zoom=="5"'>
				select 
					dat.grid_cd as adm_cd
					,dat.grid_cd as adm_nm
					, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
					, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
					, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
					, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
					, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
					, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
					, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
					, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
					, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
					, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
				from 
					(
						select 
							a.grid_cd
							,a.corp_lk
							,a.corp_sk
							,a.corp_d1
							,a.corp_d2
							,a.corp_dd1z
							,a.employee_lk
							,a.employee_sk
							,a.employee_d1
							,a.employee_d2
							,a.employee_dd1z
							,a.ksic_1_cd
							,a.ksic_3_cd
							,a.ksic_5_cd
						from srv_dt_grid_totidx_theme_bsca with (nolock) a
						where  grid_cd in 
						 (
							select 
								grid_10k_cd 
							from srv_pg_sidobord with (nolock) bord
								, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1
								and bord.sido_cd = 
									(
										select min(sido_cd) as bnd_grid_adm_cd
										from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
										where st_intersects(bord.lighten_bord, grid.bord) = 1 
											and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
									)
								and bord.base_year = #{year}
							) 
							and a.grid_level_div = '10k'
									
							and a.base_year = #{year}
						) as dat
					inner join CMM_CD_CORPCLASS cls
						on dat.ksic_1_cd = cls.ksic_1_cd
							and dat.ksic_3_cd = cls.ksic_3_cd
							and dat.ksic_5_cd = cls.ksic_5_cd
					where dat.ksic_5_cd != '00000'
						and cls.class_deg = #{class_deg}
					group by dat.grid_cd
			</if>
			<if test=' zoom=="6" or zoom=="7" '>
				select 
					dat.grid_cd as adm_cd
					,dat.grid_cd as adm_nm
					, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
					, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
					, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
					, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
					, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
					, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
					, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
					, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
					, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
					, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
				from (
					select 
						a.grid_cd
						,a.corp_lk
						,a.corp_sk
						,a.corp_d1
						,a.corp_d2
						,a.corp_dd1z
						,a.employee_lk
						,a.employee_sk
						,a.employee_d1
						,a.employee_d2
						,a.employee_dd1z
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from srv_dt_grid_totidx_theme_bsca with (nolock) a
						where  grid_cd in 
						 (
							select 
								grid_1k_cd 
							from srv_pg_sggbord with (nolock) bord
								, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1
								and bord.sido_cd||bord.sgg_cd= 
									(
										select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
										from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
										where st_intersects(bord.lighten_bord, grid.bord) = 1 
											and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
									)
								and bord.base_year = #{year}
						) 
					and
						a.grid_level_div = '1k'
						
						and a.base_year = #{year}
				) dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
				and dat.ksic_3_cd = cls.ksic_3_cd
				and dat.ksic_5_cd = cls.ksic_5_cd
			where dat.ksic_5_cd != '00000'
				and cls.class_deg = #{class_deg}
			group by dat.grid_cd
		</if>
		<if test=' zoom=="8" '>
			select 
				dat.grid_cd as adm_cd
				,dat.grid_cd as adm_nm
				, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
				, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
				, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
				, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
				, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
				, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
				, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
				, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
				, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
				, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
			from (
				select 
					a.grid_cd
					,a.corp_lk
					,a.corp_sk
					,a.corp_d1
					,a.corp_d2
					,a.corp_dd1z
					,a.employee_lk
					,a.employee_sk
					,a.employee_d1
					,a.employee_d2
					,a.employee_dd1z
					,a.ksic_1_cd
					,a.ksic_3_cd
					,a.ksic_5_cd
				from srv_dt_grid_totidx_theme_bsca with (nolock) a
					where  grid_cd in 
					 (
						select 
							grid_500m_cd 
						from srv_pg_sggbord with (nolock) bord
							, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1
							and bord.sido_cd||bord.sgg_cd= 
								(
									select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
									from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
									where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
								)
							and bord.base_year = #{year}
					) 
				and
					a.grid_level_div = '500m'
					
					and a.base_year = #{year}
			) dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
				and dat.ksic_3_cd = cls.ksic_3_cd
				and dat.ksic_5_cd = cls.ksic_5_cd
			where dat.ksic_5_cd != '00000'
				and cls.class_deg = #{class_deg}
			group by dat.grid_cd
		</if>
		<if test='zoom=="9" or zoom=="10" or zoom=="11" or zoom=="12" or  zoom=="13"  '>
			select 
				dat.grid_cd as adm_cd
				,dat.grid_cd as adm_nm
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[<=]]> 3 THEN 1 ELSE 0 END) AS COR_LE_ORG_CNT
				, SUM(CASE WHEN dat.CORP_BSCA = 3 THEN 1 ELSE 0 END) AS COR_EQ_SCA_CNT
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[<=]]> 3 THEN dat.CORP_CNT ELSE 0 END) AS COR_LE_ORG_SUM
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[<=]]> 3 THEN dat.CORP_BSCA ELSE 0 END) AS COR_LE_SCA_SUM
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[>]]> 3 THEN dat.CORP_CNT ELSE 0 END) AS COR_GT_ORG_SUM
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[<=]]> 3 THEN 1 ELSE 0 END) AS EMP_LE_ORG_CNT
				, SUM(CASE WHEN dat.EMPLOYEE_BSCA = 3 THEN 1 ELSE 0 END) AS EMP_EQ_SCA_CNT
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[<=]]> 3 THEN dat.EMPLOYEE_CNT ELSE 0 END) AS EMP_LE_ORG_SUM
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[<=]]> 3 THEN dat.EMPLOYEE_BSCA ELSE 0 END) AS EMP_LE_SCA_SUM
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[>]]> 3 THEN dat.EMPLOYEE_CNT ELSE 0 END) AS EMP_GT_ORG_SUM
			from 
				(
					select 
						a.grid_cd
						,a.CORP_CNT
						,a.CORP_BSCA
						,a.EMPLOYEE_CNT
						,a.EMPLOYEE_BSCA
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from  srv_dt_grid_totidx_theme_bsca with (nolock) a 
					where  grid_cd in 	
						 (
							select 
								grid_100m_cd 
							from srv_pg_admbord with (nolock) bord
								, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1
								and bord.sido_cd||bord.sgg_cd||bord.emdong_cd= 
									(
										select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
										from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
										where st_intersects(bord.lighten_bord, grid.bord) = 1 
										and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
									)
								and bord.base_year = #{year}
						) 
					and
						a.grid_level_div = '100m'
						
						and a.base_year = #{year}
				) as dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
				and dat.ksic_3_cd = cls.ksic_3_cd
				and dat.ksic_5_cd = cls.ksic_5_cd
			where
				dat.ksic_5_cd != '00000'
				and cls.class_deg = #{class_deg}
				<choose>
					<when test='theme_cd != null and theme_cd != ""'>
				and cls.theme_cd = #{theme_cd}
					</when>
					<otherwise>
						<if test='ksic_1_cd != null'>
				and cls.ksic_1_cd = #{ksic_1_cd}
						</if>
						<if test='ksic_5_cd != null'>
				and cls.ksic_5_cd like #{ksic_5_cd} || '%'
						</if>
					</otherwise>
				</choose>
				group by dat.grid_cd
			</if>
		</if>
	</select>
	
	
	<!-- 행정구역 그리드 인구주택총조사(인구조건) -->
	<select id="innersearchpopulation_bnd_grid" parameterType="hashmap" resultType="hashmap">
		<if test='zoom == "0"  '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.LK) AS POP_LE_ORG_CNT
				, SUM(a.SK) AS POP_EQ_SCA_CNT
				, SUM(a.D1) AS POP_LE_ORG_SUM
				, SUM(a.D2) AS POP_LE_SCA_SUM
				, SUM(a.DD1Z) AS POP_GT_ORG_SUM
			from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
			 (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) 
			and a.GRID_LEVEL_DIV='100k'
				
				and a.base_year=#{year}
				<if test='gender != "0" '>
					and a.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and a.AGE_GROUP_CD between #{age_from} and #{age_to}
				</if>
			group by a.grid_cd
		</if>
		<if test='  zoom=="1" or zoom=="2" or zoom=="3" '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.LK) AS POP_LE_ORG_CNT
				, SUM(a.SK) AS POP_EQ_SCA_CNT
				, SUM(a.D1) AS POP_LE_ORG_SUM
				, SUM(a.D2) AS POP_LE_SCA_SUM
				, SUM(a.DD1Z) AS POP_GT_ORG_SUM
			from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
			 (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
			and a.GRID_LEVEL_DIV='10k'
				
				and a.base_year=#{year}
				<if test='gender != "0" '>
					and a.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and a.AGE_GROUP_CD between #{age_from} and #{age_to}
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom == "4" or zoom=="5" '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.LK) AS POP_LE_ORG_CNT
				, SUM(a.SK) AS POP_EQ_SCA_CNT
				, SUM(a.D1) AS POP_LE_ORG_SUM
				, SUM(a.D2) AS POP_LE_SCA_SUM
				, SUM(a.DD1Z) AS POP_GT_ORG_SUM
			from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
			 (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
				where st_intersects(bord.lighten_bord, grid.bord) = 1 
					and bord.sido_cd = 
					(
						select min(sido_cd) as bnd_grid_adm_cd
						from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
					)
					and bord.base_year = #{bnd_year} ) 
			and a.GRID_LEVEL_DIV='10k'
				
				and a.base_year=#{year}
				<if test='gender != "0" '>
					and a.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and a.AGE_GROUP_CD between #{age_from} and #{age_to}
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom=="6" or zoom=="7"'>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.LK) AS POP_LE_ORG_CNT
				, SUM(a.SK) AS POP_EQ_SCA_CNT
				, SUM(a.D1) AS POP_LE_ORG_SUM
				, SUM(a.D2) AS POP_LE_SCA_SUM
				, SUM(a.DD1Z) AS POP_GT_ORG_SUM
			from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
				(select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
				) 
			and a.GRID_LEVEL_DIV='1k'
				
				and a.base_year=#{year}
				<if test='gender != "0" '>
					and a.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and a.AGE_GROUP_CD between #{age_from} and #{age_to}
				</if>
			group by a.grid_cd
		</if>
		<if test='zoom=="8"'>
			select
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.LK) AS POP_LE_ORG_CNT
				, SUM(a.SK) AS POP_EQ_SCA_CNT
				, SUM(a.D1) AS POP_LE_ORG_SUM
				, SUM(a.D2) AS POP_LE_SCA_SUM
				, SUM(a.DD1Z) AS POP_GT_ORG_SUM
			from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
				(select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
				) 
			and a.GRID_LEVEL_DIV='500m'
				
				and a.base_year=#{year}
				<if test='gender != "0" '>
					and a.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and a.AGE_GROUP_CD between #{age_from} and #{age_to}
				</if>
			group by a.grid_cd
		</if>
		<!--  
			<if test=' year == "2000" or year == "2005" or year == "2010" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a
				where  grid_cd in 
					( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) 
				and a.GRID_LEVEL_DIV='500m'
					
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a
				where  grid_cd in 
					(select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) 
				and a.GRID_LEVEL_DIV='500m'
					
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
		</if>
		-->
		<!--  
		<if test='  zoom == "9" or zoom=="10"'>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a
				where  grid_cd in 
					(select grid_500m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) 
				and a.GRID_LEVEL_DIV='500m'
					
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
				where  grid_cd in 
					(select grid_500m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) 
				and a.GRID_LEVEL_DIV='500m'
					
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
		</if>
		-->
		<if test='zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) AS POP_LE_ORG_CNT
				, SUM(CASE WHEN a.BSCA = 5 THEN 1 ELSE 0 END) AS POP_EQ_SCA_CNT
				, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[<=]]> 5 THEN a.PPLTN_CNT ELSE 0 END) AS POP_LE_ORG_SUM
				, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[<=]]> 5 THEN a.BSCA ELSE 0 END) AS POP_LE_SCA_SUM
				, SUM(CASE WHEN a.PPLTN_CNT <![CDATA[>]]> 5 THEN a.PPLTN_CNT ELSE 0 END) AS POP_GT_ORG_SUM
			from SRV_DT_GRID_POPS_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
				(select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
					and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
					(
						select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
						from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
					)
					and bord.base_year = #{bnd_year}  
				) 
			and a.GRID_LEVEL_DIV='100m'
				
				and a.base_year=#{year}
				<if test='gender != "0" '>
					and a.gender=#{gender}
				</if>
				<if test='age_from != null '>
					and a.AGE_GROUP_CD between #{age_from} and #{age_to}
				</if>
			group by a.grid_cd
		<!--  
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2010_LT with (nolock) a, 
					(select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(PPLTN_CNT) population
				from SRV_DT_GRID_POPS_2015_MT with (nolock) a, 
					(select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='gender != "0" '>
						and a.gender=#{gender}
					</if>
					<if test='age_from != null '>
						and a.AGE_GROUP_CD between #{age_from} and #{age_to}
					</if>
				group by a.grid_cd
			</if>
			-->
		</if>
	</select>

	<!-- 행정구역 그리드 인구주택총조사(가구) -->
	<select id="household_bnd_grid" parameterType="hashmap" resultType="hashmap">
		<if test='zoom == "0" '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
				, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
				, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
				, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
				, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
			from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
			 (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) 
			and a.GRID_LEVEL_DIV='100k'
				
				and a.base_year=#{year}
				<if test='household_type != null '>
					and a.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
			group by a.grid_cd
		</if>
		<if test='  zoom=="1" or zoom=="2" or  zoom=="3" '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
				, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
				, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
				, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
				, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
			from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
			 (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
			and  a.GRID_LEVEL_DIV='10k'
				
				and a.base_year=#{year}
				<if test='household_type != null '>
					and a.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
			group by a.grid_cd
		</if>
		<if test='  zoom == "4" or zoom=="5"  '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
				, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
				, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
				, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
				, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
			from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
			(select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
				where st_intersects(bord.lighten_bord, grid.bord) = 1 
					and bord.sido_cd = 
					(
						select min(sido_cd) as bnd_grid_adm_cd
						from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
					)
					and bord.base_year = #{bnd_year}  
			) 
				and a.GRID_LEVEL_DIV='10k'
				
				and a.base_year=#{year}
				<if test='household_type != null '>
					and a.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom=="6" or zoom=="7"'>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
				, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
				, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
				, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
				, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
			from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
				( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
					and bord.sido_cd||bord.sgg_cd = 
					(
						select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
						from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
					)
					and bord.base_year = #{bnd_year}
				) 
			and a.GRID_LEVEL_DIV='1k'
				
				and a.base_year=#{year}
				<if test='household_type != null '>
					and a.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom=="8"   '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(a.FAMILY_LK) AS FAM_LE_ORG_CNT
				, SUM(a.FAMILY_SK) AS FAM_EQ_SCA_CNT
				, SUM(a.FAMILY_D1) AS FAM_LE_ORG_SUM
				, SUM(a.FAMILY_D2) AS FAM_LE_SCA_SUM
				, SUM(a.FAMILY_DD1Z) AS FAM_GT_ORG_SUM
			from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
			( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
				where st_intersects(bord.lighten_bord, grid.bord) = 1 
					and bord.sido_cd||bord.sgg_cd = 
					(
						select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
						from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
					)
					and bord.base_year = #{bnd_year}
			) 
				and a.GRID_LEVEL_DIV='500m'
				
				and a.base_year=#{year}
				<if test='household_type != null '>
					and a.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
			group by a.grid_cd
		</if>
			<!--  
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, 
					( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  a.GRID_LEVEL_DIV='500m'
					and a.grid_cd = b.grid_500m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, 
					( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  a.GRID_LEVEL_DIV='500m'
					and a.grid_cd = b.grid_500m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
		</if>
		-->
		<!--  
		<if test='  zoom == "9" or zoom=="10"'>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, 
					( select grid_500m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} 
					) b
				where  a.GRID_LEVEL_DIV='500m'
					and a.grid_cd = b.grid_500m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a, 
					( select grid_500m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  a.GRID_LEVEL_DIV='500m'
					and a.grid_cd = b.grid_500m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			
		</if>
		-->
		<if test='zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			select 
				a.grid_cd adm_cd
				, a.grid_cd adm_nm
				, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) AS FAM_LE_ORG_CNT
				, SUM(CASE WHEN a.FAMILY_BSCA = 5 THEN 1 ELSE 0 END) AS FAM_EQ_SCA_CNT
				, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[<=]]> 5 THEN a.FAMILY_CNT ELSE 0 END) AS FAM_LE_ORG_SUM
				, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[<=]]> 5 THEN a.FAMILY_BSCA ELSE 0 END) AS FAM_LE_SCA_SUM
				, SUM(CASE WHEN a.FAMILY_CNT <![CDATA[>]]> 5 THEN a.FAMILY_CNT ELSE 0 END) AS FAM_GT_ORG_SUM
			from SRV_DT_GRID_FAMILY_2015_MT_BSCA with (nolock) a
			where  grid_cd in 
				( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
				) 
			and a.GRID_LEVEL_DIV='100m'
				
				and a.base_year=#{year}
				<if test='household_type != null '>
					and a.rd_household_type in
					<foreach collection="household_type" item="household" open="(" separator="," close=")">
						#{household}
					</foreach>
				</if>
			group by a.grid_cd				
		<!--  
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2010_LT with (nolock) a, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} 
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select a.grid_cd adm_cd, a.grid_cd adm_nm,  sum(family_cnt) household_cnt
				from SRV_DT_GRID_FAMILY_2015_MT with (nolock) a, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  a.GRID_LEVEL_DIV='100m'
					and a.grid_cd = b.grid_100m_cd
					and a.base_year=#{year}
					<if test='household_type != null '>
						and a.rd_household_type in
						<foreach collection="household_type" item="household" open="(" separator="," close=")">
							#{household}
						</foreach>
					</if>
				group by a.grid_cd
			</if>
			-->
		</if>
		
	</select>
	
	<select id="house_bnd_grid" parameterType="hashmap" resultType="hashmap">
		<if test='zoom == "0"  '>
			select 
				house.grid_cd adm_cd
				, house.grid_cd adm_nm
				, SUM(house.LK) AS HOU_LE_ORG_CNT
				, SUM(house.SK) AS HOU_EQ_SCA_CNT
				, SUM(house.D1) AS HOU_LE_ORG_SUM
				, SUM(house.D2) AS HOU_LE_SCA_SUM
				, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
			from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
			where  grid_cd in 
			 (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) 
				and  house.GRID_LEVEL_DIV='100k'
				
				and house.base_year=#{year}
				<choose>
					<when test='statType == "tot"'>
						and ''||house.house_type = 'resid_type'
					</when>
					<otherwise>
						<if test='house_type != null'> 
							AND (''||house.HOUSE_TYPE = 'resid_type' AND house.HOUSE_TYPE_CD in
							<foreach  collection="house_type" item="houseType" open="(" separator="," close=")">
						 		#{houseType}	
						 	</foreach>	
						)	
						</if>
						<if test='const_year != null and const_year != ""'>
							and (house.HOUSE_TYPE = 'const_year' and house.HOUSE_TYPE_CD = #{const_year})
						</if>			
						<if test='house_area_cd != null '>
							AND (''||house.HOUSE_TYPE = 'area'
								and house.HOUSE_TYPE_CD in
							<foreach  collection="house_area_cd" item="houseAreaCd" open="(" separator="," close=")">
								#{houseAreaCd}
							</foreach>
						)
						</if>
				</otherwise>
			</choose>
			group by house.grid_cd
		</if>
		<if test=' zoom=="1" or zoom=="2" or  zoom=="3"  '>
			select 
				house.grid_cd adm_cd
				, house.grid_cd adm_nm
				, SUM(house.LK) AS HOU_LE_ORG_CNT
				, SUM(house.SK) AS HOU_EQ_SCA_CNT
				, SUM(house.D1) AS HOU_LE_ORG_SUM
				, SUM(house.D2) AS HOU_LE_SCA_SUM
				, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
			from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
			where  grid_cd in 
			 (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
			and house.GRID_LEVEL_DIV='10k'
				
				and house.base_year=#{year}
				<choose>
					<when test='statType == "tot"'>
					and ''||house.house_type = 'resid_type'		
					</when>
					<otherwise>
						<if test='house_type != null'> 
							AND (''||house.HOUSE_TYPE = 'resid_type' AND house.HOUSE_TYPE_CD in
							<foreach  collection="house_type" item="houseType" open="(" separator="," close=")">
						 		#{houseType}	
						 	</foreach>	
							)	
						</if>
						<if test='const_year != null and const_year != ""'>
						and (house.HOUSE_TYPE = 'const_year' and house.HOUSE_TYPE_CD = #{const_year})
						</if>			
						<if test='house_area_cd != null '>
						AND (''||house.HOUSE_TYPE = 'area'
							and house.HOUSE_TYPE_CD in
							<foreach  collection="house_area_cd" item="houseAreaCd" open="(" separator="," close=")">
								#{houseAreaCd}
							</foreach>
						)
						</if>
					</otherwise>
				</choose>
			group by house.grid_cd
		</if>
		<if test=' zoom == "4" or zoom=="5"  '>
			select 
				house.grid_cd adm_cd
				, house.grid_cd adm_nm
				, SUM(house.LK) AS HOU_LE_ORG_CNT
				, SUM(house.SK) AS HOU_EQ_SCA_CNT
				, SUM(house.D1) AS HOU_LE_ORG_SUM
				, SUM(house.D2) AS HOU_LE_SCA_SUM
				, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
			from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
			where  grid_cd in 
			 (select grid_10k_cd from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
				where st_intersects(bord.lighten_bord, grid.bord) = 1 
					and bord.sido_cd = 
					(
						select min(sido_cd) as bnd_grid_adm_cd
						from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
					)
					and bord.base_year = #{bnd_year}  ) 
			and house.GRID_LEVEL_DIV='10k'
				
				and house.base_year=#{year}
				<choose>
			 		<when test='statType == "tot"'>
			 		and ''||house.house_type = 'resid_type'
			 		</when>
					<otherwise>
						<if test='house_type != null'> 
						AND (''||house.HOUSE_TYPE = 'resid_type' AND house.HOUSE_TYPE_CD in
							<foreach  collection="house_type" item="houseType" open="(" separator="," close=")">
						 		#{houseType}	
						 	</foreach>	
						)	
						</if>
						<if test='const_year != null and const_year != ""'>
							and (house.HOUSE_TYPE = 'const_year' and house.HOUSE_TYPE_CD = #{const_year})
						</if>			
						<if test='house_area_cd != null '>
							AND (''||house.HOUSE_TYPE = 'area'
								and house.HOUSE_TYPE_CD in
								<foreach  collection="house_area_cd" item="houseAreaCd" open="(" separator="," close=")">
								#{houseAreaCd}
								</foreach>
							)
						</if>
					</otherwise>
				</choose>
			group by house.grid_cd
		</if>
		<if test=' zoom=="6" or zoom=="7" '>
			select 
				house.grid_cd adm_cd
				, house.grid_cd adm_nm
				, SUM(house.LK) AS HOU_LE_ORG_CNT
				, SUM(house.SK) AS HOU_EQ_SCA_CNT
				, SUM(house.D1) AS HOU_LE_ORG_SUM
				, SUM(house.D2) AS HOU_LE_SCA_SUM
				, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
			from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
			where  grid_cd in 
				( select grid_1k_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
				) 
			and house.GRID_LEVEL_DIV='1k'
				
				and house.base_year=#{year}
				<choose>
					<when test='statType == "tot"'>
						and ''||house.house_type = 'resid_type'
					</when>
					<otherwise>
						<if test='house_type != null'> 
							AND (''||house.HOUSE_TYPE = 'resid_type' AND house.HOUSE_TYPE_CD in
							<foreach  collection="house_type" item="houseType" open="(" separator="," close=")">
						 		#{houseType}	
						 	</foreach>	
							)	
						</if>
						<if test='const_year != null and const_year != ""'>
						and (house.HOUSE_TYPE = 'const_year' and house.HOUSE_TYPE_CD = #{const_year})
						</if>			
						<if test='house_area_cd != null '>
						AND (''||house.HOUSE_TYPE = 'area'
							and house.HOUSE_TYPE_CD in
							<foreach  collection="house_area_cd" item="houseAreaCd" open="(" separator="," close=")">
								#{houseAreaCd}
							</foreach>
						)
						</if>
					</otherwise>
				</choose>
			group by house.grid_cd
		</if>
		<if test=' zoom=="8"   '>
			select 
				house.grid_cd adm_cd
				, house.grid_cd adm_nm
				, SUM(house.LK) AS HOU_LE_ORG_CNT
				, SUM(house.SK) AS HOU_EQ_SCA_CNT
				, SUM(house.D1) AS HOU_LE_ORG_SUM
				, SUM(house.D2) AS HOU_LE_SCA_SUM
				, SUM(house.DD1Z) AS HOU_GT_ORG_SUM
			from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
			where  grid_cd in 
				( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
			) 
			and house.GRID_LEVEL_DIV='500m'
				
				and house.base_year=#{year}
				<choose>
					<when test='statType == "tot"'>
					and ''||house.house_type = 'resid_type'
					</when>
					<otherwise>
						<if test='house_type != null'> 
						AND (''||house.HOUSE_TYPE = 'resid_type' AND house.HOUSE_TYPE_CD in
							<foreach  collection="house_type" item="houseType" open="(" separator="," close=")">
						 		#{houseType}	
						 	</foreach>	
							)	
						</if>
						<if test='const_year != null and const_year != ""'>
						and (house.HOUSE_TYPE = 'const_year' and house.HOUSE_TYPE_CD = #{const_year})
						</if>			
						<if test='house_area_cd != null '>
						AND (''||house.HOUSE_TYPE = 'area'
							and house.HOUSE_TYPE_CD in
							<foreach  collection="house_area_cd" item="houseAreaCd" open="(" separator="," close=")">
								#{houseAreaCd}
							</foreach>
						)
						</if>
					</otherwise>
				</choose>
			group by house.grid_cd
			<!--  
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, 
					( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  house.GRID_LEVEL_DIV='500m'
					and house.grid_cd = b.grid_500m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, 
					( select grid_500m_cd from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  house.GRID_LEVEL_DIV='500m'
					and house.grid_cd = b.grid_500m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			-->
		</if>
		<!--  
		<if test='  zoom == "9" or zoom=="10"'>
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, 
					( select grid_500m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} 
					) b
				where  house.GRID_LEVEL_DIV='500m'
					and house.grid_cd = b.grid_500m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house, 
					( select grid_500m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  house.GRID_LEVEL_DIV='500m'
					and house.grid_cd = b.grid_500m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
				group by house.grid_cd
			</if>
		</if>
		-->
		<if test='zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			select 
				house.grid_cd adm_cd
				, house.grid_cd adm_nm
				, SUM(CASE WHEN house.RESID_CNT <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) AS HOU_LE_ORG_CNT
				, SUM(CASE WHEN house.BSCA = 5 THEN 1 ELSE 0 END) AS HOU_EQ_SCA_CNT
				, SUM(CASE WHEN house.RESID_CNT <![CDATA[<=]]> 5 THEN house.RESID_CNT ELSE 0 END) AS HOU_LE_ORG_SUM
				, SUM(CASE WHEN house.RESID_CNT <![CDATA[<=]]> 5 THEN house.BSCA ELSE 0 END) AS HOU_LE_SCA_SUM
				, SUM(CASE WHEN house.RESID_CNT <![CDATA[>]]> 5 THEN house.RESID_CNT ELSE 0 END) AS HOU_GT_ORG_SUM
			from SRV_DT_GRID_HOUSE_2015_MT_BSCA with (nolock) house
			where  grid_cd in 
				( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
				) 
			and house.GRID_LEVEL_DIV='100m'
				
				and house.base_year=#{year}
				<choose>
					<when test='statType == "tot"'>
						and ''||house.house_type = 'resid_type'
					</when>
					<otherwise>
						<if test='house_type != null'> 
							AND (''||house.HOUSE_TYPE = 'resid_type' AND house.HOUSE_TYPE_CD in
								<foreach  collection="house_type" item="houseType" open="(" separator="," close=")">
						 			#{houseType}	
						 		</foreach>	
							)	
						</if>
						<if test='const_year != null and const_year != ""'>
							and (house.HOUSE_TYPE = 'const_year' and house.HOUSE_TYPE_CD = #{const_year})
						</if>			
						<if test='house_area_cd != null '>
							AND (''||house.HOUSE_TYPE = 'area'
								and house.HOUSE_TYPE_CD in
								<foreach  collection="house_area_cd" item="houseAreaCd" open="(" separator="," close=")">
									#{houseAreaCd}
								</foreach>
								)
						</if>
					</otherwise>
				</choose>
				group by house.grid_cd
			<!--  
			<if test='year == "2000" or year == "2005" or year == "2010"'>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2010_LT with (nolock) house, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year} 
					) b
				where  house.GRID_LEVEL_DIV='100m'
					and house.grid_cd = b.grid_100m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='const_year != null '>
						and house.rd_const_year = #{const_year}
					</if>
				    <if test='house_area_param != null '>
				       and ${house_area_param}
				    </if> 
				group by house.grid_cd
			</if>
			<if test='year == "2015" or year == "2016"  or year == "2017"  or year == "2018"  or year == "2019" or year == "2020" '>
				select house.grid_cd adm_cd, house.grid_cd adm_nm,  sum(resid_cnt) house_cnt
				from SRV_DT_GRID_HOUSE_2015_MT with (nolock) house, 
					( select grid_100m_cd from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
						(
							select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
							from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
					) b
				where  house.GRID_LEVEL_DIV='100m'
					and house.grid_cd = b.grid_100m_cd
					and house.base_year=#{year}
					<if test='house_type != null '>
						and house.rd_resid_1_type in
						<foreach  collection="house_type" item="type" open="(" separator="," close=")">
							#{type}
						</foreach>
					</if>
					<if test='house_use_prid_cd != null '>
						and house.house_use_prid_cd = #{house_use_prid_cd}
					</if>
					<if test='house_area_cd != null '>
						and house.house_area_cd in
						<foreach  collection="house_area_cd" item="house_area_type" open="(" separator="," close=")">
							#{house_area_type}
						</foreach>
					</if>
					<if test='search_type != null '>
						and house.house_yn = #{search_type}
					</if>
				group by house.grid_cd
			</if>
			-->
		</if>
	</select>
	
	<!-- [START] 총조사주요표 관련 쿼리 -->
	<!-- 공통부분 정의 -->
	<sql id="cmmColumCensusIndex">
		BASE_YEAR                  AS BASE_YEAR
		, nvl(TOT_PPLTN, 0)        AS TOT_PPLTN
		, nvl(AVG_AGE, 0)          AS AVG_AGE
		, nvl(PPLTN_DNSTY, 0)      AS PPLTN_DNSTY
		, nvl(AGED_CHILD_IDX, 0)   AS AGED_CHILD_IDX
		, nvl(OLDAGE_SUPRT_PER, 0) AS OLDAGE_SUPRT_PER
		, nvl(JUV_SUPRT_PER, 0)    AS JUV_SUPRT_PER
		, nvl(TOT_FAMILY, 0)       AS TOT_FAMILY
		, nvl(AVG_FMEMBER_CNT, 0)  AS AVG_FMEMBER_CNT
		, nvl(TOT_HOUSE, 0)        AS TOT_HOUSE
		, nvl(NONGGA_CNT, 0)       AS NONGGA_CNT
		, nvl(NONGGA_PPLTN, 0)     AS NONGGA_PPLTN
		, nvl(IMGA_CNT, 0)         AS IMGA_CNT
		, nvl(IMGA_PPLTN, 0)       AS IMGA_PPLTN
		, nvl(NAESUOGA_CNT, 0)     AS NAESUOGA_CNT
		, nvl(NAESUOGA_PPLTN, 0)   AS NAESUOGA_PPLTN
		, nvl(HAESUOGA_CNT, 0)     AS HAESUOGA_CNT
		, nvl(HAESUOGA_PPLTN, 0)   AS HAESUOGA_PPLTN
		, to_int('0')              AS CORP_CNT
		, to_int('0')              AS EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumCensusIndexAdmCd">
		, INFO_DIV                 AS INFO_DIV
		, REGION_CD                AS REGION_CD
		, BORD_BASE_YEAR           AS BORD_BASE_YEAR
	</sql>
	<sql id="cmmColumCensusIndexTot">
		, TOT_REG_CD     AS TOT_REG_CD
	</sql>
	<sql id="cmmColumResultCensusIndex">
		ADM_CD             AS ADM_CD
		, ADM_NM           AS ADM_NM
		, CASE WHEN TOT_PPLTN <![CDATA[<=]]> 4 then 'N/A'
			 WHEN TOT_PPLTN <![CDATA[>]]> 4 then TOT_PPLTN end TOT_PPLTN
		, AVG_AGE          AS AVG_AGE
		, PPLTN_DNSTY      AS PPLTN_DNSTY
		, AGED_CHILD_IDX   AS AGED_CHILD_IDX
		, OLDAGE_SUPRT_PER AS OLDAGE_SUPRT_PER
		, JUV_SUPRT_PER    AS JUV_SUPRT_PER
		, CASE WHEN TOT_FAMILY <![CDATA[<=]]> 4 then 'N/A'
				WHEN TOT_FAMILY <![CDATA[>]]> 4 then TOT_FAMILY end TOT_FAMILY
		, AVG_FMEMBER_CNT  AS AVG_FMEMBER_CNT
		, CASE WHEN TOT_HOUSE <![CDATA[<=]]> 4 then 'N/A'
				WHEN TOT_HOUSE <![CDATA[>]]> 4 then TOT_HOUSE end TOT_HOUSE
	<!-- 2016.08.26 2015일 경우 데이터 표출 안함 .-->
		<!-- <if test='year != "2015"'> -->
		, CASE WHEN NONGGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN NONGGA_CNT <![CDATA[>]]> 4 then NONGGA_CNT end NONGGA_CNT
		, CASE WHEN NONGGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN NONGGA_PPLTN <![CDATA[>]]> 4 then NONGGA_PPLTN end NONGGA_PPLTN
		, CASE WHEN IMGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN IMGA_CNT <![CDATA[>]]> 4 then IMGA_CNT end IMGA_CNT
		, CASE WHEN IMGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN IMGA_PPLTN <![CDATA[>]]> 4 then IMGA_PPLTN end IMGA_PPLTN
		, CASE WHEN NAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN NAESUOGA_CNT <![CDATA[>]]> 4 then NAESUOGA_CNT end NAESUOGA_CNT
		, CASE WHEN NAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN NAESUOGA_PPLTN <![CDATA[>]]> 4 then NAESUOGA_PPLTN end NAESUOGA_PPLTN
		, CASE WHEN HAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN HAESUOGA_CNT <![CDATA[>]]> 4 then HAESUOGA_CNT end HAESUOGA_CNT
		, CASE WHEN HAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
				WHEN HAESUOGA_PPLTN <![CDATA[>]]> 4 then HAESUOGA_PPLTN end HAESUOGA_PPLTN
		<!-- </if> -->
		<!-- 2016. 03. 24 j.h.Seok modify -->
		<!-- 2016. 03. 31 j.h.Seok modify -->
		<!-- , CORP_CNT AS CORP_CNT -->
		, CASE WHEN CORP_CNT <![CDATA[<=]]> 4 then 'N/A'
				WHEN CORP_CNT <![CDATA[>]]> 4 then CORP_CNT end CORP_CNT
		, CASE WHEN EMPLOYEE_CNT <![CDATA[<=]]> 4 then 'N/A'
				ELSE EMPLOYEE_CNT end EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumCorpCensusIndex">
		BASE_YEAR        AS BASE_YEAR
		, to_int('0')    AS TOT_PPLTN
		, to_number('0') AS AVG_AGE
		, to_number('0') AS PPLTN_DNSTY
		, to_number('0') AS AGED_CHILD_IDX
		, to_number('0') AS OLDAGE_SUPRT_PER
		, to_number('0') AS JUV_SUPRT_PER
		, to_int('0')    AS TOT_FAMILY
		, to_number('0') AS AVG_FMEMBER_CNT
		, to_int('0')    AS TOT_HOUSE
		, to_int('0')    AS NONGGA_CNT
		, to_int('0')    AS NONGGA_PPLTN
		, to_int('0')    AS IMGA_CNT
		, to_int('0')    AS IMGA_PPLTN
		, to_int('0')    AS NAESUOGA_CNT
		, to_int('0')    AS NAESUOGA_PPLTN
		, to_int('0')    AS HAESUOGA_CNT
		, to_int('0')    AS HAESUOGA_PPLTN
		, CORP_CNT       AS CORP_CNT
		, EMPLOYEE_CNT   AS EMPLOYEE_CNT
	</sql>
	<sql id="cmmColumSumCensusIndex">
		ADDR.ADM_CD             AS ADM_CD
		, ADDR.ADM_NM           AS ADM_NM
		, sum(TOT_PPLTN)        AS TOT_PPLTN
		, sum(AVG_AGE)          AS AVG_AGE
		, sum(PPLTN_DNSTY)      AS PPLTN_DNSTY
		, sum(AGED_CHILD_IDX)   AS AGED_CHILD_IDX
		, sum(OLDAGE_SUPRT_PER) AS OLDAGE_SUPRT_PER
		, sum(JUV_SUPRT_PER)    AS JUV_SUPRT_PER
		, sum(TOT_FAMILY)       AS TOT_FAMILY
		, sum(AVG_FMEMBER_CNT)  AS AVG_FMEMBER_CNT
		, sum(TOT_HOUSE)        AS TOT_HOUSE
		, sum(NONGGA_CNT)       AS NONGGA_CNT
		, sum(NONGGA_PPLTN)     AS NONGGA_PPLTN
		, sum(IMGA_CNT)         AS IMGA_CNT
		, sum(IMGA_PPLTN)       AS IMGA_PPLTN
		, sum(NAESUOGA_CNT)     AS NAESUOGA_CNT
		, sum(NAESUOGA_PPLTN)   AS NAESUOGA_PPLTN
		, sum(HAESUOGA_CNT)     AS HAESUOGA_CNT
		, sum(HAESUOGA_PPLTN)   AS HAESUOGA_PPLTN
		, sum(CORP_CNT)         AS CORP_CNT
		, sum(EMPLOYEE_CNT)     AS EMPLOYEE_CNT
	</sql>
	
	<select id="censusIndexSidoAll" parameterType="hashmap" resultType="hashmap">
		<choose>
			<when test="low_search == 0">
				SELECT
					  CASE WHEN TOT_PPLTN <![CDATA[<=]]> 4 then 'N/A'
						 WHEN TOT_PPLTN <![CDATA[>]]> 4 then TOT_PPLTN end TOT_PPLTN
					, AVG_AGE          AS AVG_AGE
					, PPLTN_DNSTY      AS PPLTN_DNSTY
					, AGED_CHILD_IDX   AS AGED_CHILD_IDX
					, OLDAGE_SUPRT_PER AS OLDAGE_SUPRT_PER
					, JUV_SUPRT_PER    AS JUV_SUPRT_PER
					, CASE WHEN TOT_FAMILY <![CDATA[<=]]> 4 then 'N/A'
							WHEN TOT_FAMILY <![CDATA[>]]> 4 then TOT_FAMILY end TOT_FAMILY
					, AVG_FMEMBER_CNT  AS AVG_FMEMBER_CNT
					, CASE WHEN TOT_HOUSE <![CDATA[<=]]> 4 then 'N/A'
							WHEN TOT_HOUSE <![CDATA[>]]> 4 then TOT_HOUSE end TOT_HOUSE
					, CASE WHEN NONGGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN NONGGA_CNT <![CDATA[>]]> 4 then NONGGA_CNT end NONGGA_CNT
					, CASE WHEN NONGGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN NONGGA_PPLTN <![CDATA[>]]> 4 then NONGGA_PPLTN end NONGGA_PPLTN
					, CASE WHEN IMGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN IMGA_CNT <![CDATA[>]]> 4 then IMGA_CNT end IMGA_CNT
					, CASE WHEN IMGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN IMGA_PPLTN <![CDATA[>]]> 4 then IMGA_PPLTN end IMGA_PPLTN
					, CASE WHEN NAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN NAESUOGA_CNT <![CDATA[>]]> 4 then NAESUOGA_CNT end NAESUOGA_CNT
					, CASE WHEN NAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN NAESUOGA_PPLTN <![CDATA[>]]> 4 then NAESUOGA_PPLTN end NAESUOGA_PPLTN
					, CASE WHEN HAESUOGA_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN HAESUOGA_CNT <![CDATA[>]]> 4 then HAESUOGA_CNT end HAESUOGA_CNT
					, CASE WHEN HAESUOGA_PPLTN <![CDATA[<=]]> 4 then 'N/A'
							WHEN HAESUOGA_PPLTN <![CDATA[>]]> 4 then HAESUOGA_PPLTN end HAESUOGA_PPLTN
					, CASE WHEN CORP_CNT <![CDATA[<=]]> 4 then 'N/A'
							WHEN CORP_CNT <![CDATA[>]]> 4 then CORP_CNT end CORP_CNT
					, CASE WHEN EMPLOYEE_CNT <![CDATA[<=]]> 4 then 'N/A'
							ELSE EMPLOYEE_CNT end EMPLOYEE_CNT
				FROM (
					SELECT
						  TOT_PPLTN
						, AVG_AGE
						, PPLTN_DNSTY
						, AGED_CHILD_IDX
						, OLDAGE_SUPRT_PER
						, JUV_SUPRT_PER
						, TOT_FAMILY
						, AVG_FMEMBER_CNT
						, TOT_HOUSE
						, NONGGA_CNT
						, NONGGA_PPLTN
						, IMGA_CNT
						, IMGA_PPLTN
						, NAESUOGA_CNT
						, NAESUOGA_PPLTN
						, HAESUOGA_CNT
						, HAESUOGA_PPLTN
						, CORP_CNT
						, EMPLOYEE_CNT
					FROM (
						SELECT 
							<include refid="cmmColumCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
						WHERE
								BASE_YEAR          = #{year}
								AND BORD_BASE_YEAR = #{bnd_year}
								AND INFO_DIV       = #{info_div}
						UNION ALL
						SELECT
							<include refid="cmmColumCorpCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
						where
							BASE_YEAR          = #{year}
							AND BORD_BASE_YEAR = #{bnd_year}
							AND INFO_DIV       = #{info_div}
					) CENSUSINDEX
				)
			</when>
			<otherwise>
				SELECT
					<include refid="cmmColumResultCensusIndex" />
				FROM (
					SELECT
						<include refid="cmmColumSumCensusIndex" />
					FROM (
						SELECT 
							<include refid="cmmColumCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CENSUS_INDEX with (nolock) CENSUSINDEX
						WHERE
								BASE_YEAR          = #{year}
								AND BORD_BASE_YEAR = #{bnd_year}
								AND INFO_DIV       = #{info_div}
						UNION ALL
						SELECT
							<include refid="cmmColumCorpCensusIndex" />
							<include refid="cmmColumCensusIndexAdmCd" />
						FROM SRV_DT_CORPCENSUS_INDEX with (nolock) 
						where
							BASE_YEAR          = #{year}
							AND BORD_BASE_YEAR = #{bnd_year}
							AND INFO_DIV       = #{info_div}
					) CENSUSINDEX
					INNER JOIN (
						SELECT DISTINCT
								SIDO_CD   AS ADM_CD
								, SIDO_NM AS ADM_NM
						FROM 
								SRV_PG_ADMBORD with (nolock) 
						WHERE
							BASE_YEAR = #{bnd_year}
					) ADDR
							ON CENSUSINDEX.REGION_CD = ADDR.ADM_CD
					GROUP BY ADM_CD, ADM_NM
				)
			</otherwise>
		</choose>
		
	</select>
	
	<select id="corp_bnd_grid" parameterType="hashmap" resultType="hashmap">
		<if test='zoom == "0"'>
			select 
				dat.grid_cd adm_cd
				, dat.grid_cd adm_nm
				, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
				, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
				, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
				, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
				, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
				, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
				, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
				, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
				, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
				, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
			from (
				select 
					a.grid_cd
					,a.corp_lk
					,a.corp_sk
					,a.corp_d1
					,a.corp_d2
					,a.corp_dd1z
					,a.employee_lk
					,a.employee_sk
					,a.employee_d1
					,a.employee_d2
					,a.employee_dd1z
					,a.ksic_1_cd
					,a.ksic_3_cd
					,a.ksic_5_cd
				from srv_dt_grid_totidx_theme_bsca with (nolock) a
				where  grid_cd in 
				 (select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid) 
					and a.GRID_LEVEL_DIV='100k'
					
					and a.base_year= #{year}
				) as dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
					and dat.ksic_3_cd = cls.ksic_3_cd
					and dat.ksic_5_cd = cls.ksic_5_cd
			where
				dat.ksic_5_cd != '00000'
					and cls.class_deg = #{class_deg}
					<choose>
						<when test='theme_cd != null and theme_cd != ""'>
							and cls.theme_cd = #{theme_cd}
						</when>
					<otherwise>
						<if test='ksic_1_cd != null'>
							and cls.ksic_1_cd = #{ksic_1_cd}
						</if>
						<if test='ksic_5_cd != null'>
							and cls.ksic_5_cd like #{ksic_5_cd} || '%'
						</if>
					</otherwise>
				</choose>
			group by dat.grid_cd
		</if>
		<if test='zoom=="1" or zoom=="2" or  zoom=="3"'>
			select 
				dat.grid_cd adm_cd
				, dat.grid_cd adm_nm
				, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
				, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
				, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
				, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
				, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
				, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
				, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
				, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
				, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
				, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
			from (
				select 
					a.grid_cd
					,a.corp_lk
					,a.corp_sk
					,a.corp_d1
					,a.corp_d2
					,a.corp_dd1z
					,a.employee_lk
					,a.employee_sk
					,a.employee_d1
					,a.employee_d2
					,a.employee_dd1z
					,a.ksic_1_cd
					,a.ksic_3_cd
					,a.ksic_5_cd
				from srv_dt_grid_totidx_theme_bsca with (nolock) a
					where  grid_cd in 
					 (select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
				and a.GRID_LEVEL_DIV='10k'
					
					and a.base_year=#{year}

				) as dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
					and dat.ksic_3_cd = cls.ksic_3_cd
					and dat.ksic_5_cd = cls.ksic_5_cd
			where dat.ksic_5_cd != '00000'
				and cls.class_deg = #{class_deg}
				<choose>
					<when test='theme_cd != null and theme_cd != ""'>
						and cls.theme_cd = #{theme_cd}
					</when>
					<otherwise>
						<if test='ksic_1_cd != null'>
							and cls.ksic_1_cd = #{ksic_1_cd}
						</if>
						<if test='ksic_5_cd != null'>
							and cls.ksic_5_cd like #{ksic_5_cd} || '%'
						</if>
					</otherwise>
				</choose>
				group by dat.grid_cd
		</if>
		<if test='zoom == "4" or zoom=="5"'>
			select 
				dat.grid_cd as adm_cd
				,dat.grid_cd as adm_nm
				, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
				, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
				, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
				, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
				, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
				, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
				, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
				, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
				, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
				, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
			from 
				(
					select 
						a.grid_cd
						,a.corp_lk
						,a.corp_sk
						,a.corp_d1
						,a.corp_d2
						,a.corp_dd1z
						,a.employee_lk
						,a.employee_sk
						,a.employee_d1
						,a.employee_d2
						,a.employee_dd1z
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from srv_dt_grid_totidx_theme_bsca with (nolock) a
					where  grid_cd in 
					 (
						select 
							grid_10k_cd 
						from srv_pg_sidobord with (nolock) bord
							, srv_pg_grid_10k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1
							and bord.sido_cd = 
								(
									select min(sido_cd) as bnd_grid_adm_cd
									from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
									where st_intersects(bord.lighten_bord, grid.bord) = 1 
										and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
								)
							and bord.base_year = #{bnd_year}
						) 
					and
						a.grid_level_div = '10k'
							
							and a.base_year = #{year}

				) as dat
				inner join CMM_CD_CORPCLASS cls
					on dat.ksic_1_cd = cls.ksic_1_cd
						and dat.ksic_3_cd = cls.ksic_3_cd
						and dat.ksic_5_cd = cls.ksic_5_cd
				where dat.ksic_5_cd != '00000'
					and cls.class_deg = #{class_deg}
					<choose>
						<when test='theme_cd != null and theme_cd != ""'>
							and cls.theme_cd = #{theme_cd}
						</when>
						<otherwise>
							<if test='ksic_1_cd != null'>
								and cls.ksic_1_cd = #{ksic_1_cd}
							</if>
							<if test='ksic_5_cd != null'>
								and cls.ksic_5_cd like #{ksic_5_cd} || '%'
							</if>
						</otherwise>
					</choose>
				group by dat.grid_cd
		</if>
		<if test=' zoom=="6" or zoom=="7" '>
			select 
				dat.grid_cd as adm_cd
				,dat.grid_cd as adm_nm
				, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
				, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
				, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
				, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
				, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
				, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
				, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
				, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
				, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
				, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
			from (
				select 
					a.grid_cd
					,a.corp_lk
					,a.corp_sk
					,a.corp_d1
					,a.corp_d2
					,a.corp_dd1z
					,a.employee_lk
					,a.employee_sk
					,a.employee_d1
					,a.employee_d2
					,a.employee_dd1z
					,a.ksic_1_cd
					,a.ksic_3_cd
					,a.ksic_5_cd
				from srv_dt_grid_totidx_theme_bsca with (nolock) a
					where  grid_cd in 
					 (
						select 
							grid_1k_cd 
						from srv_pg_sggbord with (nolock) bord
							, srv_pg_grid_1k_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1
							and bord.sido_cd||bord.sgg_cd= 
								(
									select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
									from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
									where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
								)
							and bord.base_year = #{bnd_year}
					) 
				and
					a.grid_level_div = '1k'
					
					and a.base_year = #{year}
			) dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
				and dat.ksic_3_cd = cls.ksic_3_cd
				and dat.ksic_5_cd = cls.ksic_5_cd
			where dat.ksic_5_cd != '00000'
				and cls.class_deg = #{class_deg}
			<choose>
				<when test='theme_cd != null and theme_cd != ""'>
					and cls.theme_cd = #{theme_cd}
				</when>
				<otherwise>
					<if test='ksic_1_cd != null'>
						and cls.ksic_1_cd = #{ksic_1_cd}
					</if>
					<if test='ksic_5_cd != null'>
							and cls.ksic_5_cd like #{ksic_5_cd} || '%'
					</if>
				</otherwise>
			</choose>
			group by dat.grid_cd
		</if>
		<if test=' zoom=="8" '>
			select 
				dat.grid_cd as adm_cd
				,dat.grid_cd as adm_nm
				, SUM(dat.corp_lk) AS COR_LE_ORG_CNT
				, SUM(dat.corp_sk) AS COR_EQ_SCA_CNT
				, SUM(dat.corp_d1) AS COR_LE_ORG_SUM
				, SUM(dat.corp_d2) AS COR_LE_SCA_SUM
				, SUM(dat.corp_dd1z) AS COR_GT_ORG_SUM
				, SUM(dat.employee_lk) AS EMP_LE_ORG_CNT
				, SUM(dat.employee_sk) AS EMP_EQ_SCA_CNT
				, SUM(dat.employee_d1) AS EMP_LE_ORG_SUM
				, SUM(dat.employee_d2) AS EMP_LE_SCA_SUM
				, SUM(dat.employee_dd1z) AS EMP_GT_ORG_SUM
			from (
					select 
						a.grid_cd
						,a.corp_lk
						,a.corp_sk
						,a.corp_d1
						,a.corp_d2
						,a.corp_dd1z
						,a.employee_lk
						,a.employee_sk
						,a.employee_d1
						,a.employee_d2
						,a.employee_dd1z
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from srv_dt_grid_totidx_theme_bsca with (nolock) a
					where  grid_cd in 
					 (
						select 
							grid_500m_cd 
						from srv_pg_sggbord with (nolock) bord
							, srv_pg_grid_500m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1
							and bord.sido_cd||bord.sgg_cd= 
								(
									select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
									from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
									where st_intersects(bord.lighten_bord, grid.bord) = 1 
									and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
								)
							and bord.base_year = #{bnd_year}
					) 
					and 
						a.grid_level_div = '500m'
						
						and a.base_year = #{year}
				) dat
				inner join CMM_CD_CORPCLASS cls
					on dat.ksic_1_cd = cls.ksic_1_cd
					and dat.ksic_3_cd = cls.ksic_3_cd
					and dat.ksic_5_cd = cls.ksic_5_cd
				where
					dat.ksic_5_cd != '00000'
					and cls.class_deg = #{class_deg}
					<choose>
						<when test='theme_cd != null and theme_cd != ""'>
							and cls.theme_cd = #{theme_cd}
						</when>
						<otherwise>
							<if test='ksic_1_cd != null'>
								and cls.ksic_1_cd = #{ksic_1_cd}
							</if>
							<if test='ksic_5_cd != null'>
								and cls.ksic_5_cd like #{ksic_5_cd} || '%'
							</if>
						</otherwise>
					</choose>
				group by dat.grid_cd
		</if>
		<!--  
		<if test=' zoom=="9" or zoom=="10" '>
			select 
				dat.grid_cd as adm_cd
				,dat.grid_cd as adm_nm
				,sum(dat.corp_bsca) as corp_cnt
				,sum(dat.employee_bsca) as employee_cnt 
			from 
				(
					select 
						a.grid_cd
						,a.corp_bsca
						,a.employee_bsca
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from  srv_dt_grid_totidx_theme_bsca with (nolock) a 
						, (
							select 
								grid_500m_cd 
							from srv_pg_admbord with (nolock) bord
								, srv_pg_grid_500m_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1
								and bord.sido_cd||bord.sgg_cd||bord.emdong_cd= 
									(
										select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
										from srv_pg_admbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
										where st_intersects(bord.lighten_bord, grid.bord) = 1 
										and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{year}
									)
								and bord.base_year = #{year} 
						) b
					where 
						a.grid_level_div = '500m'
						and a.grid_cd = b.grid_500m_cd
						and a.base_year = #{year}
				) as dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
				and dat.ksic_3_cd = cls.ksic_3_cd
				and dat.ksic_5_cd = cls.ksic_5_cd
		where 
			cls.class_deg = #{class_deg}
			<if test='ksic_1_cd != null'>
			and cls.ksic_1_cd = #{ksic_1_cd}
			</if>
			<if test='ksic_5_cd != null'>
			and cls.ksic_5_cd like #{ksic_5_cd} || '%'
			</if>
		group by dat.grid_cd
		</if>
		-->
		<if test='zoom=="9" or zoom=="10" or zoom=="11" or zoom=="12" or  zoom=="13"  '>
			select 
				dat.grid_cd as adm_cd
				, dat.grid_cd as adm_nm
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[<=]]> 3 THEN 1 ELSE 0 END) AS COR_LE_ORG_CNT
				, SUM(CASE WHEN dat.CORP_BSCA = 3 THEN 1 ELSE 0 END) AS COR_EQ_SCA_CNT
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[<=]]> 3 THEN dat.CORP_CNT ELSE 0 END) AS COR_LE_ORG_SUM
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[<=]]> 3 THEN dat.CORP_BSCA ELSE 0 END) AS COR_LE_SCA_SUM
				, SUM(CASE WHEN dat.CORP_CNT <![CDATA[>]]> 3 THEN dat.CORP_CNT ELSE 0 END) AS COR_GT_ORG_SUM
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[<=]]> 3 THEN 1 ELSE 0 END) AS EMP_LE_ORG_CNT
				, SUM(CASE WHEN dat.EMPLOYEE_BSCA = 3 THEN 1 ELSE 0 END) AS EMP_EQ_SCA_CNT
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[<=]]> 3 THEN dat.EMPLOYEE_CNT ELSE 0 END) AS EMP_LE_ORG_SUM
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[<=]]> 3 THEN dat.EMPLOYEE_BSCA ELSE 0 END) AS EMP_LE_SCA_SUM
				, SUM(CASE WHEN dat.EMPLOYEE_CNT <![CDATA[>]]> 3 THEN dat.EMPLOYEE_CNT ELSE 0 END) AS EMP_GT_ORG_SUM
			from 
				(
					select 
						a.grid_cd
						,a.corp_cnt
						,a.CORP_BSCA
						,a.employee_cnt
						,a.EMPLOYEE_BSCA
						,a.ksic_1_cd
						,a.ksic_3_cd
						,a.ksic_5_cd
					from srv_dt_grid_totidx_theme_bsca with (nolock) a 
					where  grid_cd in 
					 (
						select 
							grid_100m_cd 
						from srv_pg_admbord with (nolock) bord
							, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1
							and bord.sido_cd||bord.sgg_cd||bord.emdong_cd= 
								(
									select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
									from srv_pg_admbord with (nolock) bord, srv_pg_grid_100m_bord with (nolock) grid
									where st_intersects(bord.lighten_bord, grid.bord) = 1 
										and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
									)
							and bord.base_year = #{bnd_year}
					) 
					and 
						a.grid_level_div = '100m'
						
						and a.base_year = #{year}
			) as dat
			inner join CMM_CD_CORPCLASS cls
				on dat.ksic_1_cd = cls.ksic_1_cd
					and dat.ksic_3_cd = cls.ksic_3_cd
					and dat.ksic_5_cd = cls.ksic_5_cd
			where
				dat.ksic_5_cd != '00000'
				and cls.class_deg = #{class_deg}
				<choose>
					<when test='theme_cd != null and theme_cd != ""'>
						and cls.theme_cd = #{theme_cd}
					</when>
					<otherwise>
						<if test='ksic_1_cd != null'>
							and cls.ksic_1_cd = #{ksic_1_cd}
						</if>
						<if test='ksic_5_cd != null'>
							and cls.ksic_5_cd like #{ksic_5_cd} || '%'
						</if>
					</otherwise>
				</choose>
			group by dat.grid_cd
	</if>
</select>
	<!-- 농림어업총조사  -->
	<select id="3f_household_bnd_grid" parameterType="hashmap" resultType="hashmap">
		<if test='zoom == "0"  '>
				select 
				a.grid_cd as adm_cd
				, a.grid_cd as adm_nm
				, SUM(a.LK) AS threef_LE_ORG_CNT
				, SUM(a.SK) AS threef_EQ_SCA_CNT
				, SUM(a.D1) AS threef_LE_ORG_SUM
				, SUM(a.D2) AS threef_LE_SCA_SUM
				, SUM(a.DD1Z) AS threef_GT_ORG_SUM
			<choose>
				<when test = 'filter == "population"'>
					from srv_dt_grid_nongimogacensusfamily_bsca a
				</when>
				<otherwise>
					from srv_dt_grid_nongimogacensusfamilycnt_bsca a
				</otherwise>
			</choose>	
				where  grid_cd in 
				(select grid_100k_cd from srv_pg_grid_100k_bord with (nolock) grid ) 
			and a.GRID_LEVEL_DIV='100k'
				
				and a.base_year = #{year}
				<if test ='filter == "population"'>
				<choose>
					<when test='statType == "tot"'>
						and a.gender in ('1','2') 
					</when>
					<otherwise>
						<if test='gender != "0" and gender != null '>
							and a.gender = #{gender}
						</if>
						<if test='age_from != null '>
							and a.age_group_cd between #{age_from} and #{age_to}
						</if>
					</otherwise>
				</choose>
				</if>
				<if test='data_type != 0 '>
						and a.data_type = #{data_type}
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom=="1" or zoom=="2" or  zoom=="3"  '>
			select 
				a.grid_cd as adm_cd
				, a.grid_cd as adm_nm
				, SUM(a.LK) AS threef_LE_ORG_CNT
				, SUM(a.SK) AS threef_EQ_SCA_CNT
				, SUM(a.D1) AS threef_LE_ORG_SUM
				, SUM(a.D2) AS threef_LE_SCA_SUM
				, SUM(a.DD1Z) AS threef_GT_ORG_SUM
			<choose>
				<when test = 'filter == "population"'>
					from srv_dt_grid_nongimogacensusfamily_bsca a
				</when>
				<otherwise>
					from srv_dt_grid_nongimogacensusfamilycnt_bsca a
				</otherwise>
			</choose>
			where  grid_cd in 
				(select grid_10k_cd from srv_pg_grid_10k_bord with (nolock) grid ) 
			and  a.GRID_LEVEL_DIV='10k'
				
				and a.base_year = #{year}
				<if test ='filter == "population"'>
					<choose>
						<when test='statType == "tot"'>
							and a.gender in ('1','2') 
						</when>
						<otherwise>
							<if test='gender != "0" and gender != null '>
								and a.gender = #{gender}
							</if>
							<if test='age_from != null '>
								and a.age_group_cd between #{age_from} and #{age_to}
							</if>
						</otherwise>
					</choose>
				</if>
				<if test='data_type != 0 '>
						and a.data_type = #{data_type}
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom == "4" or zoom=="5"  '>
			select 
				a.grid_cd as adm_cd
				, a.grid_cd as adm_nm
				, SUM(a.LK) AS threef_LE_ORG_CNT
				, SUM(a.SK) AS threef_EQ_SCA_CNT
				, SUM(a.D1) AS threef_LE_ORG_SUM
				, SUM(a.D2) AS threef_LE_SCA_SUM
				, SUM(a.DD1Z) AS threef_GT_ORG_SUM
			<choose>
				<when test = 'filter == "population"'>
					from srv_dt_grid_nongimogacensusfamily_bsca a
				</when>
				<otherwise>
					from srv_dt_grid_nongimogacensusfamilycnt_bsca a
				</otherwise>
			</choose>
			where  grid_cd in 
				(
					select grid_10k_cd 
					from srv_pg_sidobord with (nolock) bord
						, srv_pg_grid_10k_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1
						and bord.sido_cd = 
						(
							select min(sido_cd) as bnd_grid_adm_cd
							from srv_pg_sidobord with (nolock) bord, srv_pg_grid_10k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_10k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}
				) 
			and a.GRID_LEVEL_DIV='10k'
					
				and a.base_year = #{year}
				<if test ='filter == "population"'>
					<choose>
						<when test='statType == "tot"'>
							and a.gender in ('1','2') 
						</when>
						<otherwise>
							<if test='gender != "0" and gender != null '>
								and a.gender = #{gender}
							</if>
							<if test='age_from != null '>
								and a.age_group_cd between #{age_from} and #{age_to}
							</if>
						</otherwise>
					</choose>
				</if>
				<if test='data_type != 0 '>
						and a.data_type = #{data_type}
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom=="6" or zoom=="7" '>
			select 
				a.grid_cd as adm_cd
				, a.grid_cd as adm_nm
				, SUM(a.LK) AS threef_LE_ORG_CNT
				, SUM(a.SK) AS threef_EQ_SCA_CNT
				, SUM(a.D1) AS threef_LE_ORG_SUM
				, SUM(a.D2) AS threef_LE_SCA_SUM
				, SUM(a.DD1Z) AS threef_GT_ORG_SUM
			<choose>
				<when test = 'filter == "population"'>
					from srv_dt_grid_nongimogacensusfamily_bsca a
				</when>
				<otherwise>
					from srv_dt_grid_nongimogacensusfamilycnt_bsca a
				</otherwise>
			</choose>
			where  grid_cd in 
				(
					select grid_1k_cd 
					from srv_pg_sggbord with (nolock) bord
						, srv_pg_grid_1k_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and bord.sido_cd||bord.sgg_cd = 
						(
							select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
							from srv_pg_sggbord with (nolock) bord, srv_pg_grid_1k_bord with (nolock) grid
							where st_intersects(bord.lighten_bord, grid.bord) = 1 
								and grid.grid_1k_cd = #{adm_cd} and bord.base_year = #{bnd_year}
						)
						and bord.base_year = #{bnd_year}  
				) 
			and a.GRID_LEVEL_DIV='1k'
				
				and a.base_year = #{year}
				<if test ='filter == "population"'> 
					<choose>
						<when test='statType == "tot"'>
							and a.gender in ('1','2') 
						</when>
						<otherwise>
							<if test='gender != "0" and gender != null '>
							and a.gender = #{gender}
							</if>
							<if test='age_from != null '>
							and a.age_group_cd between #{age_from} and #{age_to}
							</if>
						</otherwise>
					</choose>
				</if>
				<if test='data_type != 0 '>
						and a.data_type = #{data_type}
				</if>
			group by a.grid_cd
		</if>
		<if test=' zoom=="8"   '>
			select 
				a.grid_cd as adm_cd
				, a.grid_cd as adm_nm
				, SUM(a.LK) AS threef_LE_ORG_CNT
				, SUM(a.SK) AS threef_EQ_SCA_CNT
				, SUM(a.D1) AS threef_LE_ORG_SUM
				, SUM(a.D2) AS threef_LE_SCA_SUM
				, SUM(a.DD1Z) AS threef_GT_ORG_SUM
			<choose>
				<when test = 'filter == "population"'>
					from srv_dt_grid_nongimogacensusfamily_bsca a
				</when>
				<otherwise>
					from srv_dt_grid_nongimogacensusfamilycnt_bsca a
				</otherwise>
			</choose>
			where  grid_cd in 
			(
				select grid_500m_cd 
				from srv_pg_sggbord with (nolock) bord
				, srv_pg_grid_500m_bord with (nolock) grid
				where st_intersects(bord.lighten_bord, grid.bord) = 1 
				and bord.sido_cd||bord.sgg_cd = 
				(
					select min(sido_cd||sgg_cd) as bnd_grid_adm_cd
					from srv_pg_sggbord with (nolock) bord, srv_pg_grid_500m_bord with (nolock) grid
					where st_intersects(bord.lighten_bord, grid.bord) = 1 
						and grid.grid_500m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
				)
				and bord.base_year = #{bnd_year}  
			) 
			and  a.GRID_LEVEL_DIV='500m'
				
				and a.base_year = #{year}
				<if test ='filter == "population"'>
					<choose>
						<when test='statType == "tot"'>
							and a.gender in ('1','2') 
						</when>
						<otherwise>
							<if test='gender != "0" and gender != null '>
								and a.gender = #{gender}
							</if>
							<if test='age_from != null '>
								and a.age_group_cd between #{age_from} and #{age_to}
							</if>
						</otherwise>
					</choose>
				</if>
				<if test='data_type != 0 '>
						and a.data_type = #{data_type}
				</if>
			group by a.grid_cd
		</if>
		<if test='zoom == "9" or zoom=="10" or zoom == "11" or zoom=="12" or zoom == "13" '>
			select 
				a.grid_cd as adm_cd
				, a.grid_cd as adm_nm
				<choose>
					<when test = 'filter == "population"'>
					, sum(case when a.ppltn_cnt <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) as threef_LE_ORG_CNT
					, SUM(case when a.bsca = 5 THEN 1 ELSE 0 END) AS threef_EQ_SCA_CNT
					, SUM(case when a.ppltn_cnt <![CDATA[<=]]> 5 THEN a.PPLTN_CNT ELSE 0 END) AS threef_LE_ORG_SUM
					, SUM(case when a.ppltn_cnt <![CDATA[<=]]> 5 THEN a.BSCA ELSE 0 END) AS threef_LE_SCA_SUM
					, SUM(case when a.ppltn_cnt <![CDATA[>]]> 5 THEN a.PPLTN_CNT ELSE 0 END) AS threef_GT_ORG_SUM
					</when>
					<otherwise>
					, sum(case when a.family_cnt <![CDATA[<=]]> 5 THEN 1 ELSE 0 END) as threef_LE_ORG_CNT
					, SUM(case when a.bsca = 5 THEN 1 ELSE 0 END) AS threef_EQ_SCA_CNT
					, SUM(case when a.family_cnt <![CDATA[<=]]> 5 THEN a.family_cnt ELSE 0 END) AS threef_LE_ORG_SUM
					, SUM(case when a.family_cnt <![CDATA[<=]]> 5 THEN a.BSCA ELSE 0 END) AS threef_LE_SCA_SUM
					, SUM(case when a.family_cnt <![CDATA[>]]> 5 THEN a.family_cnt ELSE 0 END) AS threef_GT_ORG_SUM
					
					</otherwise>
				</choose>
				
			<choose>
				<when test = 'filter == "population"'>
					from srv_dt_grid_nongimogacensusfamily_bsca a
				</when>
				<otherwise>
					from srv_dt_grid_nongimogacensusfamilycnt_bsca a
				</otherwise>
			</choose>
			where  grid_cd in 
			(
				select grid_100m_cd 
				from srv_pg_admbord with (nolock) bord
					, srv_pg_grid_100m_bord with (nolock) grid
				where st_intersects(bord.lighten_bord, grid.bord) = 1 
					and bord.sido_cd||bord.sgg_cd||bord.emdong_cd = 
					(
						select min(sido_cd||sgg_cd||emdong_cd) as bnd_grid_adm_cd
						from srv_pg_admbord with (nolock) bord
							, srv_pg_grid_100m_bord with (nolock) grid
						where st_intersects(bord.lighten_bord, grid.bord) = 1 
							and grid.grid_100m_cd = #{adm_cd} and bord.base_year = #{bnd_year}
					)
					and bord.base_year = #{bnd_year}  
			) 
			and a.GRID_LEVEL_DIV='100m'
				
				and a.base_year = #{year}
				<if test ='filter == "population"'>
					<choose>
						<when test='statType == "tot"'>
							and a.gender in ('1','2') 
						</when>
						<otherwise>
							<if test='gender != "0" and gender != null '>
								and a.gender = #{gender}
							</if>
							<if test='age_from != null '>
								and a.age_group_cd between #{age_from} and #{age_to}
							</if>
						</otherwise>
					</choose>
				</if>
				<if test='data_type != 0 '>
						and a.data_type = #{data_type}
				</if>
			group by a.grid_cd
		</if>
	</select>
	<!-- SGIS4_0107 수정 끝-->	
	<!-- SGIS_4 행정구역 그리드(500m 격자 및 BSCA 적용) 끝--> 	 	
</mapper>
